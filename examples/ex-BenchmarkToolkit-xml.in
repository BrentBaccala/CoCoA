<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Benchmarks>
    <Environments>
		<Environment>
			<Name>unused_example</Name>
			<Indeterminates>x,y,z,u,v,t,d,w</Indeterminates>
			<NrIndeterminates>8</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
            	<Ordering>
					<OrderingType>Matrix</OrderingType>
					<GradingDim>0</GradingDim>
					<IntegerMatrix>
							8 8
							1   1   1   1   1   1   1   1
							1   0   0   0   0   0   0   0
							0   1   0   0   0   0   0   0
							0   0   1   0   0   0   0   0
							0   0   0   1   0   0   0   0
							0   0   0   0   1   0   0   0
							0   0   0   0   0   1   0   0
							0   0   0   0   0   0   1   0
					</IntegerMatrix>
				</Ordering>
				<Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
				<Ordering><OrderingType>DegLex</OrderingType></Ordering>
				<Ordering><OrderingType>Lex</OrderingType></Ordering>
			</Orderings>
		</Environment>
        <Environment>
            <Name>rings_with_3_vars</Name>
            <NrIndeterminates>3</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_4_vars</Name>
            <NrIndeterminates>4</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_5_vars</Name>
            <NrIndeterminates>5</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_6_vars</Name>
            <NrIndeterminates>6</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_7_vars</Name>
            <NrIndeterminates>7</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_8_vars</Name>
            <NrIndeterminates>8</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_9_vars</Name>
            <NrIndeterminates>9</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_10_vars</Name>
            <NrIndeterminates>10</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_11_vars</Name>
            <NrIndeterminates>11</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_12_vars</Name>
            <NrIndeterminates>12</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_13_vars</Name>
            <NrIndeterminates>13</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_14_vars</Name>
            <NrIndeterminates>14</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_16_vars</Name>
            <NrIndeterminates>16</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_20_vars</Name>
            <NrIndeterminates>20</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
        <Environment>
            <Name>rings_with_34_vars</Name>
            <NrIndeterminates>34</NrIndeterminates>
            <Rings>
                <Ring><Name>NewZZmod</Name><Characteristic>32003</Characteristic></Ring>
                <Ring><Name>NewZZmod</Name><Characteristic>2</Characteristic></Ring>
                <Ring><Name>RingQQ</Name><Characteristic>0</Characteristic></Ring>
            </Rings>
            <Orderings>
                <Ordering><OrderingType>DegRevLex</OrderingType></Ordering>
                <Ordering><OrderingType>DegLex</OrderingType></Ordering>
                <Ordering><OrderingType>Lex</OrderingType></Ordering>
            </Orderings>
        </Environment>
    </Environments>
    <Examples>
        <Example>
            <ID>assur44</ID>
            <Name>Assur44</Name>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, assur44, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>x^2+u^2-1,y^2+v^2-1,z^2+r^2-1,w^2+s^2-1,4*(2*x*y*z-2*x*y*r-4*x*y-2*x*z*v-2*x*v*r-3*x*v+6*x+2*y*z*u+6*y*z+2*y*u*r+3*y*u-6*y*r-12*y+2*z*u*v-6*z*v-z-2*u*v*r-4*u*v-6*v*r-9*v+7*r+12),-8*x*y*w+16*x*y*s+8*x*y-16*x*w*v-8*x*v*s-12*x*v-28*x+16*y*w*u-32*y*w+8*y*u*s+12*y*u-86*y*s-73*y-8*w*u*v+86*w*v+16*w+16*u*v*s+8*u*v-30*u-32*v*s+12*v+28*s+112,2*(140*x*y*z-490*x*y*w+700*x*y*r-980*x*y*s+28*x*y+700*x*z*v+980*x*w*v-140*x*v*r-490*x*v*s-1134*x*v+392*x-700*y*z*u+3430*y*z-980*y*w*u+3430*y*w+140*y*u*r+490*y*u*s+1134*y*u+770*y*r-4165*y*s-5047*y+3150*z*w+140*z*u*v+770*z*v-2450*z*s-4030*z-490*w*u*v+4165*w*v-2450*w*r-5740*w+700*u*v*r-980*u*v*s+28*u*v-882*u-3430*v*r+3430*v*s-2394*v-3150*r*s+910*r+2695*s+9899),280*z*w-240*z-336*w-280*r*s+391</Equations>
            <GBasisLen>87</GBasisLen>
            <HilbertPolynomial>56</HilbertPolynomial>
            <Polynomials>
				8
				
				3
				1    2 0 0 0 0 0 0 0 
				1    0 0 0 0 2 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				3
				1    0 2 0 0 0 0 0 0 
				1    0 0 0 0 0 2 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				3
				1    0 0 2 0 0 0 0 0 
				1    0 0 0 0 0 0 2 0 
				-1    0 0 0 0 0 0 0 0 
				
				3
				1    0 0 0 2 0 0 0 0 
				1    0 0 0 0 0 0 0 2 
				-1    0 0 0 0 0 0 0 0 
				
				22
				8    1 1 1 0 0 0 0 0 
				8    0 1 1 0 1 0 0 0 
				-8    1 0 1 0 0 1 0 0 
				8    0 0 1 0 1 1 0 0 
				-8    1 1 0 0 0 0 1 0 
				8    0 1 0 0 1 0 1 0 
				-8    1 0 0 0 0 1 1 0 
				-8    0 0 0 0 1 1 1 0 
				-16    1 1 0 0 0 0 0 0 
				24    0 1 1 0 0 0 0 0 
				12    0 1 0 0 1 0 0 0 
				-12    1 0 0 0 0 1 0 0 
				-24    0 0 1 0 0 1 0 0 
				-16    0 0 0 0 1 1 0 0 
				-24    0 1 0 0 0 0 1 0 
				-24    0 0 0 0 0 1 1 0 
				24    1 0 0 0 0 0 0 0 
				-48    0 1 0 0 0 0 0 0 
				-4    0 0 1 0 0 0 0 0 
				-36    0 0 0 0 0 1 0 0 
				28    0 0 0 0 0 0 1 0 
				48    0 0 0 0 0 0 0 0 
				
				23
				-8    1 1 0 1 0 0 0 0 
				16    0 1 0 1 1 0 0 0 
				-16    1 0 0 1 0 1 0 0 
				-8    0 0 0 1 1 1 0 0 
				16    1 1 0 0 0 0 0 1 
				8    0 1 0 0 1 0 0 1 
				-8    1 0 0 0 0 1 0 1 
				16    0 0 0 0 1 1 0 1 
				8    1 1 0 0 0 0 0 0 
				-32    0 1 0 1 0 0 0 0 
				12    0 1 0 0 1 0 0 0 
				-12    1 0 0 0 0 1 0 0 
				86    0 0 0 1 0 1 0 0 
				8    0 0 0 0 1 1 0 0 
				-86    0 1 0 0 0 0 0 1 
				-32    0 0 0 0 0 1 0 1 
				-28    1 0 0 0 0 0 0 0 
				-73    0 1 0 0 0 0 0 0 
				16    0 0 0 1 0 0 0 0 
				-30    0 0 0 0 1 0 0 0 
				12    0 0 0 0 0 1 0 0 
				28    0 0 0 0 0 0 0 1 
				112    0 0 0 0 0 0 0 0 
				
				41
				280    1 1 1 0 0 0 0 0 
				-980    1 1 0 1 0 0 0 0 
				-1400    0 1 1 0 1 0 0 0 
				-1960    0 1 0 1 1 0 0 0 
				1400    1 0 1 0 0 1 0 0 
				1960    1 0 0 1 0 1 0 0 
				280    0 0 1 0 1 1 0 0 
				-980    0 0 0 1 1 1 0 0 
				1400    1 1 0 0 0 0 1 0 
				280    0 1 0 0 1 0 1 0 
				-280    1 0 0 0 0 1 1 0 
				1400    0 0 0 0 1 1 1 0 
				-1960    1 1 0 0 0 0 0 1 
				980    0 1 0 0 1 0 0 1 
				-980    1 0 0 0 0 1 0 1 
				-1960    0 0 0 0 1 1 0 1 
				56    1 1 0 0 0 0 0 0 
				6860    0 1 1 0 0 0 0 0 
				6860    0 1 0 1 0 0 0 0 
				6300    0 0 1 1 0 0 0 0 
				2268    0 1 0 0 1 0 0 0 
				-2268    1 0 0 0 0 1 0 0 
				1540    0 0 1 0 0 1 0 0 
				8330    0 0 0 1 0 1 0 0 
				56    0 0 0 0 1 1 0 0 
				1540    0 1 0 0 0 0 1 0 
				-4900    0 0 0 1 0 0 1 0 
				-6860    0 0 0 0 0 1 1 0 
				-8330    0 1 0 0 0 0 0 1 
				-4900    0 0 1 0 0 0 0 1 
				6860    0 0 0 0 0 1 0 1 
				-6300    0 0 0 0 0 0 1 1 
				784    1 0 0 0 0 0 0 0 
				-10094    0 1 0 0 0 0 0 0 
				-8060    0 0 1 0 0 0 0 0 
				-11480    0 0 0 1 0 0 0 0 
				-1764    0 0 0 0 1 0 0 0 
				-4788    0 0 0 0 0 1 0 0 
				1820    0 0 0 0 0 0 1 0 
				5390    0 0 0 0 0 0 0 1 
				19798    0 0 0 0 0 0 0 0 
				
				5
				280    0 0 1 1 0 0 0 0 
				-280    0 0 0 0 0 0 1 1 
				-240    0 0 1 0 0 0 0 0 
				-336    0 0 0 1 0 0 0 0 
				391    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>benchmark_i1</ID>
            <Name>Benchmark_i1</Name>
            <Variables>x,y,z,w,u,v,r,s,t,p</Variables>
            <TagsList>DevRevLex, DegLex, Lex, benchmark_i1, with_10_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_10_vars</TestEnvironment>
            <Equations>100000000*x-25428722-18324757*w*z*t,100000000*y-37842197-16275449*x*p*v,100000000*z-27162577-16955071*x*y*p,50000000*w-9903957-7792658*r*x*v,12500000*u-5520841-2493865*r*v*z,100000000*v-14654113-18922793*s*u*p,100000000*r-42937161-21180484*y*u*s,50000000*s-3528219-8540604*r*x*v,50000000*t-17252453-9806370*p*v*s,50000000*p-21325551-10733272*w*s*x</Equations>
            <GBasisLen>118</GBasisLen>
            <HilbertPolynomial>66</HilbertPolynomial>
            <Polynomials>
				10
				
				3
				-18324757    0 0 1 1 0 0 0 0 1 0 
				100000000    1 0 0 0 0 0 0 0 0 0 
				-25428722    0 0 0 0 0 0 0 0 0 0 
				
				3
				-16275449    1 0 0 0 0 1 0 0 0 1 
				100000000    0 1 0 0 0 0 0 0 0 0 
				-37842197    0 0 0 0 0 0 0 0 0 0 
				
				3
				-16955071    1 1 0 0 0 0 0 0 0 1 
				100000000    0 0 1 0 0 0 0 0 0 0 
				-27162577    0 0 0 0 0 0 0 0 0 0 
				
				3
				-7792658    1 0 0 0 0 1 1 0 0 0 
				50000000    0 0 0 1 0 0 0 0 0 0 
				-9903957    0 0 0 0 0 0 0 0 0 0 
				
				3
				-2493865    0 0 1 0 0 1 1 0 0 0 
				12500000    0 0 0 0 1 0 0 0 0 0 
				-5520841    0 0 0 0 0 0 0 0 0 0 
				
				3
				-18922793    0 0 0 0 1 0 0 1 0 1 
				100000000    0 0 0 0 0 1 0 0 0 0 
				-14654113    0 0 0 0 0 0 0 0 0 0 
				
				3
				-21180484    0 1 0 0 1 0 0 1 0 0 
				100000000    0 0 0 0 0 0 1 0 0 0 
				-42937161    0 0 0 0 0 0 0 0 0 0 
				
				3
				-8540604    1 0 0 0 0 1 1 0 0 0 
				50000000    0 0 0 0 0 0 0 1 0 0 
				-3528219    0 0 0 0 0 0 0 0 0 0 
				
				3
				-9806370    0 0 0 0 0 1 0 1 0 1 
				50000000    0 0 0 0 0 0 0 0 1 0 
				-17252453    0 0 0 0 0 0 0 0 0 0 
				
				3
				-10733272    1 0 0 1 0 0 0 1 0 0 
				50000000    0 0 0 0 0 0 0 0 0 1 
				-21325551    0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>boon</ID>
            <Name>Boon</Name>
            <Description>\textbf{Title}: Neurofysiology, posted by Sjirk Boon\\ \textbf{Symmetry group}: g2 s2 g1 s1 C2 C1, g1 s1 g2 s2 C1 C2, s2 g2 s1 g1 C2 C1, s1 g1 s2 g2 C1 C2, -s1 s2 -g1 g2 -C1 C2, s1 -s2 g1 -g2 C1</Description>
            <References>\begin{itemize} \item The system has been posted to the newsgroup sci.math.num-analysis by Sjirk Boon.\item P. Van Hentenryck, D. McAllester and D. Kapur: `Solving Polynomial Systems Using a Branch and Prune Approach' SIAM J. Numerical Analysis, Vol. 34, No. 2, pp 797-827, 1997.\end{itemize}</References>
            <Notes>There are only 8 finite solutions for general values of the constant terms. It can be proved that it is equivalent to a quadrature formula problem, so that there is only one solution upon symmetry.</Notes>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, boon, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>z^2+u^2-1,w^2+v^2-1,5*x*z^3+5*y*w^3-6,5*x*u^3+5*y*v^3-6,10*x*z^2*u+10*y*w^2*v-7,10*x*z*u^2+10*y*w*v^2-7</Equations>
            <GBasisLen>12</GBasisLen>
            <HilbertPolynomial>8</HilbertPolynomial>
            <Polynomials>
				6
				
				3
				1    0 0 2 0 0 0 
				1    0 0 0 0 2 0 
				-1    0 0 0 0 0 0 
				
				3
				1    0 0 0 2 0 0 
				1    0 0 0 0 0 2 
				-1    0 0 0 0 0 0 
				
				3
				5    1 0 3 0 0 0 
				5    0 1 0 3 0 0 
				-6    0 0 0 0 0 0 
				
				3
				5    1 0 0 0 3 0 
				5    0 1 0 0 0 3 
				-6    0 0 0 0 0 0 
				
				3
				10    1 0 2 0 1 0 
				10    0 1 0 2 0 1 
				-7    0 0 0 0 0 0 
				
				3
				10    1 0 1 0 2 0 
				10    0 1 0 1 0 2 
				-7    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>butcher</ID>
            <Name>Butcher</Name>
            <Description>\textbf{Title}: Butcher's problem</Description>
            <References>\begin{itemize}\item The example has been retrieved from the POSSO test suite, available by anonymous ftp from the site gauss.dm.unipi.it.\end{itemize}</References>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, butcher, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>2*w*r+2*u*z+2*v*y-2*r^2-r-1,-3*w*r^2-w+3*u^2*z+3*v^2*y+3*r^3+3*r^2+4*r,-6*w*r^2-3*w*r-w+6*v*x*z+6*r^3+6*r^2+4*r,4*w*r^3+4*w*r+4*u^3*z+4*v^3*y-4*r^4-6*r^3-10*r^2-r-1,8*w*r^3+4*w*r^2+4*w*r+8*u*v*x*z-8*r^4-12*r^3-14*r^2-3*r-1,12*w*r^3+12*w*r^2+8*w*r+12*v^2*x*z-12*r^4-18*r^3-14*r^2-r-1,-24*w*r^3-24*w*r^2-8*w*r+24*r^4+36*r^3+26*r^2+7*r+1</Equations>
            <GBasisLen>27</GBasisLen>
            <HilbertPolynomial>1/2s^3 + 5s^2 - 3/2s + 8</HilbertPolynomial>
            <Polynomials>
				7
				
				6
				2    0 0 1 0 1 0 0 
				2    0 1 0 0 0 1 0 
				2    0 0 0 1 0 0 1 
				-2    0 0 0 0 0 0 2 
				-1    0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 
				
				7
				3    0 0 1 0 2 0 0 
				3    0 1 0 0 0 2 0 
				-3    0 0 0 1 0 0 2 
				3    0 0 0 0 0 0 3 
				3    0 0 0 0 0 0 2 
				-1    0 0 0 1 0 0 0 
				4    0 0 0 0 0 0 1 
				
				7
				6    1 0 1 0 0 1 0 
				-6    0 0 0 1 0 0 2 
				6    0 0 0 0 0 0 3 
				-3    0 0 0 1 0 0 1 
				6    0 0 0 0 0 0 2 
				-1    0 0 0 1 0 0 0 
				4    0 0 0 0 0 0 1 
				
				9
				4    0 0 1 0 3 0 0 
				4    0 1 0 0 0 3 0 
				4    0 0 0 1 0 0 3 
				-4    0 0 0 0 0 0 4 
				-6    0 0 0 0 0 0 3 
				4    0 0 0 1 0 0 1 
				-10    0 0 0 0 0 0 2 
				-1    0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 
				
				9
				8    1 0 1 0 1 1 0 
				8    0 0 0 1 0 0 3 
				-8    0 0 0 0 0 0 4 
				4    0 0 0 1 0 0 2 
				-12    0 0 0 0 0 0 3 
				4    0 0 0 1 0 0 1 
				-14    0 0 0 0 0 0 2 
				-3    0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 
				
				9
				12    1 0 1 0 0 2 0 
				12    0 0 0 1 0 0 3 
				-12    0 0 0 0 0 0 4 
				12    0 0 0 1 0 0 2 
				-18    0 0 0 0 0 0 3 
				8    0 0 0 1 0 0 1 
				-14    0 0 0 0 0 0 2 
				-1    0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 
				
				8
				-24    0 0 0 1 0 0 3 
				24    0 0 0 0 0 0 4 
				-24    0 0 0 1 0 0 2 
				36    0 0 0 0 0 0 3 
				-8    0 0 0 1 0 0 1 
				26    0 0 0 0 0 0 2 
				7    0 0 0 0 0 0 1 
				1    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>butcher8</ID>
            <Name>Butcher8</Name>
            <Description>\textbf{Title}: 8-variable version of Butcher's problem</Description>
            <References>\begin{itemize}\item W. Boege, R. Gebauer, and H. Kredel: 'Some examples for solving systems of algebraic equations by calculating Groebner bases', J. Symbolic Computation, 2:83-98, 1986.\item C. Butcher: 'An application of the Runge-Kutta space'. BIT, 24, pages 425440, 1984.\end{itemize}</References>
            <Notes>The system has 16 regular solutions. Four paths converged to highly singular solutions, which indicates that the system probably has an infinite component of solution.</Notes>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, butcher8, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>-x-z+w+u+v,2*x*z-2*z^2-z+2*u*r+2*v*s-1,-3*x*z^2-x+3*z^3+3*z^2+4*z+3*u*r^2+3*v*s^2,-6*x*z^2-3*x*z-x+6*y*v*r+6*z^3+6*z^2+4*z,4*x*z^3+4*x*z-4*z^4-6*z^3-10*z^2-z+332*u*r+4*v*s^3-1,8*x*z^3+4*x*z^2+4*x*z+8*y*v*r*s-8*z^4-12*z^3-14*z^2-3*z-1,12*x*z^3+12*x*z^2+8*x*z+12*y*v*r^2-12*z^4-18*z^3-14*z^2-z-1,-24*x*z^3-24*x*z^2-8*x*z+24*z^4+36*z^3+26*z^2+7*z+1</Equations>
            <GBasisLen>54</GBasisLen>
            <HilbertPolynomial>1/2s^3 + 5/2s^2 + 4s + 14</HilbertPolynomial>
            <Polynomials>
				8
				
				5
				-1    1 0 0 0 0 0 0 0 
				-1    0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 
				
				6
				2    1 0 1 0 0 0 0 0 
				-2    0 0 2 0 0 0 0 0 
				2    0 0 0 0 1 0 1 0 
				2    0 0 0 0 0 1 0 1 
				-1    0 0 1 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				7
				-3    1 0 2 0 0 0 0 0 
				3    0 0 3 0 0 0 0 0 
				3    0 0 0 0 1 0 2 0 
				3    0 0 0 0 0 1 0 2 
				3    0 0 2 0 0 0 0 0 
				-1    1 0 0 0 0 0 0 0 
				4    0 0 1 0 0 0 0 0 
				
				7
				-6    1 0 2 0 0 0 0 0 
				6    0 0 3 0 0 0 0 0 
				6    0 1 0 0 0 1 1 0 
				-3    1 0 1 0 0 0 0 0 
				6    0 0 2 0 0 0 0 0 
				-1    1 0 0 0 0 0 0 0 
				4    0 0 1 0 0 0 0 0 
				
				9
				4    1 0 3 0 0 0 0 0 
				-4    0 0 4 0 0 0 0 0 
				4    0 0 0 0 0 1 0 3 
				-6    0 0 3 0 0 0 0 0 
				4    1 0 1 0 0 0 0 0 
				-10    0 0 2 0 0 0 0 0 
				332    0 0 0 0 1 0 1 0 
				-1    0 0 1 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				9
				8    1 0 3 0 0 0 0 0 
				-8    0 0 4 0 0 0 0 0 
				8    0 1 0 0 0 1 1 1 
				4    1 0 2 0 0 0 0 0 
				-12    0 0 3 0 0 0 0 0 
				4    1 0 1 0 0 0 0 0 
				-14    0 0 2 0 0 0 0 0 
				-3    0 0 1 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				9
				12    1 0 3 0 0 0 0 0 
				-12    0 0 4 0 0 0 0 0 
				12    0 1 0 0 0 1 2 0 
				12    1 0 2 0 0 0 0 0 
				-18    0 0 3 0 0 0 0 0 
				8    1 0 1 0 0 0 0 0 
				-14    0 0 2 0 0 0 0 0 
				-1    0 0 1 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				8
				-24    1 0 3 0 0 0 0 0 
				24    0 0 4 0 0 0 0 0 
				-24    1 0 2 0 0 0 0 0 
				36    0 0 3 0 0 0 0 0 
				-8    1 0 1 0 0 0 0 0 
				26    0 0 2 0 0 0 0 0 
				7    0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>camera1s</ID>
            <Name>Camera1s</Name>
            <Description>\textbf{Title}: Camera displacement between two positions, scaled first frame.</Description>
            <References>\begin{itemize} \item Ioannis Z. Emiris. `Sparse Elimination and Application in Kinematics'. PhD Thesis, Computer Science, University of California at Berkeley, 1994. \item Ioannis Z. Emiris. `A general Solver Based on Sparse Resultants:  Numerical Issues and Kinematic Applications', INRIA Rapport de Recherche no 3110, January 1997, 29 pages. Available via anonymous ftp to ftp.inria.fr. \end{itemize}</References>
            <Notes>This system models the displacement of a camera between two positions in a static environment, coordinates of matched points in first instance. The coordinates of the frames have been scaled, i.e., all components have been divided by 10</Notes>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, camera1s, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>-x*w-y*u-z*v+1,-36*x*w+41*x*u+20*x*v+x+41*y*w+18*y*u+37*y*v-2*y+20*z*w+37*z*u-40*z*v+3*z+w-2*u+3*v+58,707*(-757*x*w-1414*x*u+1314*x*v-100*x-1414*y*w-557*y*u-1414*y*v+1314*z*w-1414*z*u-757*z*v+100*z-100*w+100*v+2071),433*(50*x*w+25*x*u-866*x*v-25*x+25*y*w-866*y*u-25*y*v+50*y-866*z*w-25*z*u-50*z*v-25*z-25*w+50*u-25*v+866),-57013*x*w-29*x*u+37967*x*v-19027*x-29*y*w-56987*y*u+18973*y*v+38033*y+37967*z*w+18973*z*u+57031*z*v+7*z-19027*w+38033*u+7*v+56969,-68*x*w-32*x*u+13*x*v+51*x-32*y*w-48*y*u-7*y*v-71*y+13*z*w-7*z*u+90*z*v-10*z+51*w-71*u-10*v+26</Equations>
            <GBasisLen>26</GBasisLen>
            <HilbertPolynomial>20</HilbertPolynomial>
            <Polynomials>
				6
				
				4
				-1    1 0 0 1 0 0 
				-1    0 1 0 0 1 0 
				-1    0 0 1 0 0 1 
				1    0 0 0 0 0 0 
				
				16
				-36    1 0 0 1 0 0 
				41    0 1 0 1 0 0 
				20    0 0 1 1 0 0 
				41    1 0 0 0 1 0 
				18    0 1 0 0 1 0 
				37    0 0 1 0 1 0 
				20    1 0 0 0 0 1 
				37    0 1 0 0 0 1 
				-40    0 0 1 0 0 1 
				1    1 0 0 0 0 0 
				-2    0 1 0 0 0 0 
				3    0 0 1 0 0 0 
				1    0 0 0 1 0 0 
				-2    0 0 0 0 1 0 
				3    0 0 0 0 0 1 
				58    0 0 0 0 0 0 
				
				14
				-535199    1 0 0 1 0 0 
				-999698    0 1 0 1 0 0 
				928998    0 0 1 1 0 0 
				-999698    1 0 0 0 1 0 
				-393799    0 1 0 0 1 0 
				-999698    0 0 1 0 1 0 
				928998    1 0 0 0 0 1 
				-999698    0 1 0 0 0 1 
				-535199    0 0 1 0 0 1 
				-70700    1 0 0 0 0 0 
				70700    0 0 1 0 0 0 
				-70700    0 0 0 1 0 0 
				70700    0 0 0 0 0 1 
				1464197    0 0 0 0 0 0 
				
				16
				21650    1 0 0 1 0 0 
				10825    0 1 0 1 0 0 
				-374978    0 0 1 1 0 0 
				10825    1 0 0 0 1 0 
				-374978    0 1 0 0 1 0 
				-10825    0 0 1 0 1 0 
				-374978    1 0 0 0 0 1 
				-10825    0 1 0 0 0 1 
				-21650    0 0 1 0 0 1 
				-10825    1 0 0 0 0 0 
				21650    0 1 0 0 0 0 
				-10825    0 0 1 0 0 0 
				-10825    0 0 0 1 0 0 
				21650    0 0 0 0 1 0 
				-10825    0 0 0 0 0 1 
				374978    0 0 0 0 0 0 
				
				16
				-57013    1 0 0 1 0 0 
				-29    0 1 0 1 0 0 
				37967    0 0 1 1 0 0 
				-29    1 0 0 0 1 0 
				-56987    0 1 0 0 1 0 
				18973    0 0 1 0 1 0 
				37967    1 0 0 0 0 1 
				18973    0 1 0 0 0 1 
				57031    0 0 1 0 0 1 
				-19027    1 0 0 0 0 0 
				38033    0 1 0 0 0 0 
				7    0 0 1 0 0 0 
				-19027    0 0 0 1 0 0 
				38033    0 0 0 0 1 0 
				7    0 0 0 0 0 1 
				56969    0 0 0 0 0 0 
				
				16
				-68    1 0 0 1 0 0 
				-32    0 1 0 1 0 0 
				13    0 0 1 1 0 0 
				-32    1 0 0 0 1 0 
				-48    0 1 0 0 1 0 
				-7    0 0 1 0 1 0 
				13    1 0 0 0 0 1 
				-7    0 1 0 0 0 1 
				90    0 0 1 0 0 1 
				51    1 0 0 0 0 0 
				-71    0 1 0 0 0 0 
				-10    0 0 1 0 0 0 
				51    0 0 0 1 0 0 
				-71    0 0 0 0 1 0 
				-10    0 0 0 0 0 1 
				26    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>caprasse</ID>
            <Name>Caprasse</Name>
            <Description>\textbf{Title}: The system caprasse of the PoSSo test suite</Description>
            <References>\begin{itemize}\item The PoSSo test suite\end{itemize}</References>
            <Notes>There are 54 isolated solutions, so 6 ones with zero components which are not counted by the mixed volume.</Notes>
            <Variables>x,y,z,w</Variables>
            <TagsList>DevRevLex, DegLex, Lex, caprasse, with_4_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_4_vars</TestEnvironment>
            <Equations>2*w*x*y-2*x+y^2*z-z,4*w*x^2*y+2*w*y^3-10*w*y-x^3*z+4*x^2+4*x*y^2*z+4*x*z-10*y^2+2,w^2*x+2*w*y*z-x-2*z,2*w^3*y+4*w^2*x*z-10*w^2+4*w*y*z^2-10*w*y-x*z^3+4*x*z+4*z^2+2</Equations>
            <GBasisLen>26</GBasisLen>
            <HilbertPolynomial>56</HilbertPolynomial>
            <Polynomials>
				4
				
				4
				1    0 2 1 0 
				2    1 1 0 1 
				-2    1 0 0 0 
				-1    0 0 1 0 
				
				9
				-1    3 0 1 0 
				4    1 2 1 0 
				4    2 1 0 1 
				2    0 3 0 1 
				4    2 0 0 0 
				-10    0 2 0 0 
				4    1 0 1 0 
				-10    0 1 0 1 
				2    0 0 0 0 
				
				4
				2    0 1 1 1 
				1    1 0 0 2 
				-1    1 0 0 0 
				-2    0 0 1 0 
				
				9
				-1    1 0 3 0 
				4    0 1 2 1 
				4    1 0 1 2 
				2    0 1 0 3 
				4    1 0 1 0 
				4    0 0 2 0 
				-10    0 1 0 1 
				-10    0 0 0 2 
				2    0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>cassou</ID>
            <Name>Cassou</Name>
            <Description>\textbf{Title}: The system of Pierrette Cassou-Nogu`es</Description>
            <References>\begin{itemize} \item Obtained by electronic mail by Carlo Traverso. See the POSSO test suite.\item T.Y. Li, Tianjun Wang, Xiaoshen Wang. 'Random Product Homotopy with Minimal BKK Bound', in: 'The Mathematics of Numerical Analysis', Edited by Renegar, J. and Shub, M. and Smale, S., Lectures in Applied Mathematics vol 32, 1996. Proceedings of the AMS-SIAM Summer Seminar in Applied Mathematics, Park City, Utah, July 17-August 11, 1995, Park City, Utah.\end{itemize}</References>
            <Notes>The system is deficient w.r.t. face normal $(0,0,0,-1)$, with corresponding double component of solutions at infinity $(b,c,c,e)$. The corresponding face system is
 $$  \begin{array}{ccc}
-8*b^2*c^2*e - 28*b^2*c*d*e + 36*b^2*d^2*e &=& 0\\ 
16*c^2*e^2 - 32*c*d*e^2 + 16*d^2*e^2 &=& 0\\  
 40*c^2*e^2 - 80*c*d*e^2 + 40*d^2*e^2 &=& 0\\  
 22*c*e - 22*d*e&=&0
 \end{array}$$
 			</Notes>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, cassou, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>6*y^4*z^3+21*y^4*z^2*w+15*y^4*z*w^2+9*y^4*w^3-8*y^2*z^2*u-28*y^2*z*w*u-144*y^2*z+36*y^2*w^2*u-648*y^2*w-120,9*y^4*z^4+30*y^4*z^3*w+39*y^4*z^2*w^2+18*y^4*z*w^3-24*y^2*z^3*u-16*y^2*z^2*w*u-432*y^2*z^2+16*y^2*z*w^2*u-720*y^2*z*w+24*y^2*w^3*u-432*y^2*w^2+16*z^2*u^2-32*z*w*u^2+576*z*u-240*z+16*w^2*u^2-576*w*u+5184,-15*y^2*z^3*u+15*y^2*z^2*w*u-81*y^2*z^2+216*y^2*z*w-162*y^2*w^2+40*z^2*u^2-80*z*w*u^2+1008*z*u+40*w^2*u^2-1008*w*u+5184,-4*y^2*z^2+4*y^2*z*w-3*y^2*w^2+22*z*u-22*w*u+261</Equations>
            <GBasisLen>8</GBasisLen>
            <HilbertPolynomial>16s - 14</HilbertPolynomial>
            <Polynomials>
				4
				
				10
				6    0 4 3 0 0 
				21    0 4 2 1 0 
				15    0 4 1 2 0 
				9    0 4 0 3 0 
				-8    0 2 2 0 1 
				-28    0 2 1 1 1 
				36    0 2 0 2 1 
				-144    0 2 1 0 0 
				-648    0 2 0 1 0 
				-120    0 0 0 0 0 
				
				18
				9    0 4 4 0 0 
				30    0 4 3 1 0 
				39    0 4 2 2 0 
				18    0 4 1 3 0 
				-24    0 2 3 0 1 
				-16    0 2 2 1 1 
				16    0 2 1 2 1 
				24    0 2 0 3 1 
				-432    0 2 2 0 0 
				-720    0 2 1 1 0 
				-432    0 2 0 2 0 
				16    0 0 2 0 2 
				-32    0 0 1 1 2 
				16    0 0 0 2 2 
				576    0 0 1 0 1 
				-576    0 0 0 1 1 
				-240    0 0 1 0 0 
				5184    0 0 0 0 0 
				
				11
				-15    0 2 3 0 1 
				15    0 2 2 1 1 
				-81    0 2 2 0 0 
				216    0 2 1 1 0 
				-162    0 2 0 2 0 
				40    0 0 2 0 2 
				-80    0 0 1 1 2 
				40    0 0 0 2 2 
				1008    0 0 1 0 1 
				-1008    0 0 0 1 1 
				5184    0 0 0 0 0 
				
				6
				-4    0 2 2 0 0 
				4    0 2 1 1 0 
				-3    0 2 0 2 0 
				22    0 0 1 0 1 
				-22    0 0 0 1 1 
				261    0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>chandra4</ID>
            <Name>Chandra4</Name>
            <Description>\textbf{Title}: The Chandrasekhar H-Equation for n=4</Description>
            <References>\begin{itemize}\item Laureano Gonzalez-Vega: 'Some examples on problem solving by using the symbolic viewpoint when dealing with polynomial systems of equations'. in: 'Computer Algebra in Science and Engineering', Editors: J. Fleischer,\\  J. Grabmeier, F.W. Hehl and W. Kuechlin. Pages 102-116. World Scientific Publishing, 1995. \item S. Chandrasekhar: 'Radiative Transfer', Dover, NY, 1960. \item C.T. Kelley. 'Solution of the Chandrasekhar H-equation by Newton's method'. J. Math. Phys., 21 (1980), pp. 1625-1628.\end{itemize}</References>
            <Notes>The parameter $c$ equals 0.51234.</Notes>
            <Variables>x,y,z,w</Variables>
            <TagsList>DevRevLex, DegLex, Lex, chandra4, with_4_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_4_vars</TestEnvironment>
            <Equations>-51234*x^2-34156*x*y-25617*x*z+1497532*x-1600000,-170780*x*y-128085*y^2-102468*y*z+7743830*y-8000000,-128085*x*z-102468*y*z-85390*z^2+7829220*z-8000000,-717276*x*w-597730*y*w-512340*z*w+55103405*w-56000000</Equations>
            <GBasisLen>8</GBasisLen>
            <HilbertPolynomial>8</HilbertPolynomial>
            <Polynomials>
				4
				
				5
				-51234    2 0 0 0 
				-34156    1 1 0 0 
				-25617    1 0 1 0 
				1497532    1 0 0 0 
				-1600000    0 0 0 0 
				
				5
				-170780    1 1 0 0 
				-128085    0 2 0 0 
				-102468    0 1 1 0 
				7743830    0 1 0 0 
				-8000000    0 0 0 0 
				
				5
				-128085    1 0 1 0 
				-102468    0 1 1 0 
				-85390    0 0 2 0 
				7829220    0 0 1 0 
				-8000000    0 0 0 0 
				
				5
				-717276    1 0 0 1 
				-597730    0 1 0 1 
				-512340    0 0 1 1 
				55103405    0 0 0 1 
				-56000000    0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>chandra5</ID>
            <Name>Chandra5</Name>
            <Description>\textbf{Title}: The Chandrasekhar H-Equation for n=5</Description>
            <References>\begin{itemize}\item Laureano Gonzalez-Vega: 'Some examples on problem solving by using the symbolic viewpoint when dealing with polynomial systems of equations'. in: 'Computer Algebra in Science and Engineering', Editors: J. Fleischer, J. Grabmeier, F.W. Hehl and W. Kuechlin. Pages 102-116. World Scientific Publishing, 1995.\item S. Chandrasekhar: 'Radiative Transfer', Dover, NY, 1960.\end{itemize}</References>
            <Notes>the parameter c equals 0.51234.</Notes>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, chandra5, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>-256170*x^2-170780*x*y-128085*x*z-102468*x*w+9487660*x-10000000,-170780*x*y-128085*y^2-102468*y*z-85390*y*w+9743830*y-10000000,-896595*x*z-717276*y*z-597730*z^2-512340*z*w+68804540*z-70000000,-1434552*x*w-1195460*y*w-1024680*z*w-896595*w^2+138206810*w-140000000,-3586380*x*u-3074040*y*u-2689785*z*u-2390920*w*u+415696344*u-420000000</Equations>
            <GBasisLen>16</GBasisLen>
            <HilbertPolynomial>16</HilbertPolynomial>
            <Polynomials>
				5
				
				6
				-256170    2 0 0 0 0 
				-170780    1 1 0 0 0 
				-128085    1 0 1 0 0 
				-102468    1 0 0 1 0 
				9487660    1 0 0 0 0 
				-10000000    0 0 0 0 0 
				
				6
				-170780    1 1 0 0 0 
				-128085    0 2 0 0 0 
				-102468    0 1 1 0 0 
				-85390    0 1 0 1 0 
				9743830    0 1 0 0 0 
				-10000000    0 0 0 0 0 
				
				6
				-896595    1 0 1 0 0 
				-717276    0 1 1 0 0 
				-597730    0 0 2 0 0 
				-512340    0 0 1 1 0 
				68804540    0 0 1 0 0 
				-70000000    0 0 0 0 0 
				
				6
				-1434552    1 0 0 1 0 
				-1195460    0 1 0 1 0 
				-1024680    0 0 1 1 0 
				-896595    0 0 0 2 0 
				138206810    0 0 0 1 0 
				-140000000    0 0 0 0 0 
				
				6
				-3586380    1 0 0 0 1 
				-3074040    0 1 0 0 1 
				-2689785    0 0 1 0 1 
				-2390920    0 0 0 1 1 
				415696344    0 0 0 0 1 
				-420000000    0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>chandra6</ID>
            <Name>Chandra6</Name>
            <Description>\textbf{Title}: The Chandrasekhar H-Equation for n=6</Description>
            <References>\begin{itemize}\item Laureano Gonzalez-Vega: 'Some examples on problem solving by using the symbolic viewpoint when dealing with polynomial systems of equations' in: 'Computer Algebra in Science and Engineering', Editors: J. Fleischer, J. Grabmeier, F.W. Hehl and W. Kuechlin. Pages 102-116. World Scientific Publishing, 1995.\item S. Chandrasekhar: 'Radiative Transfer', Dover, NY, 1960.\end{itemize}</References>
            <Notes>The parameter $c$ equals 0.51234.</Notes>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, chandra6, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>-256170*x^2-170780*x*y-128085*x*z-102468*x*w-85390*x*u+11487660*x-12000000,-1195460*x*y-896595*y^2-717276*y*z-597730*y*w-512340*y*u+82206810*y-84000000,-1793190*x*z-1434552*y*z-1195460*z^2-1024680*z*w-896595*z*u+165609080*z-168000000,-4303656*x*w-3586380*y*w-3074040*z*w-2689785*w^2-2390920*w*u+498620430*w-504000000,-3586380*x*u-3074040*y*u-2689785*z*u-2390920*w*u-2151828*u^2+499696344*u-504000000,-33814440*x*v-29587635*y*v-26300120*z*v-23670108*w*v-21518280*u*v+5504549820*v-5544000000</Equations>
            <GBasisLen>32</GBasisLen>
            <HilbertPolynomial>32</HilbertPolynomial>
            <Polynomials>
				6
				
				7
				-256170    2 0 0 0 0 0 
				-170780    1 1 0 0 0 0 
				-128085    1 0 1 0 0 0 
				-102468    1 0 0 1 0 0 
				-85390    1 0 0 0 1 0 
				11487660    1 0 0 0 0 0 
				-12000000    0 0 0 0 0 0 
				
				7
				-1195460    1 1 0 0 0 0 
				-896595    0 2 0 0 0 0 
				-717276    0 1 1 0 0 0 
				-597730    0 1 0 1 0 0 
				-512340    0 1 0 0 1 0 
				82206810    0 1 0 0 0 0 
				-84000000    0 0 0 0 0 0 
				
				7
				-1793190    1 0 1 0 0 0 
				-1434552    0 1 1 0 0 0 
				-1195460    0 0 2 0 0 0 
				-1024680    0 0 1 1 0 0 
				-896595    0 0 1 0 1 0 
				165609080    0 0 1 0 0 0 
				-168000000    0 0 0 0 0 0 
				
				7
				-4303656    1 0 0 1 0 0 
				-3586380    0 1 0 1 0 0 
				-3074040    0 0 1 1 0 0 
				-2689785    0 0 0 2 0 0 
				-2390920    0 0 0 1 1 0 
				498620430    0 0 0 1 0 0 
				-504000000    0 0 0 0 0 0 
				
				7
				-3586380    1 0 0 0 1 0 
				-3074040    0 1 0 0 1 0 
				-2689785    0 0 1 0 1 0 
				-2390920    0 0 0 1 1 0 
				-2151828    0 0 0 0 2 0 
				499696344    0 0 0 0 1 0 
				-504000000    0 0 0 0 0 0 
				
				7
				-33814440    1 0 0 0 0 1 
				-29587635    0 1 0 0 0 1 
				-26300120    0 0 1 0 0 1 
				-23670108    0 0 0 1 0 1 
				-21518280    0 0 0 0 1 1 
				5504549820    0 0 0 0 0 1 
				-5544000000    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>chemequ</ID>
            <Name>Chemequ</Name>
            <Description>\textbf{Title}: This polynomial system describes the equilibrium of the products of hydrocarbon combustion.</Description>
            <References>\begin{itemize}\item Keith Meintjes and Alexander P. Morgan:  'Chemical equilibrium systems as numerical test problems', ACM Toms, Vol 16, No 2, 143-151, 1990.\end{itemize}</References>
            <Notes>Although the total degree equals 108, there are only 4 real and 12 complex solutions and an infinite number of solutions at infinity. A typographical error has occured in equation (2d), instead of $+ 4Ry5$, it should be a $- 4Ry5$. Applying m-homogenization straight to it renders $B = 56$. Simple linear reduction makes the total degree equal to 48. With m-homogenization, no better upper bound can then be computed. The constants are: $R = 10,  p = 40,  \sqrt{p} = 6.3246$</Notes>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, chemequ, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>x*y+x-3*u,8000000000*x*y+4000000000*x+7692*y^2+4000000000*y*z^2+2180720*y*z+136296*y*w+1799*y-40000000000*u,100000000*y*z^2+27259*y*z+19300000*z^2+20531*z-400000000*u,17037*y*w+1000000000*w^2-20000000000*u,4000000000*x*y+4000000000*x+3846*y^2+4000000000*y*z^2+2180720*y*z+136296*y*w+1799*y+772000000*z^2+1642480*z+4000000000*w^2-4000000000</Equations>
            <GBasisLen>18</GBasisLen>
            <HilbertPolynomial>16</HilbertPolynomial>
            <Polynomials>
				5
				
				3
				1    1 1 0 0 0 
				1    1 0 0 0 0 
				-3    0 0 0 0 1 
				
				8
				4000000000    0 1 2 0 0 
				8000000000    1 1 0 0 0 
				7692    0 2 0 0 0 
				2180720    0 1 1 0 0 
				136296    0 1 0 1 0 
				4000000000    1 0 0 0 0 
				1799    0 1 0 0 0 
				-40000000000    0 0 0 0 1 
				
				5
				100000000    0 1 2 0 0 
				27259    0 1 1 0 0 
				19300000    0 0 2 0 0 
				20531    0 0 1 0 0 
				-400000000    0 0 0 0 1 
				
				3
				17037    0 1 0 1 0 
				1000000000    0 0 0 2 0 
				-20000000000    0 0 0 0 1 
				
				11
				4000000000    0 1 2 0 0 
				4000000000    1 1 0 0 0 
				3846    0 2 0 0 0 
				2180720    0 1 1 0 0 
				772000000    0 0 2 0 0 
				136296    0 1 0 1 0 
				4000000000    0 0 0 2 0 
				4000000000    1 0 0 0 0 
				1799    0 1 0 0 0 
				1642480    0 0 1 0 0 
				-4000000000    0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>chemequs</ID>
            <Name>Chemequs</Name>
            <Description>\textbf{Title}: Scaled chemical equilibrium of hydrocarbon combustion</Description>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, chemequs, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>4006491052808310*x*y+526610813156747*x-473964757724582*u,5313248634539330*x*y+349185128215561*x+4313634906030440*y^2+7431331204908770*y*z^2+806989849429520*y*z+149987275886495*y*w+132605295558012*y-1047588595859020*u,18874386880707400*y*z^2+1024812258191070*y*z+478801780852764*z^2+101454213888243*z-1064282665103090*u,169336224248364*y*w+19504011585425050*w^2-4730926576002525*u,13941268403110100*x*y+1832432069217330*x+11318412924828000*y^2+38997679215146700*y*z^2+4234871305042080*y*z+787093928408356*y*w+695877849581671*y+989285552709683*z^2+419243169406760*z+45328426231998600*w^2-203370256289491000000</Equations>
            <GBasisLen>20</GBasisLen>
            <HilbertPolynomial>16</HilbertPolynomial>
            <Polynomials>
				5
				
				3
				4006491052808310    1 1 0 0 0 
				526610813156747    1 0 0 0 0 
				-473964757724582    0 0 0 0 1 
				
				8
				7431331204908770    0 1 2 0 0 
				5313248634539330    1 1 0 0 0 
				4313634906030440    0 2 0 0 0 
				806989849429520    0 1 1 0 0 
				149987275886495    0 1 0 1 0 
				349185128215561    1 0 0 0 0 
				132605295558012    0 1 0 0 0 
				-1047588595859020    0 0 0 0 1 
				
				5
				18874386880707400    0 1 2 0 0 
				1024812258191070    0 1 1 0 0 
				478801780852764    0 0 2 0 0 
				101454213888243    0 0 1 0 0 
				-1064282665103090    0 0 0 0 1 
				
				3
				169336224248364    0 1 0 1 0 
				19504011585425050    0 0 0 2 0 
				-4730926576002525    0 0 0 0 1 
				
				11
				38997679215146700    0 1 2 0 0 
				13941268403110100    1 1 0 0 0 
				11318412924828000    0 2 0 0 0 
				4234871305042080    0 1 1 0 0 
				989285552709683    0 0 2 0 0 
				787093928408356    0 1 0 1 0 
				45328426231998600    0 0 0 2 0 
				1832432069217330    1 0 0 0 0 
				695877849581671    0 1 0 0 0 
				419243169406760    0 0 1 0 0 
				-203370256289491000000    0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>chemkin</ID>
            <Name>Chemkin</Name>
            <Description>\textbf{Title}: A stationary chemical kinetics problem</Description>
            <References>\begin{itemize}\item Herbert Melenk, H. Michael Moeller, Winfried Neun: Symbolic Solution of Large Stationary Chemical Kinetics Problems. Appeared in: IMPACT Comp. Sci. Eng. 1, p.138-167 (1989)\end{itemize}</References>
            <Variables>x[1..11]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, chemkin, with_11_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_11_vars</TestEnvironment>
            <Equations>-4*x[1]*x[4]+9*x[4]^2+x[8],x[2]^2+x[5]^2+x[9]^2-1,x[3]^2+x[6]^2+x[10]^2-1,9*x[7]^2+9*x[11]^2-8,-6*x[1]*x[2]*x[4]+3*x[2]+3*x[4]*x[5]+3*x[8]*x[9]-1,3*x[2]*x[3]+3*x[5]*x[6]+3*x[9]*x[10]-1,x[3]+3*x[6]*x[7]+3*x[10]*x[11]-1,-6*x[1]+3*x[2]+3*x[3]+8,9*x[4]+9*x[5]+9*x[6]+9*x[7]+8,x[8]+x[9]+x[10]+x[11],x[1]^2-2</Equations>
            <GBasisLen>90</GBasisLen>
            <HilbertPolynomial>80</HilbertPolynomial>
            <Polynomials>
				11
				
				3
				-4    1 0 0 1 0 0 0 0 0 0 0 
				9    0 0 0 2 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 
				
				4
				1    0 2 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 2 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 2 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 
				
				4
				1    0 0 2 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 2 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 2 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 
				
				3
				9    0 0 0 0 0 0 2 0 0 0 0 
				9    0 0 0 0 0 0 0 0 0 0 2 
				-8    0 0 0 0 0 0 0 0 0 0 0 
				
				5
				-6    1 1 0 1 0 0 0 0 0 0 0 
				3    0 0 0 1 1 0 0 0 0 0 0 
				3    0 0 0 0 0 0 0 1 1 0 0 
				3    0 1 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 
				
				4
				3    0 1 1 0 0 0 0 0 0 0 0 
				3    0 0 0 0 1 1 0 0 0 0 0 
				3    0 0 0 0 0 0 0 0 1 1 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 
				
				4
				3    0 0 0 0 0 1 1 0 0 0 0 
				3    0 0 0 0 0 0 0 0 0 1 1 
				1    0 0 1 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 
				
				4
				-6    1 0 0 0 0 0 0 0 0 0 0 
				3    0 1 0 0 0 0 0 0 0 0 0 
				3    0 0 1 0 0 0 0 0 0 0 0 
				8    0 0 0 0 0 0 0 0 0 0 0 
				
				5
				9    0 0 0 1 0 0 0 0 0 0 0 
				9    0 0 0 0 1 0 0 0 0 0 0 
				9    0 0 0 0 0 1 0 0 0 0 0 
				9    0 0 0 0 0 0 1 0 0 0 0 
				8    0 0 0 0 0 0 0 0 0 0 0 
				
				4
				1    0 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 1 
				
				2
				1    2 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>cohn2</ID>
            <Name>Cohn2</Name>
            <Description>\textbf{Title}: Modular equations for special algebraic number fields</Description>
            <References>\begin{itemize}\item From PoSSo test suite.\item Andre' Galligo and Carlo Traverso: 'Practical Determination of the dimension of an algebraic variety', in E. Kaltofen and S.M. Watt, Eds 'Computers and Mathematics', pages 46-52, 1989.\item H. Cohn: 'An explicit modular equation in two variables and Hilbert's Twelfth problem', Math. of Comp. 38, pp. 227-236, 1982.\item H. Cohn, J. Deutch: 'An explit modular equation in two variables for Q[$\sqrt{3}$]', Math. of Comp. 50, pp. 557-568, 1988. \end{itemize}</References>
            <Variables>x,y,z,w</Variables>
            <TagsList>DevRevLex, DegLex, Lex, cohn2, with_4_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_4_vars</TestEnvironment>
            <Equations>x^3*y^2+4*x^2*y^2*z+288*x^2*y^2-x^2*y*z^2+207*x^2*y*z-3456*x^2*y+1152*x*y^2*z+20736*x*y^2+156*x*y*z^2+19008*x*y*z-497664*x*y+x*z^3+432*x*z^2+62208*x*z+2985984*x+82944*y^2*z,w^3*y^3+4*w^3*y^2+4*w^2*y^3-w^2*y^2*z-48*w^2*y^2-5*w^2*y*z+108*w*y*z+w*z^2+144*w*z-1728*z,4*w^2*x*z^2+1152*w^2*x*z+82944*w^2*x+w^2*z^3+288*w^2*z^2+20736*w^2*z-w*x^2*z^2+156*w*x^2*z+207*w*x*z^2+19008*w*x*z-3456*w*z^2-497664*w*z+x^3*z+432*x^2*z+62208*x*z+2985984*z,w^3*y^3+4*w^3*y^2-w^2*x*y^2+4*w^2*y^3-48*w^2*y^2-5*w*x*y^2+108*w*x*y+x^2*y+144*x*y-1728*x</Equations>
            <GBasisLen>23</GBasisLen>
            <HilbertPolynomial>4s^2 + 6s - 1</HilbertPolynomial>
            <Polynomials>
				4
				
				16
				1    3 2 0 0 
				4    2 2 1 0 
				-1    2 1 2 0 
				288    2 2 0 0 
				207    2 1 1 0 
				1152    1 2 1 0 
				156    1 1 2 0 
				1    1 0 3 0 
				-3456    2 1 0 0 
				20736    1 2 0 0 
				19008    1 1 1 0 
				82944    0 2 1 0 
				432    1 0 2 0 
				-497664    1 1 0 0 
				62208    1 0 1 0 
				2985984    1 0 0 0 
				
				10
				1    0 3 0 3 
				4    0 3 0 2 
				-1    0 2 1 2 
				4    0 2 0 3 
				-48    0 2 0 2 
				-5    0 1 1 2 
				108    0 1 1 1 
				1    0 0 2 1 
				144    0 0 1 1 
				-1728    0 0 1 0 
				
				16
				-1    2 0 2 1 
				4    1 0 2 2 
				1    0 0 3 2 
				1    3 0 1 0 
				156    2 0 1 1 
				207    1 0 2 1 
				1152    1 0 1 2 
				288    0 0 2 2 
				432    2 0 1 0 
				19008    1 0 1 1 
				-3456    0 0 2 1 
				82944    1 0 0 2 
				20736    0 0 1 2 
				62208    1 0 1 0 
				-497664    0 0 1 1 
				2985984    0 0 1 0 
				
				10
				1    0 3 0 3 
				-1    1 2 0 2 
				4    0 3 0 2 
				4    0 2 0 3 
				-5    1 2 0 1 
				-48    0 2 0 2 
				1    2 1 0 0 
				108    1 1 0 1 
				144    1 1 0 0 
				-1728    1 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>cohn3</ID>
            <Name>Cohn3</Name>
            <Description>\textbf{Title}: Modular equations for special algebraic number fields</Description>
            <References>\begin{itemize}\item From PoSSo test suite.\item Andre' Galligo and Carlo Traverso: 'Practical Determination of the dimension of an algebraic variety', in E. Kaltofen and S.M. Watt, Eds 'Computers and Mathematics', pages 46-52, 1989.\item H. Cohn: 'An explicit modular equation in two variables and Hilbert's Twelfth problem', Math. of Comp. 38, pp. 227-236, 1982.\item H. Cohn, J. Deutch: 'An explit modular equation in two variables for Q[$\sqrt{3}$]', Math. of Comp. 50, pp. 557-568, 1988. \end{itemize}</References>
            <Notes>From the 213 solution paths, 110 converged to finite solutions.\\ There are eight highly singular solutons with zero components\\ that are probably not isolat</Notes>
            <Variables>x,y,z,w</Variables>
            <TagsList>DevRevLex, DegLex, Lex, cohn3, with_4_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_4_vars</TestEnvironment>
            <Equations>x*(-x^2*y^2+2*x*y^2*z-144*x*y^2-x*y*z^2-207*x*y*z-3456*x*y+288*y^2*z-5184*y^2+78*y*z^2-9504*y*z-248832*y+z^3-432*z^2+62208*z-2985984),-w^2*x^3*z+32*w^2*x^3+w^2*x^2*z^2-72*w^2*x^2*z-87*w^2*x*z^2+2592*w^2*x*z-w^2*z^3+864*w^2*z^2-186624*w^2*z-6*w*x^3*z+4*w*x^2*z^2-432*w*x^2*z-414*w*x*z^2-20736*w*x*z+3456*w*z^2-1492992*w*z-8*x^3*z-1728*x^2*z-124416*x*z-2985984*z,w^3*x^2*y-2*w^3*x*y^2-24*w^3*x*y+128*w^3*x+w^3*y^3+24*w^3*y^2+8*w^2*x^2*y-12*w^2*x*y^2-160*w^2*x*y+2304*w^2*x+4*w^2*y^3+96*w^2*y^2+20*w*x^2*y-20*w*x*y^2+96*w*x*y+13824*w*x+16*x^2*y+1152*x*y+27648*x,w^3*y^3-w^3*y^2*z+72*w^3*y^2+71*w^3*y*z+1728*w^3*y-464*w^3*z+13824*w^3+4*w^2*y^3-2*w^2*y^2*z+288*w^2*y^2+360*w^2*y*z+6912*w^2*y+6*w^2*z^2-4320*w^2*z+55296*w^2+432*w*y*z+8*w*z^2-13824*w*z+z^2-13824*z</Equations>
            <GBasisLen>92</GBasisLen>
            <HilbertPolynomial>10s + 163</HilbertPolynomial>
            <Polynomials>
				4
				
				15
				-1    3 2 0 0 
				2    2 2 1 0 
				-1    2 1 2 0 
				-144    2 2 0 0 
				-207    2 1 1 0 
				288    1 2 1 0 
				78    1 1 2 0 
				1    1 0 3 0 
				-3456    2 1 0 0 
				-5184    1 2 0 0 
				-9504    1 1 1 0 
				-432    1 0 2 0 
				-248832    1 1 0 0 
				62208    1 0 1 0 
				-2985984    1 0 0 0 
				
				20
				-1    3 0 1 2 
				1    2 0 2 2 
				-6    3 0 1 1 
				4    2 0 2 1 
				32    3 0 0 2 
				-72    2 0 1 2 
				-87    1 0 2 2 
				-1    0 0 3 2 
				-8    3 0 1 0 
				-432    2 0 1 1 
				-414    1 0 2 1 
				2592    1 0 1 2 
				864    0 0 2 2 
				-1728    2 0 1 0 
				-20736    1 0 1 1 
				3456    0 0 2 1 
				-186624    0 0 1 2 
				-124416    1 0 1 0 
				-1492992    0 0 1 1 
				-2985984    0 0 1 0 
				
				19
				1    2 1 0 3 
				-2    1 2 0 3 
				1    0 3 0 3 
				8    2 1 0 2 
				-12    1 2 0 2 
				4    0 3 0 2 
				-24    1 1 0 3 
				24    0 2 0 3 
				20    2 1 0 1 
				-20    1 2 0 1 
				-160    1 1 0 2 
				96    0 2 0 2 
				128    1 0 0 3 
				16    2 1 0 0 
				96    1 1 0 1 
				2304    1 0 0 2 
				1152    1 1 0 0 
				13824    1 0 0 1 
				27648    1 0 0 0 
				
				20
				1    0 3 0 3 
				-1    0 2 1 3 
				4    0 3 0 2 
				-2    0 2 1 2 
				72    0 2 0 3 
				71    0 1 1 3 
				288    0 2 0 2 
				360    0 1 1 2 
				6    0 0 2 2 
				1728    0 1 0 3 
				-464    0 0 1 3 
				432    0 1 1 1 
				8    0 0 2 1 
				6912    0 1 0 2 
				-4320    0 0 1 2 
				13824    0 0 0 3 
				1    0 0 2 0 
				-13824    0 0 1 1 
				55296    0 0 0 2 
				-13824    0 0 1 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>comb3000</ID>
            <Name>Comb3000</Name>
            <Description>\textbf{Title}: Model A combustion chemistry example for a temparature of 3000 degrees</Description>
            <References>\begin{itemize}\item A.P. Morgan: `Solving Polynomial Systems Using Continuation for Engineering and Scientific Problems', Prentice-Hall, Englewood Cliffs, N.J., 1987.\end{itemize}</References>
            <Notes>The system should be scaled properly.</Notes>
            <Variables>x,y,z,w,u,v,r,s,t,p</Variables>
            <TagsList>DevRevLex, DegLex, Lex, comb3000, with_10_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_10_vars</TestEnvironment>
            <Equations>200000*p+100000*y+200000*v+100000*t-1,100000*z+100000*s-3,20000*x+20000*p+20000*z+40000*u+40000*s+20000*t-1,100000*w+200000*r-1,-100000000000000*x^2+5140437*u,-2500000000000*y^2+251733*v,-5000000000000000000000*w^2+3908139*r,-2500000000000*x*z+374059*s,-100000000000000*x*y+6194411*t,-62500000000000000000*x*y^2+130581*p</Equations>
            <GBasisLen>20</GBasisLen>
            <HilbertPolynomial>16</HilbertPolynomial>
            <Polynomials>
				10
				
				5
				100000    0 1 0 0 0 0 0 0 0 0 
				200000    0 0 0 0 0 1 0 0 0 0 
				100000    0 0 0 0 0 0 0 0 1 0 
				200000    0 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				3
				100000    0 0 1 0 0 0 0 0 0 0 
				100000    0 0 0 0 0 0 0 1 0 0 
				-3    0 0 0 0 0 0 0 0 0 0 
				
				7
				20000    1 0 0 0 0 0 0 0 0 0 
				20000    0 0 1 0 0 0 0 0 0 0 
				40000    0 0 0 0 1 0 0 0 0 0 
				40000    0 0 0 0 0 0 0 1 0 0 
				20000    0 0 0 0 0 0 0 0 1 0 
				20000    0 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				3
				100000    0 0 0 1 0 0 0 0 0 0 
				200000    0 0 0 0 0 0 1 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				2
				-100000000000000    2 0 0 0 0 0 0 0 0 0 
				5140437    0 0 0 0 1 0 0 0 0 0 
				
				2
				-2500000000000    0 2 0 0 0 0 0 0 0 0 
				251733    0 0 0 0 0 1 0 0 0 0 
				
				2
				-5000000000000000000000    0 0 0 2 0 0 0 0 0 0 
				3908139    0 0 0 0 0 0 1 0 0 0 
				
				2
				-2500000000000    1 0 1 0 0 0 0 0 0 0 
				374059    0 0 0 0 0 0 0 1 0 0 
				
				2
				-100000000000000    1 1 0 0 0 0 0 0 0 0 
				6194411    0 0 0 0 0 0 0 0 1 0 
				
				2
				-62500000000000000000    1 2 0 0 0 0 0 0 0 0 
				130581    0 0 0 0 0 0 0 0 0 1 
				</Polynomials>
        </Example>
        <Example>
            <ID>comb3000s</ID>
            <Name>Comb3000s</Name>
            <Description>\textbf{Title}: Model A combustion chemistry example for a temparature of 3000 degrees</Description>
            <References>\begin{itemize}\item A.P. Morgan: `Solving Polynomial Systems Using Continuation for Engineering and Scientific Problems', Prentice-Hall, Englewood Cliffs, N.J., 1987.\end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s,t,p</Variables>
            <TagsList>DevRevLex, DegLex, Lex, comb3000s, with_10_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_10_vars</TestEnvironment>
            <Equations>3469703172104320*p+101815483301669*y+989610100506422*v+1346370481007300*t-2124541159333960,576739795357135*z+789949754301577*s-2194929687828500,873159766974099*x+9272613351908570*p+8951288070362460*z+13772225917620200*u+24520825054171400*s+7196219549369880*t-56777331499431000,62507554630151*w+499969784218595000*r-499969784218600000,-137722259176203*x^2+72609903873316*u,-197922020101285*y^2+202099796574078*v,-199987913687438000*w^2+500030217607503*r,-1937021972681460*x*z+516256404988361*s,-193775551522387*x*y+206424389897190*t,-3217321596081410*x*y^2+310817545009477*p</Equations>
            <GBasisLen>20</GBasisLen>
            <HilbertPolynomial>16</HilbertPolynomial>
            <Polynomials>
				10
				
				5
				101815483301669    0 1 0 0 0 0 0 0 0 0 
				989610100506422    0 0 0 0 0 1 0 0 0 0 
				1346370481007300    0 0 0 0 0 0 0 0 1 0 
				3469703172104320    0 0 0 0 0 0 0 0 0 1 
				-2124541159333960    0 0 0 0 0 0 0 0 0 0 
				
				3
				576739795357135    0 0 1 0 0 0 0 0 0 0 
				789949754301577    0 0 0 0 0 0 0 1 0 0 
				-2194929687828500    0 0 0 0 0 0 0 0 0 0 
				
				7
				873159766974099    1 0 0 0 0 0 0 0 0 0 
				8951288070362460    0 0 1 0 0 0 0 0 0 0 
				13772225917620200    0 0 0 0 1 0 0 0 0 0 
				24520825054171400    0 0 0 0 0 0 0 1 0 0 
				7196219549369880    0 0 0 0 0 0 0 0 1 0 
				9272613351908570    0 0 0 0 0 0 0 0 0 1 
				-56777331499431000    0 0 0 0 0 0 0 0 0 0 
				
				3
				62507554630151    0 0 0 1 0 0 0 0 0 0 
				499969784218595000    0 0 0 0 0 0 1 0 0 0 
				-499969784218600000    0 0 0 0 0 0 0 0 0 0 
				
				2
				-137722259176203    2 0 0 0 0 0 0 0 0 0 
				72609903873316    0 0 0 0 1 0 0 0 0 0 
				
				2
				-197922020101285    0 2 0 0 0 0 0 0 0 0 
				202099796574078    0 0 0 0 0 1 0 0 0 0 
				
				2
				-199987913687438000    0 0 0 2 0 0 0 0 0 0 
				500030217607503    0 0 0 0 0 0 1 0 0 0 
				
				2
				-1937021972681460    1 0 1 0 0 0 0 0 0 0 
				516256404988361    0 0 0 0 0 0 0 1 0 0 
				
				2
				-193775551522387    1 1 0 0 0 0 0 0 0 0 
				206424389897190    0 0 0 0 0 0 0 0 1 0 
				
				2
				-3217321596081410    1 2 0 0 0 0 0 0 0 0 
				310817545009477    0 0 0 0 0 0 0 0 0 1 
				</Polynomials>
        </Example>
        <Example>
            <ID>conform1</ID>
            <Name>Conform1</Name>
            <Description>\textbf{Title}: Conformal analysis of cyclic molecules, first instance</Description>
            <References>\begin{itemize}\item Ioannis Z. Emiris: `Sparse Elimination and Application in Kinematics', PhD Thesis, Computer Science, University of California at Berkeley, 1994.\item Ioannis Z. Emiris: `A general Solver Based on Sparse Resultants:  Numerical Issues and Kinematic Applications', INRIA Rapport de Recherche no 3110, January 1997, 29 pages Available via anonymous ftp to ftp.inria.fr\end{itemize}</References>
            <Variables>x,y,z</Variables>
            <TagsList>DevRevLex, DegLex, Lex, conform1, with_3_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_3_vars</TestEnvironment>
            <Equations>-3*y^2*z^2-y^2+8*y*z-z^2-9,-3*x^2*z^2-x^2+8*x*z-z^2-9,-3*x^2*y^2-x^2+8*x*y-y^2-9</Equations>
            <GBasisLen>10</GBasisLen>
            <HilbertPolynomial>16</HilbertPolynomial>
            <Polynomials>
				3
				
				5
				-3    0 2 2 
				-1    0 2 0 
				8    0 1 1 
				-1    0 0 2 
				-9    0 0 0 
				
				5
				-3    2 0 2 
				-1    2 0 0 
				8    1 0 1 
				-1    0 0 2 
				-9    0 0 0 
				
				5
				-3    2 2 0 
				-1    2 0 0 
				8    1 1 0 
				-1    0 2 0 
				-9    0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>cpdm5</ID>
            <Name>Cpdm5</Name>
            <Description>\textbf{Title}: 5-dimensional system of Caprasse and Demaret</Description>
            <References>\begin{itemize}\item Karin Gatermann: 'Symbolic solution of polynomial equation systems with symmetry', Proceedings of ISSAC-90, pp 112-119, ACM New York, 1990.\end{itemize}</References>
            <Notes>The system is invariant under the full permutation group. There are 16 generating regular solutions: $1*30 + 2*20 + 6*10 + 5*5 + 2*1 = 1$</Notes>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, cpdm5, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>4*x^3+3*x^2*y+3*x^2*z+3*x^2*w+3*x^2*u+2*x^2+3*x*y^2+3*x*y+3*x*z^2+3*x*z+3*x*w^2+3*x*w+3*x*u^2+3*x*u-6*x+y^3-y^2+z^3-z^2+w^3-w^2+u^3-u^2,x^3+3*x^2*y-x^2+3*x*y^2+3*x*y+4*y^3+3*y^2*z+3*y^2*w+3*y^2*u+2*y^2+3*y*z^2+3*y*z+3*y*w^2+3*y*w+3*y*u^2+3*y*u-6*y+z^3-z^2+w^3-w^2+u^3-u^2,x^3+3*x^2*z-x^2+3*x*z^2+3*x*z+y^3+3*y^2*z-y^2+3*y*z^2+3*y*z+4*z^3+3*z^2*w+3*z^2*u+2*z^2+3*z*w^2+3*z*w+3*z*u^2+3*z*u-6*z+w^3-w^2+u^3-u^2,x^3+3*x^2*w-x^2+3*x*w^2+3*x*w+y^3+3*y^2*w-y^2+3*y*w^2+3*y*w+z^3+3*z^2*w-z^2+3*z*w^2+3*z*w+4*w^3+3*w^2*u+2*w^2+3*w*u^2+3*w*u-6*w+u^3-u^2,x^3+3*x^2*u-x^2+3*x*u^2+3*x*u+y^3+3*y^2*u-y^2+3*y*u^2+3*y*u+z^3+3*z^2*u-z^2+3*z*u^2+3*z*u+w^3+3*w^2*u-w^2+3*w*u^2+3*w*u+4*u^3+2*u^2-6*u</Equations>
            <GBasisLen>77</GBasisLen>
            <HilbertPolynomial>213</HilbertPolynomial>
            <Polynomials>
				5
				
				23
				4    3 0 0 0 0 
				3    2 1 0 0 0 
				3    1 2 0 0 0 
				1    0 3 0 0 0 
				3    2 0 1 0 0 
				3    1 0 2 0 0 
				1    0 0 3 0 0 
				3    2 0 0 1 0 
				3    1 0 0 2 0 
				1    0 0 0 3 0 
				3    2 0 0 0 1 
				3    1 0 0 0 2 
				1    0 0 0 0 3 
				2    2 0 0 0 0 
				3    1 1 0 0 0 
				-1    0 2 0 0 0 
				3    1 0 1 0 0 
				-1    0 0 2 0 0 
				3    1 0 0 1 0 
				-1    0 0 0 2 0 
				3    1 0 0 0 1 
				-1    0 0 0 0 2 
				-6    1 0 0 0 0 
				
				23
				1    3 0 0 0 0 
				3    2 1 0 0 0 
				3    1 2 0 0 0 
				4    0 3 0 0 0 
				3    0 2 1 0 0 
				3    0 1 2 0 0 
				1    0 0 3 0 0 
				3    0 2 0 1 0 
				3    0 1 0 2 0 
				1    0 0 0 3 0 
				3    0 2 0 0 1 
				3    0 1 0 0 2 
				1    0 0 0 0 3 
				-1    2 0 0 0 0 
				3    1 1 0 0 0 
				2    0 2 0 0 0 
				3    0 1 1 0 0 
				-1    0 0 2 0 0 
				3    0 1 0 1 0 
				-1    0 0 0 2 0 
				3    0 1 0 0 1 
				-1    0 0 0 0 2 
				-6    0 1 0 0 0 
				
				23
				1    3 0 0 0 0 
				1    0 3 0 0 0 
				3    2 0 1 0 0 
				3    0 2 1 0 0 
				3    1 0 2 0 0 
				3    0 1 2 0 0 
				4    0 0 3 0 0 
				3    0 0 2 1 0 
				3    0 0 1 2 0 
				1    0 0 0 3 0 
				3    0 0 2 0 1 
				3    0 0 1 0 2 
				1    0 0 0 0 3 
				-1    2 0 0 0 0 
				-1    0 2 0 0 0 
				3    1 0 1 0 0 
				3    0 1 1 0 0 
				2    0 0 2 0 0 
				3    0 0 1 1 0 
				-1    0 0 0 2 0 
				3    0 0 1 0 1 
				-1    0 0 0 0 2 
				-6    0 0 1 0 0 
				
				23
				1    3 0 0 0 0 
				1    0 3 0 0 0 
				1    0 0 3 0 0 
				3    2 0 0 1 0 
				3    0 2 0 1 0 
				3    0 0 2 1 0 
				3    1 0 0 2 0 
				3    0 1 0 2 0 
				3    0 0 1 2 0 
				4    0 0 0 3 0 
				3    0 0 0 2 1 
				3    0 0 0 1 2 
				1    0 0 0 0 3 
				-1    2 0 0 0 0 
				-1    0 2 0 0 0 
				-1    0 0 2 0 0 
				3    1 0 0 1 0 
				3    0 1 0 1 0 
				3    0 0 1 1 0 
				2    0 0 0 2 0 
				3    0 0 0 1 1 
				-1    0 0 0 0 2 
				-6    0 0 0 1 0 
				
				23
				1    3 0 0 0 0 
				1    0 3 0 0 0 
				1    0 0 3 0 0 
				1    0 0 0 3 0 
				3    2 0 0 0 1 
				3    0 2 0 0 1 
				3    0 0 2 0 1 
				3    0 0 0 2 1 
				3    1 0 0 0 2 
				3    0 1 0 0 2 
				3    0 0 1 0 2 
				3    0 0 0 1 2 
				4    0 0 0 0 3 
				-1    2 0 0 0 0 
				-1    0 2 0 0 0 
				-1    0 0 2 0 0 
				-1    0 0 0 2 0 
				3    1 0 0 0 1 
				3    0 1 0 0 1 
				3    0 0 1 0 1 
				3    0 0 0 1 1 
				2    0 0 0 0 2 
				-6    0 0 0 0 1 
				</Polynomials>
        </Example>
        <Example>
            <ID>cyclic5</ID>
            <Name>Cyclic5</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize}\item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12, pp 329336.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript, 1995. \end{itemize}</References>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, cyclic5, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>x+y+z+w+u,x*y+x*u+y*z+z*w+w*u,x*y*z+x*y*u+x*w*u+y*z*w+z*w*u,x*y*z*w+x*y*z*u+x*y*w*u+x*z*w*u+y*z*w*u,x*y*z*w*u-1</Equations>
            <GBasisLen>20</GBasisLen>
            <HilbertPolynomial>70</HilbertPolynomial>
            <Polynomials>
				5
				
				5
				1    1 0 0 0 0 
				1    0 1 0 0 0 
				1    0 0 1 0 0 
				1    0 0 0 1 0 
				1    0 0 0 0 1 
				
				5
				1    1 1 0 0 0 
				1    0 1 1 0 0 
				1    0 0 1 1 0 
				1    1 0 0 0 1 
				1    0 0 0 1 1 
				
				5
				1    1 1 1 0 0 
				1    0 1 1 1 0 
				1    1 1 0 0 1 
				1    1 0 0 1 1 
				1    0 0 1 1 1 
				
				5
				1    1 1 1 1 0 
				1    1 1 1 0 1 
				1    1 1 0 1 1 
				1    1 0 1 1 1 
				1    0 1 1 1 1 
				
				2
				1    1 1 1 1 1 
				-1    0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>cyclic6</ID>
            <Name>Cyclic6</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize}\item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12, pp 329336.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript, 1995. \end{itemize}</References>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, cyclic6, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>x+y+z+w+u+v,x*y+x*v+y*z+z*w+w*u+u*v,x*y*z+x*y*v+x*u*v+y*z*w+z*w*u+w*u*v,x*y*z*w+x*y*z*v+x*y*u*v+x*w*u*v+y*z*w*u+z*w*u*v,x*y*z*w*u+x*y*z*w*v+x*y*z*u*v+x*y*w*u*v+x*z*w*u*v+y*z*w*u*v,x*y*z*w*u*v-1</Equations>
            <GBasisLen>45</GBasisLen>
            <HilbertPolynomial>156</HilbertPolynomial>
            <Polynomials>
				6
				
				6
				1    1 0 0 0 0 0 
				1    0 1 0 0 0 0 
				1    0 0 1 0 0 0 
				1    0 0 0 1 0 0 
				1    0 0 0 0 1 0 
				1    0 0 0 0 0 1 
				
				6
				1    1 1 0 0 0 0 
				1    0 1 1 0 0 0 
				1    0 0 1 1 0 0 
				1    0 0 0 1 1 0 
				1    1 0 0 0 0 1 
				1    0 0 0 0 1 1 
				
				6
				1    1 1 1 0 0 0 
				1    0 1 1 1 0 0 
				1    0 0 1 1 1 0 
				1    1 1 0 0 0 1 
				1    1 0 0 0 1 1 
				1    0 0 0 1 1 1 
				
				6
				1    1 1 1 1 0 0 
				1    0 1 1 1 1 0 
				1    1 1 1 0 0 1 
				1    1 1 0 0 1 1 
				1    1 0 0 1 1 1 
				1    0 0 1 1 1 1 
				
				6
				1    1 1 1 1 1 0 
				1    1 1 1 1 0 1 
				1    1 1 1 0 1 1 
				1    1 1 0 1 1 1 
				1    1 0 1 1 1 1 
				1    0 1 1 1 1 1 
				
				2
				1    1 1 1 1 1 1 
				-1    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>cyclic7</ID>
            <Name>Cyclic7</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize}\item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12, pp 329336.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript, 1995. \end{itemize}</References>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, cyclic7, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>x+y+z+w+u+v+r,x*y+x*r+y*z+z*w+w*u+u*v+v*r,x*y*z+x*y*r+x*v*r+y*z*w+z*w*u+w*u*v+u*v*r,x*y*z*w+x*y*z*r+x*y*v*r+x*u*v*r+y*z*w*u+z*w*u*v+w*u*v*r,x*y*z*w*u+x*y*z*w*r+x*y*z*v*r+x*y*u*v*r+x*w*u*v*r+y*z*w*u*v+z*w*u*v*r,x*y*z*w*u*v+x*y*z*w*u*r+x*y*z*w*v*r+x*y*z*u*v*r+x*y*w*u*v*r+x*z*w*u*v*r+y*z*w*u*v*r,x*y*z*w*u*v*r-1</Equations>
            <GBasisLen>209</GBasisLen>
            <HilbertPolynomial>924</HilbertPolynomial>
            <Polynomials>
				7
				
				7
				1    1 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 1 
				
				7
				1    1 1 0 0 0 0 0 
				1    0 1 1 0 0 0 0 
				1    0 0 1 1 0 0 0 
				1    0 0 0 1 1 0 0 
				1    0 0 0 0 1 1 0 
				1    1 0 0 0 0 0 1 
				1    0 0 0 0 0 1 1 
				
				7
				1    1 1 1 0 0 0 0 
				1    0 1 1 1 0 0 0 
				1    0 0 1 1 1 0 0 
				1    0 0 0 1 1 1 0 
				1    1 1 0 0 0 0 1 
				1    1 0 0 0 0 1 1 
				1    0 0 0 0 1 1 1 
				
				7
				1    1 1 1 1 0 0 0 
				1    0 1 1 1 1 0 0 
				1    0 0 1 1 1 1 0 
				1    1 1 1 0 0 0 1 
				1    1 1 0 0 0 1 1 
				1    1 0 0 0 1 1 1 
				1    0 0 0 1 1 1 1 
				
				7
				1    1 1 1 1 1 0 0 
				1    0 1 1 1 1 1 0 
				1    1 1 1 1 0 0 1 
				1    1 1 1 0 0 1 1 
				1    1 1 0 0 1 1 1 
				1    1 0 0 1 1 1 1 
				1    0 0 1 1 1 1 1 
				
				7
				1    1 1 1 1 1 1 0 
				1    1 1 1 1 1 0 1 
				1    1 1 1 1 0 1 1 
				1    1 1 1 0 1 1 1 
				1    1 1 0 1 1 1 1 
				1    1 0 1 1 1 1 1 
				1    0 1 1 1 1 1 1 
				
				2
				1    1 1 1 1 1 1 1 
				-1    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>cyclic8</ID>
            <Name>Cyclic8</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize}\item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12, pp 329336.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript, 1995. \end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, cyclic8, with_8_vars</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>x+y+z+w+u+v+r+s,x*y+x*s+y*z+z*w+w*u+u*v+v*r+r*s,x*y*z+x*y*s+x*r*s+y*z*w+z*w*u+w*u*v+u*v*r+v*r*s,x*y*z*w+x*y*z*s+x*y*r*s+x*v*r*s+y*z*w*u+z*w*u*v+w*u*v*r+u*v*r*s,x*y*z*w*u+x*y*z*w*s+x*y*z*r*s+x*y*v*r*s+x*u*v*r*s+y*z*w*u*v+z*w*u*v*r+w*u*v*r*s,x*y*z*w*u*v+x*y*z*w*u*s+x*y*z*w*r*s+x*y*z*v*r*s+x*y*u*v*r*s+x*w*u*v*r*s+y*z*w*u*v*r+z*w*u*v*r*s,x*y*z*w*u*v*r+x*y*z*w*u*v*s+x*y*z*w*u*r*s+x*y*z*w*v*r*s+x*y*z*u*v*r*s+x*y*w*u*v*r*s+x*z*w*u*v*r*s+y*z*w*u*v*r*s,x*y*z*w*u*v*r*s-1</Equations>
            <GBasisLen>372</GBasisLen>
            <HilbertPolynomial>144s + 760</HilbertPolynomial>
            <Polynomials>
				8
				
				8
				1    1 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 1 
				
				8
				1    1 1 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 
				1    0 0 0 1 1 0 0 0 
				1    0 0 0 0 1 1 0 0 
				1    0 0 0 0 0 1 1 0 
				1    1 0 0 0 0 0 0 1 
				1    0 0 0 0 0 0 1 1 
				
				8
				1    1 1 1 0 0 0 0 0 
				1    0 1 1 1 0 0 0 0 
				1    0 0 1 1 1 0 0 0 
				1    0 0 0 1 1 1 0 0 
				1    0 0 0 0 1 1 1 0 
				1    1 1 0 0 0 0 0 1 
				1    1 0 0 0 0 0 1 1 
				1    0 0 0 0 0 1 1 1 
				
				8
				1    1 1 1 1 0 0 0 0 
				1    0 1 1 1 1 0 0 0 
				1    0 0 1 1 1 1 0 0 
				1    0 0 0 1 1 1 1 0 
				1    1 1 1 0 0 0 0 1 
				1    1 1 0 0 0 0 1 1 
				1    1 0 0 0 0 1 1 1 
				1    0 0 0 0 1 1 1 1 
				
				8
				1    1 1 1 1 1 0 0 0 
				1    0 1 1 1 1 1 0 0 
				1    0 0 1 1 1 1 1 0 
				1    1 1 1 1 0 0 0 1 
				1    1 1 1 0 0 0 1 1 
				1    1 1 0 0 0 1 1 1 
				1    1 0 0 0 1 1 1 1 
				1    0 0 0 1 1 1 1 1 
				
				8
				1    1 1 1 1 1 1 0 0 
				1    0 1 1 1 1 1 1 0 
				1    1 1 1 1 1 0 0 1 
				1    1 1 1 1 0 0 1 1 
				1    1 1 1 0 0 1 1 1 
				1    1 1 0 0 1 1 1 1 
				1    1 0 0 1 1 1 1 1 
				1    0 0 1 1 1 1 1 1 
				
				8
				1    1 1 1 1 1 1 1 0 
				1    1 1 1 1 1 1 0 1 
				1    1 1 1 1 1 0 1 1 
				1    1 1 1 1 0 1 1 1 
				1    1 1 1 0 1 1 1 1 
				1    1 1 0 1 1 1 1 1 
				1    1 0 1 1 1 1 1 1 
				1    0 1 1 1 1 1 1 1 
				
				2
				1    1 1 1 1 1 1 1 1 
				-1    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>d1</ID>
            <Name>D1</Name>
            <Description>\textbf{Title}: A sparse system, known as benchmark D1</Description>
            <References>\begin{itemize}\item H. Hong and V. Stahl: `Safe Starting Regions by Fixed Points and Tightening', Computing 53(3-4): 322-335, 1995.\item Faugere J.C. A new efficient algorithm for computing Grobner Basis (F4). Technical report, Task 3.3.2.1 Frisco report, 1997. preprint.\item Jan Verschelde. Homotopy Continuation Methods for solving Polynomial Systems. PhD thesis, Katholike Univ. Leuven, May 1996.\end{itemize}</References>
            <Notes>The system is deficient w.r.t. the face normals\\   (1,1,0,0, 0,0,0,0, 0,0,0,0)\\   (0,0,1,1, 1,1,1,1, 0,0,0,0)\\   (0,0,2,2, 2,2,2,2, -2,0,1,1)\\   (0,0,2,2, 2,2,0,0, -2,0,1,1)\\   (0,0,2,2, 0,0,2,2, -2,0,1,1)\\   (0,0,0,0, 2,2,2,2, -2,0,1,1)</Notes>
            <Variables>x[1..12]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, d1, with_12_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_12_vars</TestEnvironment>
            <Equations>-10000*x[10]*x[11]*x[3]-10000*x[10]*x[11]*x[5]-10000*x[10]*x[11]*x[7]+10000*x[12]*x[4]+10000*x[12]*x[6]+10000*x[12]*x[8]-4077,2000*x[1]*x[10]+2000*x[2]*x[4]*x[9]+2000*x[2]*x[6]*x[9]+2000*x[2]*x[8]*x[9]-3823,10000*x[3]*x[9]+10000*x[5]*x[9]+10000*x[7]*x[9]-19791,3750*x[2]*x[4]+2500*x[2]*x[6]+1250*x[2]*x[8]-5077,7500*x[1]*x[4]+5000*x[1]*x[6]+2500*x[1]*x[8]-4293,30000*x[3]+20000*x[5]+10000*x[7]-39701,x[11]^2+x[12]^2-1,x[10]^2+x[9]^2-1,x[7]^2+x[8]^2-1,x[5]^2+x[6]^2-1,x[3]^2+x[4]^2-1,x[1]^2+x[2]^2-1</Equations>
            <GBasisLen>86</GBasisLen>
            <HilbertPolynomial>48</HilbertPolynomial>
            <Polynomials>
				12
				
				7
				-10000    0 0 1 0 0 0 0 0 0 1 1 0 
				-10000    0 0 0 0 1 0 0 0 0 1 1 0 
				-10000    0 0 0 0 0 0 1 0 0 1 1 0 
				10000    0 0 0 1 0 0 0 0 0 0 0 1 
				10000    0 0 0 0 0 1 0 0 0 0 0 1 
				10000    0 0 0 0 0 0 0 1 0 0 0 1 
				-4077    0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				2000    0 1 0 1 0 0 0 0 1 0 0 0 
				2000    0 1 0 0 0 1 0 0 1 0 0 0 
				2000    0 1 0 0 0 0 0 1 1 0 0 0 
				2000    1 0 0 0 0 0 0 0 0 1 0 0 
				-3823    0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				10000    0 0 1 0 0 0 0 0 1 0 0 0 
				10000    0 0 0 0 1 0 0 0 1 0 0 0 
				10000    0 0 0 0 0 0 1 0 1 0 0 0 
				-19791    0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				3750    0 1 0 1 0 0 0 0 0 0 0 0 
				2500    0 1 0 0 0 1 0 0 0 0 0 0 
				1250    0 1 0 0 0 0 0 1 0 0 0 0 
				-5077    0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				7500    1 0 0 1 0 0 0 0 0 0 0 0 
				5000    1 0 0 0 0 1 0 0 0 0 0 0 
				2500    1 0 0 0 0 0 0 1 0 0 0 0 
				-4293    0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				30000    0 0 1 0 0 0 0 0 0 0 0 0 
				20000    0 0 0 0 1 0 0 0 0 0 0 0 
				10000    0 0 0 0 0 0 1 0 0 0 0 0 
				-39701    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    0 0 0 0 0 0 0 0 0 0 2 0 
				1    0 0 0 0 0 0 0 0 0 0 0 2 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    0 0 0 0 0 0 0 0 2 0 0 0 
				1    0 0 0 0 0 0 0 0 0 2 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    0 0 0 0 0 0 2 0 0 0 0 0 
				1    0 0 0 0 0 0 0 2 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    0 0 0 0 2 0 0 0 0 0 0 0 
				1    0 0 0 0 0 2 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    0 0 2 0 0 0 0 0 0 0 0 0 
				1    0 0 0 2 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    2 0 0 0 0 0 0 0 0 0 0 0 
				1    0 2 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>des18_3</ID>
            <Name>Des18_3</Name>
            <Description>\textbf{Title}: A 'dessin d'enfant', called des18_3</Description>
            <References>\begin{itemize} \item Raphael Nauheim. 'Systems of Algebraic Equations with Bad Reduction', Universitaet Heidelberg, Interdisziplinaeres Zentrum fuer wissenschaftliches Rechnen, Preprint 95-46, Dezember 1995.\item Birch, B: 'Noncongruence Subgroups, Covers and Drawings', In 'The Grothendieck Theory of Dessins d'Enfants', editor: Schneps, L., London Mathematical Society Lecture Series, Cambridge University Press, pages 25-46, 1994.\end{itemize} </References>
            <Notes>There are six real and forty complex conjugated solutions.</Notes>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, des18_3, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>-81*x^2*z+3*x*y*s+4*x*z*r+5*x*w*v+24*x*u+7*y*v+8*z*u,-54*x^2*w-104*x*y+5*x*z*s+6*x*w*r+8*x*u+28*x*v+8*y*r+9*z*v+10*w*u,-60*x-16*w+28*r+105*s,-162*x^2-284*x*w+50*x*r+180*x*s-112*y+55*z*s+60*w*r+70*u+260*v,11*x*s-176*x-15*z+13*w*s+15*v+56*r,s-1,-162*x^2*y+2*x*y*r+3*x*z*v+4*x*w*u+6*y*u,-162*x^2-75*x*z+7*x*w*s+32*x*r+9*y*v+9*y*s+10*z*r+11*w*v+48*u</Equations>
            <GBasisLen>39</GBasisLen>
            <HilbertPolynomial>46</HilbertPolynomial>
            <Polynomials>
				8
				
				7
				-81    2 0 1 0 0 0 0 0 
				5    1 0 0 1 0 1 0 0 
				4    1 0 1 0 0 0 1 0 
				3    1 1 0 0 0 0 0 1 
				24    1 0 0 0 1 0 0 0 
				8    0 0 1 0 1 0 0 0 
				7    0 1 0 0 0 1 0 0 
				
				9
				-54    2 0 0 1 0 0 0 0 
				6    1 0 0 1 0 0 1 0 
				5    1 0 1 0 0 0 0 1 
				-104    1 1 0 0 0 0 0 0 
				8    1 0 0 0 1 0 0 0 
				10    0 0 0 1 1 0 0 0 
				28    1 0 0 0 0 1 0 0 
				9    0 0 1 0 0 1 0 0 
				8    0 1 0 0 0 0 1 0 
				
				4
				-60    1 0 0 0 0 0 0 0 
				-16    0 0 0 1 0 0 0 0 
				28    0 0 0 0 0 0 1 0 
				105    0 0 0 0 0 0 0 1 
				
				9
				-162    2 0 0 0 0 0 0 0 
				-284    1 0 0 1 0 0 0 0 
				50    1 0 0 0 0 0 1 0 
				60    0 0 0 1 0 0 1 0 
				180    1 0 0 0 0 0 0 1 
				55    0 0 1 0 0 0 0 1 
				-112    0 1 0 0 0 0 0 0 
				70    0 0 0 0 1 0 0 0 
				260    0 0 0 0 0 1 0 0 
				
				6
				11    1 0 0 0 0 0 0 1 
				13    0 0 0 1 0 0 0 1 
				-176    1 0 0 0 0 0 0 0 
				-15    0 0 1 0 0 0 0 0 
				15    0 0 0 0 0 1 0 0 
				56    0 0 0 0 0 0 1 0 
				
				2
				1    0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 
				
				5
				-162    2 1 0 0 0 0 0 0 
				4    1 0 0 1 1 0 0 0 
				3    1 0 1 0 0 1 0 0 
				2    1 1 0 0 0 0 1 0 
				6    0 1 0 0 1 0 0 0 
				
				9
				7    1 0 0 1 0 0 0 1 
				-162    2 0 0 0 0 0 0 0 
				-75    1 0 1 0 0 0 0 0 
				9    0 1 0 0 0 1 0 0 
				11    0 0 0 1 0 1 0 0 
				32    1 0 0 0 0 0 1 0 
				10    0 0 1 0 0 0 1 0 
				9    0 1 0 0 0 0 0 1 
				48    0 0 0 0 1 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>des22_24</ID>
            <Name>Des22_24</Name>
            <Description>\textbf{Title}: a 'dessin d'enfant', called des22_24</Description>
            <References>\begin{itemize} \item Raphael Nauheim. 'Systems of Algebraic Equations with Bad Reduction', Universitaet Heidelberg, Interdisziplinaeres Zentrum fuer wissenschaftliches Rechnen, Preprint 95-46, Dezember 1995.\item Birch, B: 'Noncongruence Subgroups, Covers and Drawings', In 'The Grothendieck Theory of Dessins d'Enfants', editor: Schneps, L., London Mathematical Society Lecture Series, Cambridge University Press, pages 25-46, 1994.\end{itemize} </References>
            <Notes>There are 10 real and 32 conjugate complex solutions. Among the 10 real solutions, four of them are ill-condition.</Notes>
            <Variables>x,y,z,w,u,v,r,s,t,p</Variables>
            <TagsList>DevRevLex, DegLex, Lex, des22_24, with_10_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_10_vars</TestEnvironment>
            <Equations>8*x*r+9*y*v+10*z*u,-16*w+36*t+171*p,7*x*v+8*y*u,p-1,10*x*t+11*y*s+12*z*r+13*w*v+70*u,9*x*s+10*y*r+11*z*v+12*w*u,11*x*p+12*y*t+13*z*s+14*w*r+16*u+75*v,-85*x+39*y*p+42*z*t+45*w*s+51*v+240*r,-57*z+68*w*p+76*s+360*t,-144*y+105*z*p+112*w*t+126*r+595*s</Equations>
            <GBasisLen>45</GBasisLen>
            <HilbertPolynomial>42</HilbertPolynomial>
            <Polynomials>
				10
				
				3
				10    0 0 1 0 1 0 0 0 0 0 
				9    0 1 0 0 0 1 0 0 0 0 
				8    1 0 0 0 0 0 1 0 0 0 
				
				3
				-16    0 0 0 1 0 0 0 0 0 0 
				36    0 0 0 0 0 0 0 0 1 0 
				171    0 0 0 0 0 0 0 0 0 1 
				
				2
				8    0 1 0 0 1 0 0 0 0 0 
				7    1 0 0 0 0 1 0 0 0 0 
				
				2
				1    0 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				5
				13    0 0 0 1 0 1 0 0 0 0 
				12    0 0 1 0 0 0 1 0 0 0 
				11    0 1 0 0 0 0 0 1 0 0 
				10    1 0 0 0 0 0 0 0 1 0 
				70    0 0 0 0 1 0 0 0 0 0 
				
				4
				12    0 0 0 1 1 0 0 0 0 0 
				11    0 0 1 0 0 1 0 0 0 0 
				10    0 1 0 0 0 0 1 0 0 0 
				9    1 0 0 0 0 0 0 1 0 0 
				
				6
				14    0 0 0 1 0 0 1 0 0 0 
				13    0 0 1 0 0 0 0 1 0 0 
				12    0 1 0 0 0 0 0 0 1 0 
				11    1 0 0 0 0 0 0 0 0 1 
				16    0 0 0 0 1 0 0 0 0 0 
				75    0 0 0 0 0 1 0 0 0 0 
				
				6
				45    0 0 0 1 0 0 0 1 0 0 
				42    0 0 1 0 0 0 0 0 1 0 
				39    0 1 0 0 0 0 0 0 0 1 
				-85    1 0 0 0 0 0 0 0 0 0 
				51    0 0 0 0 0 1 0 0 0 0 
				240    0 0 0 0 0 0 1 0 0 0 
				
				4
				68    0 0 0 1 0 0 0 0 0 1 
				-57    0 0 1 0 0 0 0 0 0 0 
				76    0 0 0 0 0 0 0 1 0 0 
				360    0 0 0 0 0 0 0 0 1 0 
				
				5
				112    0 0 0 1 0 0 0 0 1 0 
				105    0 0 1 0 0 0 0 0 0 1 
				-144    0 1 0 0 0 0 0 0 0 0 
				126    0 0 0 0 0 0 1 0 0 0 
				595    0 0 0 0 0 0 0 1 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>dessin1</ID>
            <Name>Dessin1</Name>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, dessin1, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>6*s*x*y+10*w*x*v+8*r*x*z-162*x^2*z+16*z*u+14*v*y+48*x*u,15*s*x*z-162*x^2*w-312*x*y+24*x*u+27*v*z+24*r*y+18*w*x*r+30*w*u+84*v*x,-240*x+420*s-64*w+112*r,180*s*x-284*w*x-162*x^2+60*w*r+50*r*x+70*u+55*s*z+260*v-112*y,66*s*x+336*r+90*v+78*w*s-1056*x-90*z,136*s-136,4*w*x*u+2*r*x*y+6*y*u-162*x^2*y+3*v*z*x,28*w*x*s+192*u+128*r*x+36*v*y+36*s*y-300*x*z+40*r*z-648*x^2+44*w*v</Equations>
            <GBasisLen>39</GBasisLen>
            <HilbertPolynomial>46</HilbertPolynomial>
            <Polynomials>
				8
				
				7
				-162    2 0 1 0 0 0 0 0 
				10    1 0 0 1 0 1 0 0 
				8    1 0 1 0 0 0 1 0 
				6    1 1 0 0 0 0 0 1 
				48    1 0 0 0 1 0 0 0 
				16    0 0 1 0 1 0 0 0 
				14    0 1 0 0 0 1 0 0 
				
				9
				-162    2 0 0 1 0 0 0 0 
				18    1 0 0 1 0 0 1 0 
				15    1 0 1 0 0 0 0 1 
				-312    1 1 0 0 0 0 0 0 
				24    1 0 0 0 1 0 0 0 
				30    0 0 0 1 1 0 0 0 
				84    1 0 0 0 0 1 0 0 
				27    0 0 1 0 0 1 0 0 
				24    0 1 0 0 0 0 1 0 
				
				4
				-240    1 0 0 0 0 0 0 0 
				-64    0 0 0 1 0 0 0 0 
				112    0 0 0 0 0 0 1 0 
				420    0 0 0 0 0 0 0 1 
				
				9
				-162    2 0 0 0 0 0 0 0 
				-284    1 0 0 1 0 0 0 0 
				50    1 0 0 0 0 0 1 0 
				60    0 0 0 1 0 0 1 0 
				180    1 0 0 0 0 0 0 1 
				55    0 0 1 0 0 0 0 1 
				-112    0 1 0 0 0 0 0 0 
				70    0 0 0 0 1 0 0 0 
				260    0 0 0 0 0 1 0 0 
				
				6
				66    1 0 0 0 0 0 0 1 
				78    0 0 0 1 0 0 0 1 
				-1056    1 0 0 0 0 0 0 0 
				-90    0 0 1 0 0 0 0 0 
				90    0 0 0 0 0 1 0 0 
				336    0 0 0 0 0 0 1 0 
				
				2
				136    0 0 0 0 0 0 0 1 
				-136    0 0 0 0 0 0 0 0 
				
				5
				-162    2 1 0 0 0 0 0 0 
				4    1 0 0 1 1 0 0 0 
				3    1 0 1 0 0 1 0 0 
				2    1 1 0 0 0 0 1 0 
				6    0 1 0 0 1 0 0 0 
				
				9
				28    1 0 0 1 0 0 0 1 
				-648    2 0 0 0 0 0 0 0 
				-300    1 0 1 0 0 0 0 0 
				36    0 1 0 0 0 1 0 0 
				44    0 0 0 1 0 1 0 0 
				128    1 0 0 0 0 0 1 0 
				40    0 0 1 0 0 0 1 0 
				36    0 1 0 0 0 0 0 1 
				192    0 0 0 0 1 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>dessin2</ID>
            <Name>Dessin2</Name>
            <Variables>x,y,z,w,u,v,r,s,t,p</Variables>
            <TagsList>DevRevLex, DegLex, Lex, dessin2, with_10_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_10_vars</TestEnvironment>
            <Equations>16*x*y+18*z*w+20*u*v,-80*r+180*t+855*s,7*x*w+8*z*v,210*s-210,40*x*t+44*z*p+48*u*y+52*r*w+280*v,27*x*p+30*z*y+33*u*w+36*r*v,55*x*s+60*z*t+65*u*p+70*r*y+80*v+375*w,78*z*s+84*u*t+90*r*p-170*x+102*w+480*y,136*r*s-114*u+152*p+720*t,105*u*s+112*r*t-144*z+126*y+595*p</Equations>
            <GBasisLen>46</GBasisLen>
            <HilbertPolynomial>42</HilbertPolynomial>
            <Polynomials>
				10
				
				3
				16    1 1 0 0 0 0 0 0 0 0 
				18    0 0 1 1 0 0 0 0 0 0 
				20    0 0 0 0 1 1 0 0 0 0 
				
				3
				-80    0 0 0 0 0 0 1 0 0 0 
				855    0 0 0 0 0 0 0 1 0 0 
				180    0 0 0 0 0 0 0 0 1 0 
				
				2
				7    1 0 0 1 0 0 0 0 0 0 
				8    0 0 1 0 0 1 0 0 0 0 
				
				2
				210    0 0 0 0 0 0 0 1 0 0 
				-210    0 0 0 0 0 0 0 0 0 0 
				
				5
				48    0 1 0 0 1 0 0 0 0 0 
				52    0 0 0 1 0 0 1 0 0 0 
				40    1 0 0 0 0 0 0 0 1 0 
				44    0 0 1 0 0 0 0 0 0 1 
				280    0 0 0 0 0 1 0 0 0 0 
				
				4
				30    0 1 1 0 0 0 0 0 0 0 
				33    0 0 0 1 1 0 0 0 0 0 
				36    0 0 0 0 0 1 1 0 0 0 
				27    1 0 0 0 0 0 0 0 0 1 
				
				6
				70    0 1 0 0 0 0 1 0 0 0 
				55    1 0 0 0 0 0 0 1 0 0 
				60    0 0 1 0 0 0 0 0 1 0 
				65    0 0 0 0 1 0 0 0 0 1 
				375    0 0 0 1 0 0 0 0 0 0 
				80    0 0 0 0 0 1 0 0 0 0 
				
				6
				78    0 0 1 0 0 0 0 1 0 0 
				84    0 0 0 0 1 0 0 0 1 0 
				90    0 0 0 0 0 0 1 0 0 1 
				-170    1 0 0 0 0 0 0 0 0 0 
				480    0 1 0 0 0 0 0 0 0 0 
				102    0 0 0 1 0 0 0 0 0 0 
				
				4
				136    0 0 0 0 0 0 1 1 0 0 
				-114    0 0 0 0 1 0 0 0 0 0 
				720    0 0 0 0 0 0 0 0 1 0 
				152    0 0 0 0 0 0 0 0 0 1 
				
				5
				105    0 0 0 0 1 0 0 1 0 0 
				112    0 0 0 0 0 0 1 0 1 0 
				126    0 1 0 0 0 0 0 0 0 0 
				-144    0 0 1 0 0 0 0 0 0 0 
				595    0 0 0 0 0 0 0 0 0 1 
				</Polynomials>
        </Example>
        <Example>
            <ID>discret3</ID>
            <Name>Discret3</Name>
            <Description>\textbf{Title}: system discret3, every equation divided by average coefficient</Description>
            <References>\begin{itemize}\item Received from POSSO via e-mail.\end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, discret3, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>-171924462394935*x*z-196485099879926*s*z-343848924789870*u*z-275079139831896*v*z-229232616526580*r*z-687697849579740*z^2-458465233053160*z*w+20630935487392200*z-22006331186551700,-594213492419062*x*w-668490178971445*s*w-1069584286354310*u*w-891320238628593*v*w-763988775967365*r*w-1782640477257190*z*w-1336980357942890*w^2+40109410738286700*w-42783371454172500,-787472657199403*x*u-874969619110448*s*u-1312454428665670*u^2-1124960938856290*u*v-984340821499253*u*r-1968681642998510*u*z-1574945314398810*u*w+39373632859970100*u-41998541717301500,-188379133771611*x*v-207217047148772*s*v-296024353069674*u*v-259021308935966*v^2-230241163498636*v*r-414434094297544*v*z-345361745247954*v*w+7770639268078960*v-8288681885950880,-106839473562498*x*r-116552152977270*s*r-160259210343747*u*r-142452631416664*v*r-128207368274997*r^2-213678947124996*r*z-183153383249996*r*w+3846221048249920*r-4102635784799910,-117403955159859*x*s-127187618089847*s^2-169583490786463*s*u-152625141707816*s*v-138750128825288*s*r-218035916725452*s*z-190781427134770*s*w+3815628542695410*s-4070003778875100,-126365674967585*x^2-136086111503553*x*s-176911944954619*x*u-160829040867835*x*v-147426620795516*x*r-221139931193274*x*z-196568827727354*x*w+3790970249027550*x-4043701598962720,-134067071979761*x*y-143643291406887*y*s-182818734517856*y*u-167583839974702*y*v-154692775361263*y*r-223445119966269*y*z-201100607969642*y*w+3770636399430780*y-4022012159392840</Equations>
            <GBasisLen>147</GBasisLen>
            <HilbertPolynomial>128</HilbertPolynomial>
            <Polynomials>
				8
				
				9
				-171924462394935    1 0 1 0 0 0 0 0 
				-687697849579740    0 0 2 0 0 0 0 0 
				-458465233053160    0 0 1 1 0 0 0 0 
				-343848924789870    0 0 1 0 1 0 0 0 
				-275079139831896    0 0 1 0 0 1 0 0 
				-229232616526580    0 0 1 0 0 0 1 0 
				-196485099879926    0 0 1 0 0 0 0 1 
				20630935487392200    0 0 1 0 0 0 0 0 
				-22006331186551700    0 0 0 0 0 0 0 0 
				
				9
				-594213492419062    1 0 0 1 0 0 0 0 
				-1782640477257190    0 0 1 1 0 0 0 0 
				-1336980357942890    0 0 0 2 0 0 0 0 
				-1069584286354310    0 0 0 1 1 0 0 0 
				-891320238628593    0 0 0 1 0 1 0 0 
				-763988775967365    0 0 0 1 0 0 1 0 
				-668490178971445    0 0 0 1 0 0 0 1 
				40109410738286700    0 0 0 1 0 0 0 0 
				-42783371454172500    0 0 0 0 0 0 0 0 
				
				9
				-787472657199403    1 0 0 0 1 0 0 0 
				-1968681642998510    0 0 1 0 1 0 0 0 
				-1574945314398810    0 0 0 1 1 0 0 0 
				-1312454428665670    0 0 0 0 2 0 0 0 
				-1124960938856290    0 0 0 0 1 1 0 0 
				-984340821499253    0 0 0 0 1 0 1 0 
				-874969619110448    0 0 0 0 1 0 0 1 
				39373632859970100    0 0 0 0 1 0 0 0 
				-41998541717301500    0 0 0 0 0 0 0 0 
				
				9
				-188379133771611    1 0 0 0 0 1 0 0 
				-414434094297544    0 0 1 0 0 1 0 0 
				-345361745247954    0 0 0 1 0 1 0 0 
				-296024353069674    0 0 0 0 1 1 0 0 
				-259021308935966    0 0 0 0 0 2 0 0 
				-230241163498636    0 0 0 0 0 1 1 0 
				-207217047148772    0 0 0 0 0 1 0 1 
				7770639268078960    0 0 0 0 0 1 0 0 
				-8288681885950880    0 0 0 0 0 0 0 0 
				
				9
				-106839473562498    1 0 0 0 0 0 1 0 
				-213678947124996    0 0 1 0 0 0 1 0 
				-183153383249996    0 0 0 1 0 0 1 0 
				-160259210343747    0 0 0 0 1 0 1 0 
				-142452631416664    0 0 0 0 0 1 1 0 
				-128207368274997    0 0 0 0 0 0 2 0 
				-116552152977270    0 0 0 0 0 0 1 1 
				3846221048249920    0 0 0 0 0 0 1 0 
				-4102635784799910    0 0 0 0 0 0 0 0 
				
				9
				-117403955159859    1 0 0 0 0 0 0 1 
				-218035916725452    0 0 1 0 0 0 0 1 
				-190781427134770    0 0 0 1 0 0 0 1 
				-169583490786463    0 0 0 0 1 0 0 1 
				-152625141707816    0 0 0 0 0 1 0 1 
				-138750128825288    0 0 0 0 0 0 1 1 
				-127187618089847    0 0 0 0 0 0 0 2 
				3815628542695410    0 0 0 0 0 0 0 1 
				-4070003778875100    0 0 0 0 0 0 0 0 
				
				9
				-126365674967585    2 0 0 0 0 0 0 0 
				-221139931193274    1 0 1 0 0 0 0 0 
				-196568827727354    1 0 0 1 0 0 0 0 
				-176911944954619    1 0 0 0 1 0 0 0 
				-160829040867835    1 0 0 0 0 1 0 0 
				-147426620795516    1 0 0 0 0 0 1 0 
				-136086111503553    1 0 0 0 0 0 0 1 
				3790970249027550    1 0 0 0 0 0 0 0 
				-4043701598962720    0 0 0 0 0 0 0 0 
				
				9
				-134067071979761    1 1 0 0 0 0 0 0 
				-223445119966269    0 1 1 0 0 0 0 0 
				-201100607969642    0 1 0 1 0 0 0 0 
				-182818734517856    0 1 0 0 1 0 0 0 
				-167583839974702    0 1 0 0 0 1 0 0 
				-154692775361263    0 1 0 0 0 0 1 0 
				-143643291406887    0 1 0 0 0 0 0 1 
				3770636399430780    0 1 0 0 0 0 0 0 
				-4022012159392840    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>dl</ID>
            <Name>Dl</Name>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, dl, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>
            x^3+3*x*z^2-2*y^3-6*y*w^2,5*x^6+30*x^4*z^2+72*x^2*y^2*z*w+45*x^2*z^4+24*x^2*z*w^3-192*x^2*z-36*y^4*w^2+24*y^2*z^3*w-24*y^2*w^4+8*z^3*w^3-64*z^3-4*w^6+256,-48*u^2*x^2*z+24*u^2*y^2*w-16*u^2*z^3+8*u^2*w^3+64*u^2+20*u*x^3*s+60*u*x*s*z^2+6*v^2*x^2*z-3*v^2*y^2*w+2*v^2*z^3-v^2*w^3-8*v^2+5*v*x^3*r+15*v*x*r*z^2-48*x^2*s^2*z+6*x^2*r^2*z+48*x^2*z+24*y^2*s^2*w-3*y^2*r^2*w-24*y^2*w-16*s^2*z^3+8*s^2*w^3+64*s^2+2*r^2*z^3-r^2*w^3-8*r^2+16*z^3-8*w^3-64,96*u*x^2*s*z-48*u*y^2*s*w+32*u*s*z^3-16*u*s*w^3-128*u*s+5*v^2*x^3+15*v^2*x*z^2+24*v*x^2*r*z-12*v*y^2*r*w+8*v*r*z^3-4*v*r*w^3-32*v*r+5*x^3*r^2-40*x^3+15*x*r^2*z^2-120*x*z^2,8*u^2*x^3+24*u^2*x*z^2+48*u*y^2*s*w+16*u*s*w^3-128*u*s-v^2*x^3-3*v^2*x*z^2+12*v*y^2*r*w+4*v*r*w^3-32*v*r+8*x^3*s^2-x^3*r^2-8*x^3+24*x*s^2*z^2-3*x*r^2*z^2-24*x*z^2,-4*u*x^3*s-12*u*x*s*z^2+3*v^2*y^2*w+v^2*w^3-8*v^2-v*x^3*r-3*v*x*r*z^2+3*y^2*r^2*w-24*y^2*w+r^2*w^3-8*r^2-8*w^3+64,-8*u^2*v^2-64*u^2*s^2-8*u^2*r^2+64*u^2-32*u*v*s*r+v^4-8*v^2*s^2-2*v^2*r^2-8*s^2*r^2+64*s^2+r^4-64,u*z-x*s,-v*w+y*r,-u*x+s*z-4,-v*y+r*w-4</Equations>
            <GBasisLen>323</GBasisLen>
            <HilbertPolynomial>468</HilbertPolynomial>
            <Polynomials>
				11
				
				4
				1    3 0 0 0 0 0 0 0 
				-2    0 3 0 0 0 0 0 0 
				3    1 0 2 0 0 0 0 0 
				-6    0 1 0 2 0 0 0 0 
				
				13
				5    6 0 0 0 0 0 0 0 
				30    4 0 2 0 0 0 0 0 
				45    2 0 4 0 0 0 0 0 
				72    2 2 1 1 0 0 0 0 
				24    0 2 3 1 0 0 0 0 
				-36    0 4 0 2 0 0 0 0 
				24    2 0 1 3 0 0 0 0 
				8    0 0 3 3 0 0 0 0 
				-24    0 2 0 4 0 0 0 0 
				-4    0 0 0 6 0 0 0 0 
				-192    2 0 1 0 0 0 0 0 
				-64    0 0 3 0 0 0 0 0 
				256    0 0 0 0 0 0 0 0 
				
				29
				-48    2 0 1 0 2 0 0 0 
				-16    0 0 3 0 2 0 0 0 
				24    0 2 0 1 2 0 0 0 
				8    0 0 0 3 2 0 0 0 
				6    2 0 1 0 0 2 0 0 
				2    0 0 3 0 0 2 0 0 
				-3    0 2 0 1 0 2 0 0 
				-1    0 0 0 3 0 2 0 0 
				5    3 0 0 0 0 1 1 0 
				15    1 0 2 0 0 1 1 0 
				6    2 0 1 0 0 0 2 0 
				2    0 0 3 0 0 0 2 0 
				-3    0 2 0 1 0 0 2 0 
				-1    0 0 0 3 0 0 2 0 
				20    3 0 0 0 1 0 0 1 
				60    1 0 2 0 1 0 0 1 
				-48    2 0 1 0 0 0 0 2 
				-16    0 0 3 0 0 0 0 2 
				24    0 2 0 1 0 0 0 2 
				8    0 0 0 3 0 0 0 2 
				48    2 0 1 0 0 0 0 0 
				16    0 0 3 0 0 0 0 0 
				-24    0 2 0 1 0 0 0 0 
				-8    0 0 0 3 0 0 0 0 
				64    0 0 0 0 2 0 0 0 
				-8    0 0 0 0 0 2 0 0 
				-8    0 0 0 0 0 0 2 0 
				64    0 0 0 0 0 0 0 2 
				-64    0 0 0 0 0 0 0 0 
				
				16
				5    3 0 0 0 0 2 0 0 
				15    1 0 2 0 0 2 0 0 
				24    2 0 1 0 0 1 1 0 
				8    0 0 3 0 0 1 1 0 
				-12    0 2 0 1 0 1 1 0 
				-4    0 0 0 3 0 1 1 0 
				5    3 0 0 0 0 0 2 0 
				15    1 0 2 0 0 0 2 0 
				96    2 0 1 0 1 0 0 1 
				32    0 0 3 0 1 0 0 1 
				-48    0 2 0 1 1 0 0 1 
				-16    0 0 0 3 1 0 0 1 
				-40    3 0 0 0 0 0 0 0 
				-120    1 0 2 0 0 0 0 0 
				-32    0 0 0 0 0 1 1 0 
				-128    0 0 0 0 1 0 0 1 
				
				16
				8    3 0 0 0 2 0 0 0 
				24    1 0 2 0 2 0 0 0 
				-1    3 0 0 0 0 2 0 0 
				-3    1 0 2 0 0 2 0 0 
				12    0 2 0 1 0 1 1 0 
				4    0 0 0 3 0 1 1 0 
				-1    3 0 0 0 0 0 2 0 
				-3    1 0 2 0 0 0 2 0 
				48    0 2 0 1 1 0 0 1 
				16    0 0 0 3 1 0 0 1 
				8    3 0 0 0 0 0 0 2 
				24    1 0 2 0 0 0 0 2 
				-8    3 0 0 0 0 0 0 0 
				-24    1 0 2 0 0 0 0 0 
				-32    0 0 0 0 0 1 1 0 
				-128    0 0 0 0 1 0 0 1 
				
				13
				3    0 2 0 1 0 2 0 0 
				1    0 0 0 3 0 2 0 0 
				-1    3 0 0 0 0 1 1 0 
				-3    1 0 2 0 0 1 1 0 
				3    0 2 0 1 0 0 2 0 
				1    0 0 0 3 0 0 2 0 
				-4    3 0 0 0 1 0 0 1 
				-12    1 0 2 0 1 0 0 1 
				-24    0 2 0 1 0 0 0 0 
				-8    0 0 0 3 0 0 0 0 
				-8    0 0 0 0 0 2 0 0 
				-8    0 0 0 0 0 0 2 0 
				64    0 0 0 0 0 0 0 0 
				
				12
				-8    0 0 0 0 2 2 0 0 
				1    0 0 0 0 0 4 0 0 
				-8    0 0 0 0 2 0 2 0 
				-2    0 0 0 0 0 2 2 0 
				1    0 0 0 0 0 0 4 0 
				-32    0 0 0 0 1 1 1 1 
				-64    0 0 0 0 2 0 0 2 
				-8    0 0 0 0 0 2 0 2 
				-8    0 0 0 0 0 0 2 2 
				64    0 0 0 0 2 0 0 0 
				64    0 0 0 0 0 0 0 2 
				-64    0 0 0 0 0 0 0 0 
				
				2
				1    0 0 1 0 1 0 0 0 
				-1    1 0 0 0 0 0 0 1 
				
				2
				-1    0 0 0 1 0 1 0 0 
				1    0 1 0 0 0 0 1 0 
				
				3
				-1    1 0 0 0 1 0 0 0 
				1    0 0 1 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 
				
				3
				-1    0 1 0 0 0 1 0 0 
				1    0 0 0 1 0 0 1 0 
				-4    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>ducos7_5</ID>
            <Name>Ducos7_5</Name>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, ducos7_5, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>
            r^7+r^6-12*r^5-7*r^4+28*r^3+14*r^2-9*r+1,v^6+v^5*r+v^5+v^4*r^2+v^4*r-12*v^4+v^3*r^3+v^3*r^2-12*v^3*r-7*v^3+v^2*r^4+v^2*r^3-12*v^2*r^2-7*v^2*r+28*v^2+v*r^5+v*r^4-12*v*r^3-7*v*r^2+28*v*r+14*v+r^6+r^5-12*r^4-7*r^3+28*r^2+14*r-9,u^5+u^4*v+u^4*r+u^4+u^3*v^2+u^3*v*r+u^3*v+u^3*r^2+u^3*r-12*u^3+u^2*v^3+u^2*v^2*r+u^2*v^2+u^2*v*r^2+u^2*v*r-12*u^2*v+u^2*r^3+u^2*r^2-12*u^2*r-7*u^2+u*v^4+u*v^3*r+u*v^3+u*v^2*r^2+u*v^2*r-12*u*v^2+u*v*r^3+u*v*r^2-12*u*v*r-7*u*v+u*r^4+u*r^3-12*u*r^2-7*u*r+28*u+v^5+v^4*r+v^4+v^3*r^2+v^3*r-12*v^3+v^2*r^3+v^2*r^2-12*v^2*r-7*v^2+v*r^4+v*r^3-12*v*r^2-7*v*r+28*v+r^5+r^4-12*r^3-7*r^2+28*r+14,w^4+w^3*u+w^3*v+w^3*r+w^3+w^2*u^2+w^2*u*v+w^2*u*r+w^2*u+w^2*v^2+w^2*v*r+w^2*v+w^2*r^2+w^2*r-12*w^2+w*u^3+w*u^2*v+w*u^2*r+w*u^2+w*u*v^2+w*u*v*r+w*u*v+w*u*r^2+w*u*r-12*w*u+w*v^3+w*v^2*r+w*v^2+w*v*r^2+w*v*r-12*w*v+w*r^3+w*r^2-12*w*r-7*w+u^4+u^3*v+u^3*r+u^3+u^2*v^2+u^2*v*r+u^2*v+u^2*r^2+u^2*r-12*u^2+u*v^3+u*v^2*r+u*v^2+u*v*r^2+u*v*r-12*u*v+u*r^3+u*r^2-12*u*r-7*u+v^4+v^3*r+v^3+v^2*r^2+v^2*r-12*v^2+v*r^3+v*r^2-12*v*r-7*v+r^4+r^3-12*r^2-7*r+28,z^3+z^2*w+z^2*u+z^2*v+z^2*r+z^2+z*w^2+z*w*u+z*w*v+z*w*r+z*w+z*u^2+z*u*v+z*u*r+z*u+z*v^2+z*v*r+z*v+z*r^2+z*r-12*z+w^3+w^2*u+w^2*v+w^2*r+w^2+w*u^2+w*u*v+w*u*r+w*u+w*v^2+w*v*r+w*v+w*r^2+w*r-12*w+u^3+u^2*v+u^2*r+u^2+u*v^2+u*v*r+u*v+u*r^2+u*r-12*u+v^3+v^2*r+v^2+v*r^2+v*r-12*v+r^3+r^2-12*r-7,y^2+y*z+y*w+y*u+y*v+y*r+y+z^2+z*w+z*u+z*v+z*r+z+w^2+w*u+w*v+w*r+w+u^2+u*v+u*r+u+v^2+v*r+v+r^2+r-12,x+y+z+w+u+v+r+1,2*y*z+y*w-2*y*u-y*r+z^2+3*z*w-z*u+z*r+z+w^2-w*v+2*w*r+w-u^2-2*u*v-u-v^2-2*v*r-v,-21*y*z*w*u^3*v+14*y*z*w*u^3*r-y*z*w*u^3-42*y*z*w*u^2*v^2+49*y*z*w*u^2*v*r-14*y*z*w*u^2*v+13*y*z*w*u^2*r-50*y*z*w*u^2-21*y*z*w*u*v^3+49*y*z*w*u*v^2*r-14*y*z*w*u*v^2+28*y*z*w*u*v*r-89*y*z*w*u*v-21*y*z*w*u*r+48*y*z*w*u+14*y*z*w*v^3*r-y*z*w*v^3+13*y*z*w*v^2*r-50*y*z*w*v^2-21*y*z*w*v*r+48*y*z*w*v-31*y*z*w*r+138*y*z*w-21*y*z*u^4*v+14*y*z*u^4*r-y*z*u^4-21*y*z*u^3*v^2-7*y*z*u^3*v*r-22*y*z*u^3*v+14*y*z*u^3*r^2+13*y*z*u^3*r-y*z*u^3-21*y*z*u^2*v^3-28*y*z*u^2*v^2*r-28*y*z*u^2*v^2+14*y*z*u^2*v*r^2+301*y*z*u^2*v+14*y*z*u^2*r^3+14*y*z*u^2*r^2-218*y*z*u^2*r-40*y*z*u^2-21*y*z*u*v^4-7*y*z*u*v^3*r-22*y*z*u*v^3+14*y*z*u*v^2*r^2+301*y*z*u*v^2+14*y*z*u*v*r^3+14*y*z*u*v*r^2-257*y*z*u*v*r-13*y*z*u*v+14*y*z*u*r^4+14*y*z*u*r^3-168*y*z*u*r^2-50*y*z*u*r+37*y*z*u+14*y*z*v^4*r-y*z*v^4+14*y*z*v^3*r^2+13*y*z*v^3*r-y*z*v^3+14*y*z*v^2*r^3+14*y*z*v^2*r^2-218*y*z*v^2*r-40*y*z*v^2+14*y*z*v*r^4+14*y*z*v*r^3-168*y*z*v*r^2-50*y*z*v*r+37*y*z*v+14*y*z*r^5+14*y*z*r^4-168*y*z*r^3-98*y*z*r^2+530*y*z*r-60*y*z-21*y*w*u^4*v+14*y*w*u^4*r-y*w*u^4-21*y*w*u^3*v^2-7*y*w*u^3*v*r-22*y*w*u^3*v+14*y*w*u^3*r^2+13*y*w*u^3*r-y*w*u^3-21*y*w*u^2*v^3-28*y*w*u^2*v^2*r-28*y*w*u^2*v^2+14*y*w*u^2*v*r^2+301*y*w*u^2*v+14*y*w*u^2*r^3+14*y*w*u^2*r^2-218*y*w*u^2*r-40*y*w*u^2-21*y*w*u*v^4-7*y*w*u*v^3*r-22*y*w*u*v^3+14*y*w*u*v^2*r^2+301*y*w*u*v^2+14*y*w*u*v*r^3+14*y*w*u*v*r^2-257*y*w*u*v*r-13*y*w*u*v+14*y*w*u*r^4+14*y*w*u*r^3-168*y*w*u*r^2-50*y*w*u*r+37*y*w*u+14*y*w*v^4*r-y*w*v^4+14*y*w*v^3*r^2+13*y*w*v^3*r-y*w*v^3+14*y*w*v^2*r^3+14*y*w*v^2*r^2-218*y*w*v^2*r-40*y*w*v^2+14*y*w*v*r^4+14*y*w*v*r^3-168*y*w*v*r^2-50*y*w*v*r+37*y*w*v+14*y*w*r^5+14*y*w*r^4-168*y*w*r^3-98*y*w*r^2+530*y*w*r-60*y*w+21*y*u^4*v^2-56*y*u^4*v*r-8*y*u^4*v+14*y*u^4*r^2+49*y*u^4+21*y*u^3*v^3-56*y*u^3*v^2*r+7*y*u^3*v^2-21*y*u^3*v*r^2-56*y*u^3*v*r+91*y*u^3*v+14*y*u^3*r^3+15*y*u^3*r^2-3*y*u^3+21*y*u^2*v^4-56*y*u^2*v^3*r+7*y*u^2*v^3-21*y*u^2*v^2*r^2-62*y*u^2*v^2*r-167*y*u^2*v^2-21*y*u^2*v*r^3-20*y*u^2*v*r^2+722*y*u^2*v*r+143*y*u^2*v+14*y*u^2*r^4+15*y*u^2*r^3-167*y*u^2*r^2-52*y*u^2*r-640*y*u^2-56*y*u*v^4*r-8*y*u*v^4-21*y*u*v^3*r^2-56*y*u*v^3*r+91*y*u*v^3-21*y*u*v^2*r^3-20*y*u*v^2*r^2+722*y*u*v^2*r+143*y*u*v^2-21*y*u*v*r^4-20*y*u*v*r^3+253*y*u*v*r^2+220*y*u*v*r-1723*y*u*v+14*y*u*r^5+15*y*u*r^4-167*y*u*r^3-110*y*u*r^2+30*y*u*r+411*y*u+14*y*v^4*r^2+49*y*v^4+14*y*v^3*r^3+15*y*v^3*r^2-3*y*v^3+14*y*v^2*r^4+15*y*v^2*r^3-167*y*v^2*r^2-52*y*v^2*r-640*y*v^2+14*y*v*r^5+15*y*v*r^4-167*y*v*r^3-110*y*v*r^2+30*y*v*r+411*y*v+49*y*r^6+50*y*r^5-587*y*r^4-355*y*r^3+1365*y*r^2+458*y*r+1015*y-21*z*w*u^4*v+14*z*w*u^4*r-z*w*u^4-21*z*w*u^3*v^2-7*z*w*u^3*v*r-22*z*w*u^3*v+14*z*w*u^3*r^2+13*z*w*u^3*r-z*w*u^3-21*z*w*u^2*v^3-28*z*w*u^2*v^2*r-28*z*w*u^2*v^2+14*z*w*u^2*v*r^2+301*z*w*u^2*v+14*z*w*u^2*r^3+14*z*w*u^2*r^2-218*z*w*u^2*r-40*z*w*u^2-21*z*w*u*v^4-7*z*w*u*v^3*r-22*z*w*u*v^3+14*z*w*u*v^2*r^2+301*z*w*u*v^2+14*z*w*u*v*r^3+14*z*w*u*v*r^2-257*z*w*u*v*r-13*z*w*u*v+14*z*w*u*r^4+14*z*w*u*r^3-168*z*w*u*r^2-50*z*w*u*r+37*z*w*u+14*z*w*v^4*r-z*w*v^4+14*z*w*v^3*r^2+13*z*w*v^3*r-z*w*v^3+14*z*w*v^2*r^3+14*z*w*v^2*r^2-218*z*w*v^2*r-40*z*w*v^2+14*z*w*v*r^4+14*z*w*v*r^3-168*z*w*v*r^2-50*z*w*v*r+37*z*w*v+14*z*w*r^5+14*z*w*r^4-168*z*w*r^3-98*z*w*r^2+530*z*w*r-60*z*w+21*z*u^4*v^2-56*z*u^4*v*r-8*z*u^4*v+14*z*u^4*r^2+49*z*u^4+21*z*u^3*v^3-56*z*u^3*v^2*r+7*z*u^3*v^2-21*z*u^3*v*r^2-56*z*u^3*v*r+91*z*u^3*v+14*z*u^3*r^3+15*z*u^3*r^2-3*z*u^3+21*z*u^2*v^4-56*z*u^2*v^3*r+7*z*u^2*v^3-21*z*u^2*v^2*r^2-62*z*u^2*v^2*r-167*z*u^2*v^2-21*z*u^2*v*r^3-20*z*u^2*v*r^2+722*z*u^2*v*r+143*z*u^2*v+14*z*u^2*r^4+15*z*u^2*r^3-167*z*u^2*r^2-52*z*u^2*r-640*z*u^2-56*z*u*v^4*r-8*z*u*v^4-21*z*u*v^3*r^2-56*z*u*v^3*r+91*z*u*v^3-21*z*u*v^2*r^3-20*z*u*v^2*r^2+722*z*u*v^2*r+143*z*u*v^2-21*z*u*v*r^4-20*z*u*v*r^3+253*z*u*v*r^2+220*z*u*v*r-1723*z*u*v+14*z*u*r^5+15*z*u*r^4-167*z*u*r^3-110*z*u*r^2+30*z*u*r+411*z*u+14*z*v^4*r^2+49*z*v^4+14*z*v^3*r^3+15*z*v^3*r^2-3*z*v^3+14*z*v^2*r^4+15*z*v^2*r^3-167*z*v^2*r^2-52*z*v^2*r-640*z*v^2+14*z*v*r^5+15*z*v*r^4-167*z*v*r^3-110*z*v*r^2+30*z*v*r+411*z*v+49*z*r^6+50*z*r^5-587*z*r^4-355*z*r^3+1365*z*r^2+458*z*r+1015*z+21*w*u^4*v^2-56*w*u^4*v*r-8*w*u^4*v+14*w*u^4*r^2+49*w*u^4+21*w*u^3*v^3-56*w*u^3*v^2*r+7*w*u^3*v^2-21*w*u^3*v*r^2-56*w*u^3*v*r+91*w*u^3*v+14*w*u^3*r^3+15*w*u^3*r^2-3*w*u^3+21*w*u^2*v^4-56*w*u^2*v^3*r+7*w*u^2*v^3-21*w*u^2*v^2*r^2-62*w*u^2*v^2*r-167*w*u^2*v^2-21*w*u^2*v*r^3-20*w*u^2*v*r^2+722*w*u^2*v*r+143*w*u^2*v+14*w*u^2*r^4+15*w*u^2*r^3-167*w*u^2*r^2-52*w*u^2*r-640*w*u^2-56*w*u*v^4*r-8*w*u*v^4-21*w*u*v^3*r^2-56*w*u*v^3*r+91*w*u*v^3-21*w*u*v^2*r^3-20*w*u*v^2*r^2+722*w*u*v^2*r+143*w*u*v^2-21*w*u*v*r^4-20*w*u*v*r^3+253*w*u*v*r^2+220*w*u*v*r-1723*w*u*v+14*w*u*r^5+15*w*u*r^4-167*w*u*r^3-110*w*u*r^2+30*w*u*r+411*w*u+14*w*v^4*r^2+49*w*v^4+14*w*v^3*r^3+15*w*v^3*r^2-3*w*v^3+14*w*v^2*r^4+15*w*v^2*r^3-167*w*v^2*r^2-52*w*v^2*r-640*w*v^2+14*w*v*r^5+15*w*v*r^4-167*w*v*r^3-110*w*v*r^2+30*w*v*r+411*w*v+49*w*r^6+50*w*r^5-587*w*r^4-355*w*r^3+1365*w*r^2+458*w*r+1015*w+21*u^4*v^3+21*u^4*v^2*r+21*u^4*v^2-35*u^4*v*r^2-28*u^4*v*r-299*u^4*v+u^4*r^2+197*u^4*r+85*u^4+21*u^3*v^4+21*u^3*v^3*r+36*u^3*v^3-35*u^3*v^2*r^2-13*u^3*v^2*r-284*u^3*v^2-35*u^3*v*r^3-54*u^3*v*r^2+219*u^3*v*r-44*u^3*v+u^3*r^3+149*u^3*r^2+145*u^3*r+3*u^3+21*u^2*v^4*r+21*u^2*v^4-35*u^2*v^3*r^2-13*u^2*v^3*r-284*u^2*v^3-35*u^2*v^2*r^3-54*u^2*v^2*r^2-39*u^2*v^2*r-227*u^2*v^2-35*u^2*v*r^4-54*u^2*v*r^3+549*u^2*v*r^2+531*u^2*v*r+3222*u^2*v+u^2*r^4+149*u^2*r^3+136*u^2*r^2-2416*u^2*r-972*u^2-35*u*v^4*r^2-28*u*v^4*r-299*u*v^4-35*u*v^3*r^3-54*u*v^3*r^2+219*u*v^3*r-44*u*v^3-35*u*v^2*r^4-54*u*v^2*r^3+549*u*v^2*r^2+531*u*v^2*r+3222*u*v^2-35*u*v*r^5-54*u*v*r^4+549*u*v*r^3+621*u*v*r^2-3359*u*v*r-1458*u*v+u*r^5+149*u*r^4+136*u*r^3-1783*u*r^2-625*u*r+519*u+v^4*r^2+197*v^4*r+85*v^4+v^3*r^3+149*v^3*r^2+145*v^3*r+3*v^3+v^2*r^4+149*v^2*r^3+136*v^2*r^2-2416*v^2*r-972*v^2+v*r^5+149*v*r^4+136*v*r^3-1783*v*r^2-625*v*r+519*v+21*r^6+169*r^5-104*r^4-1923*r^3-448*r^2+5754*r+125,y*z^2-5*y*z*u-4*y*z*r-y*z+y*w*u-2*y*w*v+y*w*r+3*y*u^2-2*y*u*v+7*y*u*r+y*u-y*v^2-y*v*r-y*v+2*y*r^2+y*r+z^2*w-2*z^2*u-z*w^2-4*z*w*u-z*w*v-2*z*w*r-z*w-2*z*u*v+z*u*r-2*z*u-2*z*v^2-z*v-z*r^2-z*r+12*z+w^3+2*w^2*u+w^2*v+2*w^2*r+w^2+3*w*u^2+4*w*u*v+3*w*u*r+2*w*u-w*v^2+6*w*v*r+w*v+w*r^2+2*w*r-12*w+4*u^3+4*u^2*v+6*u^2*r+4*u^2+2*u*v^2+9*u*v*r+3*u*v+5*u*r^2+6*u*r-36*u+2*v^2*r+5*v*r^2+4*v*r-12*v+3*r^3+3*r^2-36*r-33,2*y*z^2*w+2*y*z^2*u-y*z^2*v+4*y*z^2*r+y*z^2+2*y*z*w^2+2*y*z*w*u-4*y*z*w*v+8*y*z*w*r+2*y*z*w+4*y*z*u^2+4*y*z*u*v+10*y*z*u*r+4*y*z*u+y*z*v^2+8*y*z*r^2+6*y*z*r+y*z+2*y*w^3+4*y*w^2*v+2*y*w^2*r+2*y*w^2-2*y*w*u^2+14*y*w*u*v-12*y*w*u*r+3*y*w*v^2+11*y*w*v*r+5*y*w*v-2*y*w*r^2+y*w*r-24*y*w+2*y*u^3+7*y*u^2*v-8*y*u^2*r+y*u^2+5*y*u*v^2+14*y*u*v*r+8*y*u*v-12*y*u*r^2-4*y*u*r-49*y*u+2*y*v^3+6*y*v^2*r+3*y*v^2+6*y*v*r^2+7*y*v*r-23*y*v-49*y*r-40*y+2*z^2*w^2-3*z^2*w*v+4*z^2*w*r+z^2*w-2*z^2*u^2-z^2*u*v-4*z^2*u*r-z^2*u+z^2*v^2-4*z^2*v*r-z^2*v+2*z*w^3+3*z*w^2*u-3*z*w^2*v+9*z*w^2*r+3*z*w^2-z*w*u^2+z*w*u*r+z*w*u+2*z*w*v^2-9*z*w*v*r-3*z*w*v+8*z*w*r^2+6*z*w*r+z*w+z*u^2*v-7*z*u^2*r-z*u^2+4*z*u*v^2-5*z*u*v*r+z*u*v-6*z*u*r^2-4*z*u*r-25*z*u+3*z*v^3+3*z*v^2*r+3*z*v^2-6*z*v*r^2-4*z*v*r-25*z*v+z*r^3+z*r^2-12*z*r-7*z-7*w^3*u+3*w^3*v-7*w^3*r-w^3-10*w^2*u^2-4*w^2*u*v-21*w^2*u*r-9*w^2*u+6*w^2*v^2-11*w^2*v*r+w^2*v-7*w^2*r^2-8*w^2*r-w^2-10*w*u^3-4*w*u^2*v-27*w*u^2*r-12*w*u^2+4*w*u*v^2-27*w*u*v*r-3*w*u*v-24*w*u*r^2-26*w*u*r+82*w*u+6*w*v^3+3*w*v^2*r+6*w*v^2-18*w*v*r^2-11*w*v*r-62*w*v-9*w*r^3-11*w*r^2+107*w*r+38*w-7*u^4-3*u^3*v-24*u^3*r-9*u^3-2*u^2*v^2-19*u^2*v*r-4*u^2*v-28*u^2*r^2-27*u^2*r+82*u^2-9*u*v^2*r-26*u*v*r^2-18*u*v*r+11*u*v-24*u*r^3-28*u*r^2+237*u*r+78*u+4*v^4+v^3*r+4*v^3-3*v^2*r^2-48*v^2-9*v*r^3-11*v*r^2+9*v*r-42*v-9*r^4-11*r^3+106*r^2+111*r+7,-4*y*z^2*w^2+11*y*z^2*w*v-10*y*z^2*w*r-y*z^2*w-4*y*z^2*v^2+11*y*z^2*v*r+2*y*z^2*v-4*y*z^2*r^2-y*z^2*r-2*y*z*w^3+14*y*z*w^2*v-14*y*z*w^2*r-2*y*z*w^2-7*y*z*w*v^2+34*y*z*w*v*r+10*y*z*w*v-14*y*z*w*r^2-6*y*z*w*r-25*y*z*w-2*y*z*v^3-7*y*z*v^2*r-4*y*z*v^2+14*y*z*v*r^2+10*y*z*v*r+26*y*z*v-2*y*z*r^3-2*y*z*r^2-25*y*z*r-26*y*z+2*y*w^3*u+4*y*w^2*u^2-14*y*w^2*u*v+14*y*w^2*u*r+2*y*w^2*u-11*y*w*u^2*v+10*y*w*u^2*r+y*w*u^2+7*y*w*u*v^2-34*y*w*u*v*r-10*y*w*u*v+14*y*w*u*r^2+6*y*w*u*r+25*y*w*u+4*y*u^2*v^2-11*y*u^2*v*r-2*y*u^2*v+4*y*u^2*r^2+y*u^2*r+2*y*u*v^3+7*y*u*v^2*r+4*y*u*v^2-14*y*u*v*r^2-10*y*u*v*r-26*y*u*v+2*y*u*r^3+2*y*u*r^2+25*y*u*r+26*y*u-2*z^2*w^3-4*z^2*w^2*u+14*z^2*w^2*v-14*z^2*w^2*r-2*z^2*w^2+11*z^2*w*u*v-10*z^2*w*u*r-z^2*w*u-7*z^2*w*v^2+34*z^2*w*v*r+10*z^2*w*v-14*z^2*w*r^2-6*z^2*w*r-25*z^2*w-4*z^2*u*v^2+11*z^2*u*v*r+2*z^2*u*v-4*z^2*u*r^2-z^2*u*r-2*z^2*v^3-7*z^2*v^2*r-4*z^2*v^2+14*z^2*v*r^2+10*z^2*v*r+26*z^2*v-2*z^2*r^3-2*z^2*r^2-25*z^2*r-26*z^2-z*w^3*u+7*z*w^3*v-7*z*w^3*r-z*w^3+z*w^2*u^2+15*z*w^2*u*v-13*z*w^2*u*r-z*w^2*u-6*z*w^2*v^2+46*z*w^2*v*r+16*z*w^2*v-20*z*w^2*r^2-10*z*w^2*r-50*z*w^2+z*w*u^3+z*w*u^2*v+z*w*u^2*r+z*w*u^2-6*z*w*u*v^2+35*z*w*u*v*r+11*z*w*u*v-13*z*w*u*r^2-5*z*w*u*r-37*z*w*u-14*z*w*v^3-10*z*w*v^2*r-13*z*w*v^2+46*z*w*v*r^2+43*z*w*v*r+168*z*w*v-7*z*w*r^3-10*z*w*r^2-163*z*w*r-101*z*w+z*u^4+z*u^3*v+z*u^3*r+z*u^3+z*u^2*v^2+z*u^2*v*r+z*u^2*v+z*u^2*r^2+z*u^2*r-12*z*u^2-z*u*v^3-6*z*u*v^2*r-3*z*u*v^2+15*z*u*v*r^2+11*z*u*v*r+14*z*u*v-z*u*r^3-z*u*r^2-37*z*u*r-33*z*u-14*z*v^3*r-5*z*v^3-6*z*v^2*r^2-13*z*v^2*r-4*z*v^2+7*z*v*r^3+16*z*v*r^2+168*z*v*r+78*z*v-z*r^3-50*z*r^2-101*z*r-26*z+3*w^3*u^2-7*w^3*u*v+7*w^3*u*r+w^3*u+3*w^2*u^3-8*w^2*u^2*v+13*w^2*u^2*r+4*w^2*u^2-15*w^2*u*v^2+10*w^2*u*v*r-8*w^2*u*v+6*w^2*u*r^2+10*w^2*u*r+w^2*u-21*w^2*v^2*r-6*w^2*v^2+21*w^2*v*r^2+8*w^2*v*r+50*w^2*v+w^2*r^2-49*w^2*r-52*w^2-w*u^4-12*w*u^3*v+9*w*u^3*r-8*w*u^2*v^2-13*w*u^2*v*r-13*w*u^2*v+13*w*u^2*r^2+11*w*u^2*r+13*w*u^2-7*w*u*v^3-32*w*u*v^2*r-14*w*u*v^2+10*w*u*v*r^2-7*w*u*v*r+181*w*u*v+7*w*u*r^3+10*w*u*r^2-83*w*u*r-36*w*u-21*w*v^3*r-6*w*v^3-21*w*v^2*r^2-27*w*v^2*r-6*w*v^2+8*w*v*r^2+349*w*v*r+170*w*v-49*w*r^2-137*w*r-82*w+4*u^3*v^2-11*u^3*v*r-2*u^3*v+4*u^3*r^2+u^3*r+4*u^2*v^3-7*u^2*v^2*r+2*u^2*v^2-7*u^2*v*r^2-12*u^2*v*r-2*u^2*v+4*u^2*r^3+5*u^2*r^2+u^2*r+u*v^4-6*u*v^3*r-14*u*v^2*r^2-13*u*v^2*r-14*u*v^2-6*u*v*r^3-7*u*v*r^2+169*u*v*r+85*u*v+u*r^4+2*u*r^3-11*u*r^2-43*u*r-28*u+22*v^5+v^4*r+16*v^4+v^3*r^2-5*v^3*r-270*v^3+v^2*r^3-5*v^2*r^2-18*v^2*r-82*v^2+v*r^4+v*r^3+38*v*r^2+163*v*r+567*v+r^5+r^4-12*r^3-59*r^2-54*r-116,-21*y*z^2*w^2*v+14*y*z^2*w^2*r-y*z^2*w^2+21*y*z^2*w*v^2-56*y*z^2*w*v*r-8*y*z^2*w*v+14*y*z^2*w*r^2+49*y*z^2*w+21*y*z^2*v^2*r+6*y*z^2*v^2-21*y*z^2*v*r^2-8*y*z^2*v*r-50*y*z^2*v-y*z^2*r^2+49*y*z^2*r+52*y*z^2+21*y*z*w^2*v^2-56*y*z*w^2*v*r-8*y*z*w^2*v+14*y*z*w^2*r^2+49*y*z*w^2+21*y*z*w*v^3+42*y*z*w*v^2*r+27*y*z*w*v^2-56*y*z*w*v*r^2-36*y*z*w*v*r-349*y*z*w*v+246*y*z*w*r+137*y*z*w+21*y*z*v^3*r+6*y*z*v^3+21*y*z*v^2*r^2+27*y*z*v^2*r+6*y*z*v^2-8*y*z*v*r^2-349*y*z*v*r-170*y*z*v+49*y*z*r^2+137*y*z*r+82*y*z+21*y*w^2*v^2*r+6*y*w^2*v^2-21*y*w^2*v*r^2-8*y*w^2*v*r-50*y*w^2*v-y*w^2*r^2+49*y*w^2*r+52*y*w^2+21*y*w*v^3*r+6*y*w*v^3+21*y*w*v^2*r^2+27*y*w*v^2*r+6*y*w*v^2-8*y*w*v*r^2-349*y*w*v*r-170*y*w*v+49*y*w*r^2+137*y*w*r+82*y*w-21*y*v^5-15*y*v^4+6*y*v^3*r+258*y*v^3+6*y*v^2*r^2+6*y*v^2*r+75*y*v^2-50*y*v*r^2-170*y*v*r-539*y*v+52*y*r^2+82*y*r+130*y-21*z^2*w^2*u*v+14*z^2*w^2*u*r-z^2*w^2*u+21*z^2*w^2*v^2-56*z^2*w^2*v*r-8*z^2*w^2*v+14*z^2*w^2*r^2+49*z^2*w^2+21*z^2*w*u*v^2-56*z^2*w*u*v*r-8*z^2*w*u*v+14*z^2*w*u*r^2+49*z^2*w*u+21*z^2*w*v^3+42*z^2*w*v^2*r+27*z^2*w*v^2-56*z^2*w*v*r^2-36*z^2*w*v*r-349*z^2*w*v+246*z^2*w*r+137*z^2*w+21*z^2*u*v^2*r+6*z^2*u*v^2-21*z^2*u*v*r^2-8*z^2*u*v*r-50*z^2*u*v-z^2*u*r^2+49*z^2*u*r+52*z^2*u+21*z^2*v^3*r+6*z^2*v^3+21*z^2*v^2*r^2+27*z^2*v^2*r+6*z^2*v^2-8*z^2*v*r^2-349*z^2*v*r-170*z^2*v+49*z^2*r^2+137*z^2*r+82*z^2+21*z*w^2*u*v^2-56*z*w^2*u*v*r-8*z*w^2*u*v+14*z*w^2*u*r^2+49*z*w^2*u+21*z*w^2*v^3+42*z*w^2*v^2*r+27*z*w^2*v^2-56*z*w^2*v*r^2-36*z*w^2*v*r-349*z*w^2*v+246*z*w^2*r+137*z*w^2+21*z*w*u*v^3+42*z*w*u*v^2*r+27*z*w*u*v^2-56*z*w*u*v*r^2-36*z*w*u*v*r-349*z*w*u*v+246*z*w*u*r+137*z*w*u-21*z*w*v^4+98*z*w*v^3*r+20*z*w*v^3+42*z*w*v^2*r^2+90*z*w*v^2*r+246*z*w*v^2-36*z*w*v*r^2-1437*z*w*v*r-588*z*w*v+246*z*w*r^2+452*z*w*r+706*z*w+21*z*u*v^3*r+6*z*u*v^3+21*z*u*v^2*r^2+27*z*u*v^2*r+6*z*u*v^2-8*z*u*v*r^2-349*z*u*v*r-170*z*u*v+49*z*u*r^2+137*z*u*r+82*z*u-42*z*v^5-21*z*v^4*r-36*z*v^4+21*z*v^3*r^2+20*z*v^3*r+566*z*v^3+27*z*v^2*r^2+246*z*v^2*r+180*z*v^2-349*z*v*r^2-588*z*v*r-1897*z*v+137*z*r^2+706*z*r+868*z+21*w^2*u*v^2*r+6*w^2*u*v^2-21*w^2*u*v*r^2-8*w^2*u*v*r-50*w^2*u*v-w^2*u*r^2+49*w^2*u*r+52*w^2*u+21*w^2*v^3*r+6*w^2*v^3+21*w^2*v^2*r^2+27*w^2*v^2*r+6*w^2*v^2-8*w^2*v*r^2-349*w^2*v*r-170*w^2*v+49*w^2*r^2+137*w^2*r+82*w^2+21*w*u*v^3*r+6*w*u*v^3+21*w*u*v^2*r^2+27*w*u*v^2*r+6*w*u*v^2-8*w*u*v*r^2-349*w*u*v*r-170*w*u*v+49*w*u*r^2+137*w*u*r+82*w*u-42*w*v^5-21*w*v^4*r-36*w*v^4+21*w*v^3*r^2+20*w*v^3*r+566*w*v^3+27*w*v^2*r^2+246*w*v^2*r+180*w*v^2-349*w*v*r^2-588*w*v*r-1897*w*v+137*w*r^2+706*w*r+868*w-21*u*v^5-15*u*v^4+6*u*v^3*r+258*u*v^3+6*u*v^2*r^2+6*u*v^2*r+75*u*v^2-50*u*v*r^2-170*u*v*r-539*u*v+52*u*r^2+82*u*r+130*u-77*v^5*r-29*v^5-35*v^4*r^2-71*v^4*r+27*v^4-35*v^3*r^3-29*v^3*r^2+986*v^3*r+404*v^3-35*v^2*r^4-35*v^2*r^3+426*v^2*r^2+425*v^2*r-378*v^2-35*v*r^5-35*v*r^4+420*v*r^3+75*v*r^2-2877*v*r-1113*v-35*r^6-35*r^5+420*r^4+245*r^3-898*r^2+378*r+851</Equations>
            <GBasisLen>1</GBasisLen>
            <HilbertPolynomial>0</HilbertPolynomial>
            <Polynomials>
				13
				
				8
				1    0 0 0 0 0 0 7 
				1    0 0 0 0 0 0 6 
				-12    0 0 0 0 0 0 5 
				-7    0 0 0 0 0 0 4 
				28    0 0 0 0 0 0 3 
				14    0 0 0 0 0 0 2 
				-9    0 0 0 0 0 0 1 
				1    0 0 0 0 0 0 0 
				
				28
				1    0 0 0 0 0 6 0 
				1    0 0 0 0 0 5 1 
				1    0 0 0 0 0 4 2 
				1    0 0 0 0 0 3 3 
				1    0 0 0 0 0 2 4 
				1    0 0 0 0 0 1 5 
				1    0 0 0 0 0 0 6 
				1    0 0 0 0 0 5 0 
				1    0 0 0 0 0 4 1 
				1    0 0 0 0 0 3 2 
				1    0 0 0 0 0 2 3 
				1    0 0 0 0 0 1 4 
				1    0 0 0 0 0 0 5 
				-12    0 0 0 0 0 4 0 
				-12    0 0 0 0 0 3 1 
				-12    0 0 0 0 0 2 2 
				-12    0 0 0 0 0 1 3 
				-12    0 0 0 0 0 0 4 
				-7    0 0 0 0 0 3 0 
				-7    0 0 0 0 0 2 1 
				-7    0 0 0 0 0 1 2 
				-7    0 0 0 0 0 0 3 
				28    0 0 0 0 0 2 0 
				28    0 0 0 0 0 1 1 
				28    0 0 0 0 0 0 2 
				14    0 0 0 0 0 1 0 
				14    0 0 0 0 0 0 1 
				-9    0 0 0 0 0 0 0 
				
				56
				1    0 0 0 0 5 0 0 
				1    0 0 0 0 4 1 0 
				1    0 0 0 0 3 2 0 
				1    0 0 0 0 2 3 0 
				1    0 0 0 0 1 4 0 
				1    0 0 0 0 0 5 0 
				1    0 0 0 0 4 0 1 
				1    0 0 0 0 3 1 1 
				1    0 0 0 0 2 2 1 
				1    0 0 0 0 1 3 1 
				1    0 0 0 0 0 4 1 
				1    0 0 0 0 3 0 2 
				1    0 0 0 0 2 1 2 
				1    0 0 0 0 1 2 2 
				1    0 0 0 0 0 3 2 
				1    0 0 0 0 2 0 3 
				1    0 0 0 0 1 1 3 
				1    0 0 0 0 0 2 3 
				1    0 0 0 0 1 0 4 
				1    0 0 0 0 0 1 4 
				1    0 0 0 0 0 0 5 
				1    0 0 0 0 4 0 0 
				1    0 0 0 0 3 1 0 
				1    0 0 0 0 2 2 0 
				1    0 0 0 0 1 3 0 
				1    0 0 0 0 0 4 0 
				1    0 0 0 0 3 0 1 
				1    0 0 0 0 2 1 1 
				1    0 0 0 0 1 2 1 
				1    0 0 0 0 0 3 1 
				1    0 0 0 0 2 0 2 
				1    0 0 0 0 1 1 2 
				1    0 0 0 0 0 2 2 
				1    0 0 0 0 1 0 3 
				1    0 0 0 0 0 1 3 
				1    0 0 0 0 0 0 4 
				-12    0 0 0 0 3 0 0 
				-12    0 0 0 0 2 1 0 
				-12    0 0 0 0 1 2 0 
				-12    0 0 0 0 0 3 0 
				-12    0 0 0 0 2 0 1 
				-12    0 0 0 0 1 1 1 
				-12    0 0 0 0 0 2 1 
				-12    0 0 0 0 1 0 2 
				-12    0 0 0 0 0 1 2 
				-12    0 0 0 0 0 0 3 
				-7    0 0 0 0 2 0 0 
				-7    0 0 0 0 1 1 0 
				-7    0 0 0 0 0 2 0 
				-7    0 0 0 0 1 0 1 
				-7    0 0 0 0 0 1 1 
				-7    0 0 0 0 0 0 2 
				28    0 0 0 0 1 0 0 
				28    0 0 0 0 0 1 0 
				28    0 0 0 0 0 0 1 
				14    0 0 0 0 0 0 0 
				
				70
				1    0 0 0 4 0 0 0 
				1    0 0 0 3 1 0 0 
				1    0 0 0 2 2 0 0 
				1    0 0 0 1 3 0 0 
				1    0 0 0 0 4 0 0 
				1    0 0 0 3 0 1 0 
				1    0 0 0 2 1 1 0 
				1    0 0 0 1 2 1 0 
				1    0 0 0 0 3 1 0 
				1    0 0 0 2 0 2 0 
				1    0 0 0 1 1 2 0 
				1    0 0 0 0 2 2 0 
				1    0 0 0 1 0 3 0 
				1    0 0 0 0 1 3 0 
				1    0 0 0 0 0 4 0 
				1    0 0 0 3 0 0 1 
				1    0 0 0 2 1 0 1 
				1    0 0 0 1 2 0 1 
				1    0 0 0 0 3 0 1 
				1    0 0 0 2 0 1 1 
				1    0 0 0 1 1 1 1 
				1    0 0 0 0 2 1 1 
				1    0 0 0 1 0 2 1 
				1    0 0 0 0 1 2 1 
				1    0 0 0 0 0 3 1 
				1    0 0 0 2 0 0 2 
				1    0 0 0 1 1 0 2 
				1    0 0 0 0 2 0 2 
				1    0 0 0 1 0 1 2 
				1    0 0 0 0 1 1 2 
				1    0 0 0 0 0 2 2 
				1    0 0 0 1 0 0 3 
				1    0 0 0 0 1 0 3 
				1    0 0 0 0 0 1 3 
				1    0 0 0 0 0 0 4 
				1    0 0 0 3 0 0 0 
				1    0 0 0 2 1 0 0 
				1    0 0 0 1 2 0 0 
				1    0 0 0 0 3 0 0 
				1    0 0 0 2 0 1 0 
				1    0 0 0 1 1 1 0 
				1    0 0 0 0 2 1 0 
				1    0 0 0 1 0 2 0 
				1    0 0 0 0 1 2 0 
				1    0 0 0 0 0 3 0 
				1    0 0 0 2 0 0 1 
				1    0 0 0 1 1 0 1 
				1    0 0 0 0 2 0 1 
				1    0 0 0 1 0 1 1 
				1    0 0 0 0 1 1 1 
				1    0 0 0 0 0 2 1 
				1    0 0 0 1 0 0 2 
				1    0 0 0 0 1 0 2 
				1    0 0 0 0 0 1 2 
				1    0 0 0 0 0 0 3 
				-12    0 0 0 2 0 0 0 
				-12    0 0 0 1 1 0 0 
				-12    0 0 0 0 2 0 0 
				-12    0 0 0 1 0 1 0 
				-12    0 0 0 0 1 1 0 
				-12    0 0 0 0 0 2 0 
				-12    0 0 0 1 0 0 1 
				-12    0 0 0 0 1 0 1 
				-12    0 0 0 0 0 1 1 
				-12    0 0 0 0 0 0 2 
				-7    0 0 0 1 0 0 0 
				-7    0 0 0 0 1 0 0 
				-7    0 0 0 0 0 1 0 
				-7    0 0 0 0 0 0 1 
				28    0 0 0 0 0 0 0 
				
				56
				1    0 0 3 0 0 0 0 
				1    0 0 2 1 0 0 0 
				1    0 0 1 2 0 0 0 
				1    0 0 0 3 0 0 0 
				1    0 0 2 0 1 0 0 
				1    0 0 1 1 1 0 0 
				1    0 0 0 2 1 0 0 
				1    0 0 1 0 2 0 0 
				1    0 0 0 1 2 0 0 
				1    0 0 0 0 3 0 0 
				1    0 0 2 0 0 1 0 
				1    0 0 1 1 0 1 0 
				1    0 0 0 2 0 1 0 
				1    0 0 1 0 1 1 0 
				1    0 0 0 1 1 1 0 
				1    0 0 0 0 2 1 0 
				1    0 0 1 0 0 2 0 
				1    0 0 0 1 0 2 0 
				1    0 0 0 0 1 2 0 
				1    0 0 0 0 0 3 0 
				1    0 0 2 0 0 0 1 
				1    0 0 1 1 0 0 1 
				1    0 0 0 2 0 0 1 
				1    0 0 1 0 1 0 1 
				1    0 0 0 1 1 0 1 
				1    0 0 0 0 2 0 1 
				1    0 0 1 0 0 1 1 
				1    0 0 0 1 0 1 1 
				1    0 0 0 0 1 1 1 
				1    0 0 0 0 0 2 1 
				1    0 0 1 0 0 0 2 
				1    0 0 0 1 0 0 2 
				1    0 0 0 0 1 0 2 
				1    0 0 0 0 0 1 2 
				1    0 0 0 0 0 0 3 
				1    0 0 2 0 0 0 0 
				1    0 0 1 1 0 0 0 
				1    0 0 0 2 0 0 0 
				1    0 0 1 0 1 0 0 
				1    0 0 0 1 1 0 0 
				1    0 0 0 0 2 0 0 
				1    0 0 1 0 0 1 0 
				1    0 0 0 1 0 1 0 
				1    0 0 0 0 1 1 0 
				1    0 0 0 0 0 2 0 
				1    0 0 1 0 0 0 1 
				1    0 0 0 1 0 0 1 
				1    0 0 0 0 1 0 1 
				1    0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 2 
				-12    0 0 1 0 0 0 0 
				-12    0 0 0 1 0 0 0 
				-12    0 0 0 0 1 0 0 
				-12    0 0 0 0 0 1 0 
				-12    0 0 0 0 0 0 1 
				-7    0 0 0 0 0 0 0 
				
				28
				1    0 2 0 0 0 0 0 
				1    0 1 1 0 0 0 0 
				1    0 0 2 0 0 0 0 
				1    0 1 0 1 0 0 0 
				1    0 0 1 1 0 0 0 
				1    0 0 0 2 0 0 0 
				1    0 1 0 0 1 0 0 
				1    0 0 1 0 1 0 0 
				1    0 0 0 1 1 0 0 
				1    0 0 0 0 2 0 0 
				1    0 1 0 0 0 1 0 
				1    0 0 1 0 0 1 0 
				1    0 0 0 1 0 1 0 
				1    0 0 0 0 1 1 0 
				1    0 0 0 0 0 2 0 
				1    0 1 0 0 0 0 1 
				1    0 0 1 0 0 0 1 
				1    0 0 0 1 0 0 1 
				1    0 0 0 0 1 0 1 
				1    0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 2 
				1    0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 1 
				-12    0 0 0 0 0 0 0 
				
				8
				1    1 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 1 
				1    0 0 0 0 0 0 0 
				
				19
				2    0 1 1 0 0 0 0 
				1    0 0 2 0 0 0 0 
				1    0 1 0 1 0 0 0 
				3    0 0 1 1 0 0 0 
				1    0 0 0 2 0 0 0 
				-2    0 1 0 0 1 0 0 
				-1    0 0 1 0 1 0 0 
				-1    0 0 0 0 2 0 0 
				-1    0 0 0 1 0 1 0 
				-2    0 0 0 0 1 1 0 
				-1    0 0 0 0 0 2 0 
				-1    0 1 0 0 0 0 1 
				1    0 0 1 0 0 0 1 
				2    0 0 0 1 0 0 1 
				-2    0 0 0 0 0 1 1 
				1    0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 
				-1    0 0 0 0 1 0 0 
				-1    0 0 0 0 0 1 0 
				
				486
				-21    0 1 1 1 3 1 0 
				-21    0 1 1 0 4 1 0 
				-21    0 1 0 1 4 1 0 
				-21    0 0 1 1 4 1 0 
				-42    0 1 1 1 2 2 0 
				-21    0 1 1 0 3 2 0 
				-21    0 1 0 1 3 2 0 
				-21    0 0 1 1 3 2 0 
				21    0 1 0 0 4 2 0 
				21    0 0 1 0 4 2 0 
				21    0 0 0 1 4 2 0 
				-21    0 1 1 1 1 3 0 
				-21    0 1 1 0 2 3 0 
				-21    0 1 0 1 2 3 0 
				-21    0 0 1 1 2 3 0 
				21    0 1 0 0 3 3 0 
				21    0 0 1 0 3 3 0 
				21    0 0 0 1 3 3 0 
				21    0 0 0 0 4 3 0 
				-21    0 1 1 0 1 4 0 
				-21    0 1 0 1 1 4 0 
				-21    0 0 1 1 1 4 0 
				21    0 1 0 0 2 4 0 
				21    0 0 1 0 2 4 0 
				21    0 0 0 1 2 4 0 
				21    0 0 0 0 3 4 0 
				14    0 1 1 1 3 0 1 
				14    0 1 1 0 4 0 1 
				14    0 1 0 1 4 0 1 
				14    0 0 1 1 4 0 1 
				49    0 1 1 1 2 1 1 
				-7    0 1 1 0 3 1 1 
				-7    0 1 0 1 3 1 1 
				-7    0 0 1 1 3 1 1 
				-56    0 1 0 0 4 1 1 
				-56    0 0 1 0 4 1 1 
				-56    0 0 0 1 4 1 1 
				49    0 1 1 1 1 2 1 
				-28    0 1 1 0 2 2 1 
				-28    0 1 0 1 2 2 1 
				-28    0 0 1 1 2 2 1 
				-56    0 1 0 0 3 2 1 
				-56    0 0 1 0 3 2 1 
				-56    0 0 0 1 3 2 1 
				21    0 0 0 0 4 2 1 
				14    0 1 1 1 0 3 1 
				-7    0 1 1 0 1 3 1 
				-7    0 1 0 1 1 3 1 
				-7    0 0 1 1 1 3 1 
				-56    0 1 0 0 2 3 1 
				-56    0 0 1 0 2 3 1 
				-56    0 0 0 1 2 3 1 
				21    0 0 0 0 3 3 1 
				14    0 1 1 0 0 4 1 
				14    0 1 0 1 0 4 1 
				14    0 0 1 1 0 4 1 
				-56    0 1 0 0 1 4 1 
				-56    0 0 1 0 1 4 1 
				-56    0 0 0 1 1 4 1 
				21    0 0 0 0 2 4 1 
				14    0 1 1 0 3 0 2 
				14    0 1 0 1 3 0 2 
				14    0 0 1 1 3 0 2 
				14    0 1 0 0 4 0 2 
				14    0 0 1 0 4 0 2 
				14    0 0 0 1 4 0 2 
				14    0 1 1 0 2 1 2 
				14    0 1 0 1 2 1 2 
				14    0 0 1 1 2 1 2 
				-21    0 1 0 0 3 1 2 
				-21    0 0 1 0 3 1 2 
				-21    0 0 0 1 3 1 2 
				-35    0 0 0 0 4 1 2 
				14    0 1 1 0 1 2 2 
				14    0 1 0 1 1 2 2 
				14    0 0 1 1 1 2 2 
				-21    0 1 0 0 2 2 2 
				-21    0 0 1 0 2 2 2 
				-21    0 0 0 1 2 2 2 
				-35    0 0 0 0 3 2 2 
				14    0 1 1 0 0 3 2 
				14    0 1 0 1 0 3 2 
				14    0 0 1 1 0 3 2 
				-21    0 1 0 0 1 3 2 
				-21    0 0 1 0 1 3 2 
				-21    0 0 0 1 1 3 2 
				-35    0 0 0 0 2 3 2 
				14    0 1 0 0 0 4 2 
				14    0 0 1 0 0 4 2 
				14    0 0 0 1 0 4 2 
				-35    0 0 0 0 1 4 2 
				14    0 1 1 0 2 0 3 
				14    0 1 0 1 2 0 3 
				14    0 0 1 1 2 0 3 
				14    0 1 0 0 3 0 3 
				14    0 0 1 0 3 0 3 
				14    0 0 0 1 3 0 3 
				14    0 1 1 0 1 1 3 
				14    0 1 0 1 1 1 3 
				14    0 0 1 1 1 1 3 
				-21    0 1 0 0 2 1 3 
				-21    0 0 1 0 2 1 3 
				-21    0 0 0 1 2 1 3 
				-35    0 0 0 0 3 1 3 
				14    0 1 1 0 0 2 3 
				14    0 1 0 1 0 2 3 
				14    0 0 1 1 0 2 3 
				-21    0 1 0 0 1 2 3 
				-21    0 0 1 0 1 2 3 
				-21    0 0 0 1 1 2 3 
				-35    0 0 0 0 2 2 3 
				14    0 1 0 0 0 3 3 
				14    0 0 1 0 0 3 3 
				14    0 0 0 1 0 3 3 
				-35    0 0 0 0 1 3 3 
				14    0 1 1 0 1 0 4 
				14    0 1 0 1 1 0 4 
				14    0 0 1 1 1 0 4 
				14    0 1 0 0 2 0 4 
				14    0 0 1 0 2 0 4 
				14    0 0 0 1 2 0 4 
				14    0 1 1 0 0 1 4 
				14    0 1 0 1 0 1 4 
				14    0 0 1 1 0 1 4 
				-21    0 1 0 0 1 1 4 
				-21    0 0 1 0 1 1 4 
				-21    0 0 0 1 1 1 4 
				-35    0 0 0 0 2 1 4 
				14    0 1 0 0 0 2 4 
				14    0 0 1 0 0 2 4 
				14    0 0 0 1 0 2 4 
				-35    0 0 0 0 1 2 4 
				14    0 1 1 0 0 0 5 
				14    0 1 0 1 0 0 5 
				14    0 0 1 1 0 0 5 
				14    0 1 0 0 1 0 5 
				14    0 0 1 0 1 0 5 
				14    0 0 0 1 1 0 5 
				14    0 1 0 0 0 1 5 
				14    0 0 1 0 0 1 5 
				14    0 0 0 1 0 1 5 
				-35    0 0 0 0 1 1 5 
				49    0 1 0 0 0 0 6 
				49    0 0 1 0 0 0 6 
				49    0 0 0 1 0 0 6 
				-1    0 1 1 1 3 0 0 
				-1    0 1 1 0 4 0 0 
				-1    0 1 0 1 4 0 0 
				-1    0 0 1 1 4 0 0 
				-14    0 1 1 1 2 1 0 
				-22    0 1 1 0 3 1 0 
				-22    0 1 0 1 3 1 0 
				-22    0 0 1 1 3 1 0 
				-8    0 1 0 0 4 1 0 
				-8    0 0 1 0 4 1 0 
				-8    0 0 0 1 4 1 0 
				-14    0 1 1 1 1 2 0 
				-28    0 1 1 0 2 2 0 
				-28    0 1 0 1 2 2 0 
				-28    0 0 1 1 2 2 0 
				7    0 1 0 0 3 2 0 
				7    0 0 1 0 3 2 0 
				7    0 0 0 1 3 2 0 
				21    0 0 0 0 4 2 0 
				-1    0 1 1 1 0 3 0 
				-22    0 1 1 0 1 3 0 
				-22    0 1 0 1 1 3 0 
				-22    0 0 1 1 1 3 0 
				7    0 1 0 0 2 3 0 
				7    0 0 1 0 2 3 0 
				7    0 0 0 1 2 3 0 
				36    0 0 0 0 3 3 0 
				-1    0 1 1 0 0 4 0 
				-1    0 1 0 1 0 4 0 
				-1    0 0 1 1 0 4 0 
				-8    0 1 0 0 1 4 0 
				-8    0 0 1 0 1 4 0 
				-8    0 0 0 1 1 4 0 
				21    0 0 0 0 2 4 0 
				13    0 1 1 1 2 0 1 
				13    0 1 1 0 3 0 1 
				13    0 1 0 1 3 0 1 
				13    0 0 1 1 3 0 1 
				28    0 1 1 1 1 1 1 
				-56    0 1 0 0 3 1 1 
				-56    0 0 1 0 3 1 1 
				-56    0 0 0 1 3 1 1 
				-28    0 0 0 0 4 1 1 
				13    0 1 1 1 0 2 1 
				-62    0 1 0 0 2 2 1 
				-62    0 0 1 0 2 2 1 
				-62    0 0 0 1 2 2 1 
				-13    0 0 0 0 3 2 1 
				13    0 1 1 0 0 3 1 
				13    0 1 0 1 0 3 1 
				13    0 0 1 1 0 3 1 
				-56    0 1 0 0 1 3 1 
				-56    0 0 1 0 1 3 1 
				-56    0 0 0 1 1 3 1 
				-13    0 0 0 0 2 3 1 
				-28    0 0 0 0 1 4 1 
				14    0 1 1 0 2 0 2 
				14    0 1 0 1 2 0 2 
				14    0 0 1 1 2 0 2 
				15    0 1 0 0 3 0 2 
				15    0 0 1 0 3 0 2 
				15    0 0 0 1 3 0 2 
				1    0 0 0 0 4 0 2 
				14    0 1 1 0 1 1 2 
				14    0 1 0 1 1 1 2 
				14    0 0 1 1 1 1 2 
				-20    0 1 0 0 2 1 2 
				-20    0 0 1 0 2 1 2 
				-20    0 0 0 1 2 1 2 
				-54    0 0 0 0 3 1 2 
				14    0 1 1 0 0 2 2 
				14    0 1 0 1 0 2 2 
				14    0 0 1 1 0 2 2 
				-20    0 1 0 0 1 2 2 
				-20    0 0 1 0 1 2 2 
				-20    0 0 0 1 1 2 2 
				-54    0 0 0 0 2 2 2 
				15    0 1 0 0 0 3 2 
				15    0 0 1 0 0 3 2 
				15    0 0 0 1 0 3 2 
				-54    0 0 0 0 1 3 2 
				1    0 0 0 0 0 4 2 
				14    0 1 1 0 1 0 3 
				14    0 1 0 1 1 0 3 
				14    0 0 1 1 1 0 3 
				15    0 1 0 0 2 0 3 
				15    0 0 1 0 2 0 3 
				15    0 0 0 1 2 0 3 
				1    0 0 0 0 3 0 3 
				14    0 1 1 0 0 1 3 
				14    0 1 0 1 0 1 3 
				14    0 0 1 1 0 1 3 
				-20    0 1 0 0 1 1 3 
				-20    0 0 1 0 1 1 3 
				-20    0 0 0 1 1 1 3 
				-54    0 0 0 0 2 1 3 
				15    0 1 0 0 0 2 3 
				15    0 0 1 0 0 2 3 
				15    0 0 0 1 0 2 3 
				-54    0 0 0 0 1 2 3 
				1    0 0 0 0 0 3 3 
				14    0 1 1 0 0 0 4 
				14    0 1 0 1 0 0 4 
				14    0 0 1 1 0 0 4 
				15    0 1 0 0 1 0 4 
				15    0 0 1 0 1 0 4 
				15    0 0 0 1 1 0 4 
				1    0 0 0 0 2 0 4 
				15    0 1 0 0 0 1 4 
				15    0 0 1 0 0 1 4 
				15    0 0 0 1 0 1 4 
				-54    0 0 0 0 1 1 4 
				1    0 0 0 0 0 2 4 
				50    0 1 0 0 0 0 5 
				50    0 0 1 0 0 0 5 
				50    0 0 0 1 0 0 5 
				1    0 0 0 0 1 0 5 
				1    0 0 0 0 0 1 5 
				21    0 0 0 0 0 0 6 
				-50    0 1 1 1 2 0 0 
				-1    0 1 1 0 3 0 0 
				-1    0 1 0 1 3 0 0 
				-1    0 0 1 1 3 0 0 
				49    0 1 0 0 4 0 0 
				49    0 0 1 0 4 0 0 
				49    0 0 0 1 4 0 0 
				-89    0 1 1 1 1 1 0 
				301    0 1 1 0 2 1 0 
				301    0 1 0 1 2 1 0 
				301    0 0 1 1 2 1 0 
				91    0 1 0 0 3 1 0 
				91    0 0 1 0 3 1 0 
				91    0 0 0 1 3 1 0 
				-299    0 0 0 0 4 1 0 
				-50    0 1 1 1 0 2 0 
				301    0 1 1 0 1 2 0 
				301    0 1 0 1 1 2 0 
				301    0 0 1 1 1 2 0 
				-167    0 1 0 0 2 2 0 
				-167    0 0 1 0 2 2 0 
				-167    0 0 0 1 2 2 0 
				-284    0 0 0 0 3 2 0 
				-1    0 1 1 0 0 3 0 
				-1    0 1 0 1 0 3 0 
				-1    0 0 1 1 0 3 0 
				91    0 1 0 0 1 3 0 
				91    0 0 1 0 1 3 0 
				91    0 0 0 1 1 3 0 
				-284    0 0 0 0 2 3 0 
				49    0 1 0 0 0 4 0 
				49    0 0 1 0 0 4 0 
				49    0 0 0 1 0 4 0 
				-299    0 0 0 0 1 4 0 
				-21    0 1 1 1 1 0 1 
				-218    0 1 1 0 2 0 1 
				-218    0 1 0 1 2 0 1 
				-218    0 0 1 1 2 0 1 
				197    0 0 0 0 4 0 1 
				-21    0 1 1 1 0 1 1 
				-257    0 1 1 0 1 1 1 
				-257    0 1 0 1 1 1 1 
				-257    0 0 1 1 1 1 1 
				722    0 1 0 0 2 1 1 
				722    0 0 1 0 2 1 1 
				722    0 0 0 1 2 1 1 
				219    0 0 0 0 3 1 1 
				-218    0 1 1 0 0 2 1 
				-218    0 1 0 1 0 2 1 
				-218    0 0 1 1 0 2 1 
				722    0 1 0 0 1 2 1 
				722    0 0 1 0 1 2 1 
				722    0 0 0 1 1 2 1 
				-39    0 0 0 0 2 2 1 
				219    0 0 0 0 1 3 1 
				197    0 0 0 0 0 4 1 
				-168    0 1 1 0 1 0 2 
				-168    0 1 0 1 1 0 2 
				-168    0 0 1 1 1 0 2 
				-167    0 1 0 0 2 0 2 
				-167    0 0 1 0 2 0 2 
				-167    0 0 0 1 2 0 2 
				149    0 0 0 0 3 0 2 
				-168    0 1 1 0 0 1 2 
				-168    0 1 0 1 0 1 2 
				-168    0 0 1 1 0 1 2 
				253    0 1 0 0 1 1 2 
				253    0 0 1 0 1 1 2 
				253    0 0 0 1 1 1 2 
				549    0 0 0 0 2 1 2 
				-167    0 1 0 0 0 2 2 
				-167    0 0 1 0 0 2 2 
				-167    0 0 0 1 0 2 2 
				549    0 0 0 0 1 2 2 
				149    0 0 0 0 0 3 2 
				-168    0 1 1 0 0 0 3 
				-168    0 1 0 1 0 0 3 
				-168    0 0 1 1 0 0 3 
				-167    0 1 0 0 1 0 3 
				-167    0 0 1 0 1 0 3 
				-167    0 0 0 1 1 0 3 
				149    0 0 0 0 2 0 3 
				-167    0 1 0 0 0 1 3 
				-167    0 0 1 0 0 1 3 
				-167    0 0 0 1 0 1 3 
				549    0 0 0 0 1 1 3 
				149    0 0 0 0 0 2 3 
				-587    0 1 0 0 0 0 4 
				-587    0 0 1 0 0 0 4 
				-587    0 0 0 1 0 0 4 
				149    0 0 0 0 1 0 4 
				149    0 0 0 0 0 1 4 
				169    0 0 0 0 0 0 5 
				48    0 1 1 1 1 0 0 
				-40    0 1 1 0 2 0 0 
				-40    0 1 0 1 2 0 0 
				-40    0 0 1 1 2 0 0 
				-3    0 1 0 0 3 0 0 
				-3    0 0 1 0 3 0 0 
				-3    0 0 0 1 3 0 0 
				85    0 0 0 0 4 0 0 
				48    0 1 1 1 0 1 0 
				-13    0 1 1 0 1 1 0 
				-13    0 1 0 1 1 1 0 
				-13    0 0 1 1 1 1 0 
				143    0 1 0 0 2 1 0 
				143    0 0 1 0 2 1 0 
				143    0 0 0 1 2 1 0 
				-44    0 0 0 0 3 1 0 
				-40    0 1 1 0 0 2 0 
				-40    0 1 0 1 0 2 0 
				-40    0 0 1 1 0 2 0 
				143    0 1 0 0 1 2 0 
				143    0 0 1 0 1 2 0 
				143    0 0 0 1 1 2 0 
				-227    0 0 0 0 2 2 0 
				-3    0 1 0 0 0 3 0 
				-3    0 0 1 0 0 3 0 
				-3    0 0 0 1 0 3 0 
				-44    0 0 0 0 1 3 0 
				85    0 0 0 0 0 4 0 
				-31    0 1 1 1 0 0 1 
				-50    0 1 1 0 1 0 1 
				-50    0 1 0 1 1 0 1 
				-50    0 0 1 1 1 0 1 
				-52    0 1 0 0 2 0 1 
				-52    0 0 1 0 2 0 1 
				-52    0 0 0 1 2 0 1 
				145    0 0 0 0 3 0 1 
				-50    0 1 1 0 0 1 1 
				-50    0 1 0 1 0 1 1 
				-50    0 0 1 1 0 1 1 
				220    0 1 0 0 1 1 1 
				220    0 0 1 0 1 1 1 
				220    0 0 0 1 1 1 1 
				531    0 0 0 0 2 1 1 
				-52    0 1 0 0 0 2 1 
				-52    0 0 1 0 0 2 1 
				-52    0 0 0 1 0 2 1 
				531    0 0 0 0 1 2 1 
				145    0 0 0 0 0 3 1 
				-98    0 1 1 0 0 0 2 
				-98    0 1 0 1 0 0 2 
				-98    0 0 1 1 0 0 2 
				-110    0 1 0 0 1 0 2 
				-110    0 0 1 0 1 0 2 
				-110    0 0 0 1 1 0 2 
				136    0 0 0 0 2 0 2 
				-110    0 1 0 0 0 1 2 
				-110    0 0 1 0 0 1 2 
				-110    0 0 0 1 0 1 2 
				621    0 0 0 0 1 1 2 
				136    0 0 0 0 0 2 2 
				-355    0 1 0 0 0 0 3 
				-355    0 0 1 0 0 0 3 
				-355    0 0 0 1 0 0 3 
				136    0 0 0 0 1 0 3 
				136    0 0 0 0 0 1 3 
				-104    0 0 0 0 0 0 4 
				138    0 1 1 1 0 0 0 
				37    0 1 1 0 1 0 0 
				37    0 1 0 1 1 0 0 
				37    0 0 1 1 1 0 0 
				-640    0 1 0 0 2 0 0 
				-640    0 0 1 0 2 0 0 
				-640    0 0 0 1 2 0 0 
				3    0 0 0 0 3 0 0 
				37    0 1 1 0 0 1 0 
				37    0 1 0 1 0 1 0 
				37    0 0 1 1 0 1 0 
				-1723    0 1 0 0 1 1 0 
				-1723    0 0 1 0 1 1 0 
				-1723    0 0 0 1 1 1 0 
				3222    0 0 0 0 2 1 0 
				-640    0 1 0 0 0 2 0 
				-640    0 0 1 0 0 2 0 
				-640    0 0 0 1 0 2 0 
				3222    0 0 0 0 1 2 0 
				3    0 0 0 0 0 3 0 
				530    0 1 1 0 0 0 1 
				530    0 1 0 1 0 0 1 
				530    0 0 1 1 0 0 1 
				30    0 1 0 0 1 0 1 
				30    0 0 1 0 1 0 1 
				30    0 0 0 1 1 0 1 
				-2416    0 0 0 0 2 0 1 
				30    0 1 0 0 0 1 1 
				30    0 0 1 0 0 1 1 
				30    0 0 0 1 0 1 1 
				-3359    0 0 0 0 1 1 1 
				-2416    0 0 0 0 0 2 1 
				1365    0 1 0 0 0 0 2 
				1365    0 0 1 0 0 0 2 
				1365    0 0 0 1 0 0 2 
				-1783    0 0 0 0 1 0 2 
				-1783    0 0 0 0 0 1 2 
				-1923    0 0 0 0 0 0 3 
				-60    0 1 1 0 0 0 0 
				-60    0 1 0 1 0 0 0 
				-60    0 0 1 1 0 0 0 
				411    0 1 0 0 1 0 0 
				411    0 0 1 0 1 0 0 
				411    0 0 0 1 1 0 0 
				-972    0 0 0 0 2 0 0 
				411    0 1 0 0 0 1 0 
				411    0 0 1 0 0 1 0 
				411    0 0 0 1 0 1 0 
				-1458    0 0 0 0 1 1 0 
				-972    0 0 0 0 0 2 0 
				458    0 1 0 0 0 0 1 
				458    0 0 1 0 0 0 1 
				458    0 0 0 1 0 0 1 
				-625    0 0 0 0 1 0 1 
				-625    0 0 0 0 0 1 1 
				-448    0 0 0 0 0 0 2 
				1015    0 1 0 0 0 0 0 
				1015    0 0 1 0 0 0 0 
				1015    0 0 0 1 0 0 0 
				519    0 0 0 0 1 0 0 
				519    0 0 0 0 0 1 0 
				5754    0 0 0 0 0 0 1 
				125    0 0 0 0 0 0 0 
				
				64
				1    0 1 2 0 0 0 0 
				1    0 0 2 1 0 0 0 
				-1    0 0 1 2 0 0 0 
				1    0 0 0 3 0 0 0 
				-5    0 1 1 0 1 0 0 
				-2    0 0 2 0 1 0 0 
				1    0 1 0 1 1 0 0 
				-4    0 0 1 1 1 0 0 
				2    0 0 0 2 1 0 0 
				3    0 1 0 0 2 0 0 
				3    0 0 0 1 2 0 0 
				4    0 0 0 0 3 0 0 
				-2    0 1 0 1 0 1 0 
				-1    0 0 1 1 0 1 0 
				1    0 0 0 2 0 1 0 
				-2    0 1 0 0 1 1 0 
				-2    0 0 1 0 1 1 0 
				4    0 0 0 1 1 1 0 
				4    0 0 0 0 2 1 0 
				-1    0 1 0 0 0 2 0 
				-2    0 0 1 0 0 2 0 
				-1    0 0 0 1 0 2 0 
				2    0 0 0 0 1 2 0 
				-4    0 1 1 0 0 0 1 
				1    0 1 0 1 0 0 1 
				-2    0 0 1 1 0 0 1 
				2    0 0 0 2 0 0 1 
				7    0 1 0 0 1 0 1 
				1    0 0 1 0 1 0 1 
				3    0 0 0 1 1 0 1 
				6    0 0 0 0 2 0 1 
				-1    0 1 0 0 0 1 1 
				6    0 0 0 1 0 1 1 
				9    0 0 0 0 1 1 1 
				2    0 0 0 0 0 2 1 
				2    0 1 0 0 0 0 2 
				-1    0 0 1 0 0 0 2 
				1    0 0 0 1 0 0 2 
				5    0 0 0 0 1 0 2 
				5    0 0 0 0 0 1 2 
				3    0 0 0 0 0 0 3 
				-1    0 1 1 0 0 0 0 
				-1    0 0 1 1 0 0 0 
				1    0 0 0 2 0 0 0 
				1    0 1 0 0 1 0 0 
				-2    0 0 1 0 1 0 0 
				2    0 0 0 1 1 0 0 
				4    0 0 0 0 2 0 0 
				-1    0 1 0 0 0 1 0 
				-1    0 0 1 0 0 1 0 
				1    0 0 0 1 0 1 0 
				3    0 0 0 0 1 1 0 
				1    0 1 0 0 0 0 1 
				-1    0 0 1 0 0 0 1 
				2    0 0 0 1 0 0 1 
				6    0 0 0 0 1 0 1 
				4    0 0 0 0 0 1 1 
				3    0 0 0 0 0 0 2 
				12    0 0 1 0 0 0 0 
				-12    0 0 0 1 0 0 0 
				-36    0 0 0 0 1 0 0 
				-12    0 0 0 0 0 1 0 
				-36    0 0 0 0 0 0 1 
				-33    0 0 0 0 0 0 0 
				
				159
				2    0 1 2 1 0 0 0 
				2    0 1 1 2 0 0 0 
				2    0 0 2 2 0 0 0 
				2    0 1 0 3 0 0 0 
				2    0 0 1 3 0 0 0 
				2    0 1 2 0 1 0 0 
				2    0 1 1 1 1 0 0 
				3    0 0 1 2 1 0 0 
				-7    0 0 0 3 1 0 0 
				4    0 1 1 0 2 0 0 
				-2    0 0 2 0 2 0 0 
				-2    0 1 0 1 2 0 0 
				-1    0 0 1 1 2 0 0 
				-10    0 0 0 2 2 0 0 
				2    0 1 0 0 3 0 0 
				-10    0 0 0 1 3 0 0 
				-7    0 0 0 0 4 0 0 
				-1    0 1 2 0 0 1 0 
				-4    0 1 1 1 0 1 0 
				-3    0 0 2 1 0 1 0 
				4    0 1 0 2 0 1 0 
				-3    0 0 1 2 0 1 0 
				3    0 0 0 3 0 1 0 
				4    0 1 1 0 1 1 0 
				-1    0 0 2 0 1 1 0 
				14    0 1 0 1 1 1 0 
				-4    0 0 0 2 1 1 0 
				7    0 1 0 0 2 1 0 
				1    0 0 1 0 2 1 0 
				-4    0 0 0 1 2 1 0 
				-3    0 0 0 0 3 1 0 
				1    0 1 1 0 0 2 0 
				1    0 0 2 0 0 2 0 
				3    0 1 0 1 0 2 0 
				2    0 0 1 1 0 2 0 
				6    0 0 0 2 0 2 0 
				5    0 1 0 0 1 2 0 
				4    0 0 1 0 1 2 0 
				4    0 0 0 1 1 2 0 
				-2    0 0 0 0 2 2 0 
				2    0 1 0 0 0 3 0 
				3    0 0 1 0 0 3 0 
				6    0 0 0 1 0 3 0 
				4    0 0 0 0 0 4 0 
				4    0 1 2 0 0 0 1 
				8    0 1 1 1 0 0 1 
				4    0 0 2 1 0 0 1 
				2    0 1 0 2 0 0 1 
				9    0 0 1 2 0 0 1 
				-7    0 0 0 3 0 0 1 
				10    0 1 1 0 1 0 1 
				-4    0 0 2 0 1 0 1 
				-12    0 1 0 1 1 0 1 
				1    0 0 1 1 1 0 1 
				-21    0 0 0 2 1 0 1 
				-8    0 1 0 0 2 0 1 
				-7    0 0 1 0 2 0 1 
				-27    0 0 0 1 2 0 1 
				-24    0 0 0 0 3 0 1 
				-4    0 0 2 0 0 1 1 
				11    0 1 0 1 0 1 1 
				-9    0 0 1 1 0 1 1 
				-11    0 0 0 2 0 1 1 
				14    0 1 0 0 1 1 1 
				-5    0 0 1 0 1 1 1 
				-27    0 0 0 1 1 1 1 
				-19    0 0 0 0 2 1 1 
				6    0 1 0 0 0 2 1 
				3    0 0 1 0 0 2 1 
				3    0 0 0 1 0 2 1 
				-9    0 0 0 0 1 2 1 
				1    0 0 0 0 0 3 1 
				8    0 1 1 0 0 0 2 
				-2    0 1 0 1 0 0 2 
				8    0 0 1 1 0 0 2 
				-7    0 0 0 2 0 0 2 
				-12    0 1 0 0 1 0 2 
				-6    0 0 1 0 1 0 2 
				-24    0 0 0 1 1 0 2 
				-28    0 0 0 0 2 0 2 
				6    0 1 0 0 0 1 2 
				-6    0 0 1 0 0 1 2 
				-18    0 0 0 1 0 1 2 
				-26    0 0 0 0 1 1 2 
				-3    0 0 0 0 0 2 2 
				1    0 0 1 0 0 0 3 
				-9    0 0 0 1 0 0 3 
				-24    0 0 0 0 1 0 3 
				-9    0 0 0 0 0 1 3 
				-9    0 0 0 0 0 0 4 
				1    0 1 2 0 0 0 0 
				2    0 1 1 1 0 0 0 
				1    0 0 2 1 0 0 0 
				2    0 1 0 2 0 0 0 
				3    0 0 1 2 0 0 0 
				-1    0 0 0 3 0 0 0 
				4    0 1 1 0 1 0 0 
				-1    0 0 2 0 1 0 0 
				1    0 0 1 1 1 0 0 
				-9    0 0 0 2 1 0 0 
				1    0 1 0 0 2 0 0 
				-1    0 0 1 0 2 0 0 
				-12    0 0 0 1 2 0 0 
				-9    0 0 0 0 3 0 0 
				-1    0 0 2 0 0 1 0 
				5    0 1 0 1 0 1 0 
				-3    0 0 1 1 0 1 0 
				1    0 0 0 2 0 1 0 
				8    0 1 0 0 1 1 0 
				1    0 0 1 0 1 1 0 
				-3    0 0 0 1 1 1 0 
				-4    0 0 0 0 2 1 0 
				3    0 1 0 0 0 2 0 
				3    0 0 1 0 0 2 0 
				6    0 0 0 1 0 2 0 
				4    0 0 0 0 0 3 0 
				6    0 1 1 0 0 0 1 
				1    0 1 0 1 0 0 1 
				6    0 0 1 1 0 0 1 
				-8    0 0 0 2 0 0 1 
				-4    0 1 0 0 1 0 1 
				-4    0 0 1 0 1 0 1 
				-26    0 0 0 1 1 0 1 
				-27    0 0 0 0 2 0 1 
				7    0 1 0 0 0 1 1 
				-4    0 0 1 0 0 1 1 
				-11    0 0 0 1 0 1 1 
				-18    0 0 0 0 1 1 1 
				1    0 0 1 0 0 0 2 
				-11    0 0 0 1 0 0 2 
				-28    0 0 0 0 1 0 2 
				-11    0 0 0 0 0 1 2 
				-11    0 0 0 0 0 0 3 
				1    0 1 1 0 0 0 0 
				-24    0 1 0 1 0 0 0 
				1    0 0 1 1 0 0 0 
				-1    0 0 0 2 0 0 0 
				-49    0 1 0 0 1 0 0 
				-25    0 0 1 0 1 0 0 
				82    0 0 0 1 1 0 0 
				82    0 0 0 0 2 0 0 
				-23    0 1 0 0 0 1 0 
				-25    0 0 1 0 0 1 0 
				-62    0 0 0 1 0 1 0 
				11    0 0 0 0 1 1 0 
				-48    0 0 0 0 0 2 0 
				-49    0 1 0 0 0 0 1 
				-12    0 0 1 0 0 0 1 
				107    0 0 0 1 0 0 1 
				237    0 0 0 0 1 0 1 
				9    0 0 0 0 0 1 1 
				106    0 0 0 0 0 0 2 
				-40    0 1 0 0 0 0 0 
				-7    0 0 1 0 0 0 0 
				38    0 0 0 1 0 0 0 
				78    0 0 0 0 1 0 0 
				-42    0 0 0 0 0 1 0 
				111    0 0 0 0 0 0 1 
				7    0 0 0 0 0 0 0 
				
				255
				-4    0 1 2 2 0 0 0 
				-2    0 1 1 3 0 0 0 
				-2    0 0 2 3 0 0 0 
				-4    0 0 2 2 1 0 0 
				2    0 1 0 3 1 0 0 
				-1    0 0 1 3 1 0 0 
				4    0 1 0 2 2 0 0 
				1    0 0 1 2 2 0 0 
				3    0 0 0 3 2 0 0 
				1    0 0 1 1 3 0 0 
				3    0 0 0 2 3 0 0 
				1    0 0 1 0 4 0 0 
				-1    0 0 0 1 4 0 0 
				11    0 1 2 1 0 1 0 
				14    0 1 1 2 0 1 0 
				14    0 0 2 2 0 1 0 
				7    0 0 1 3 0 1 0 
				11    0 0 2 1 1 1 0 
				-14    0 1 0 2 1 1 0 
				15    0 0 1 2 1 1 0 
				-7    0 0 0 3 1 1 0 
				-11    0 1 0 1 2 1 0 
				1    0 0 1 1 2 1 0 
				-8    0 0 0 2 2 1 0 
				1    0 0 1 0 3 1 0 
				-12    0 0 0 1 3 1 0 
				-4    0 1 2 0 0 2 0 
				-7    0 1 1 1 0 2 0 
				-7    0 0 2 1 0 2 0 
				-6    0 0 1 2 0 2 0 
				-4    0 0 2 0 1 2 0 
				7    0 1 0 1 1 2 0 
				-6    0 0 1 1 1 2 0 
				-15    0 0 0 2 1 2 0 
				4    0 1 0 0 2 2 0 
				1    0 0 1 0 2 2 0 
				-8    0 0 0 1 2 2 0 
				4    0 0 0 0 3 2 0 
				-2    0 1 1 0 0 3 0 
				-2    0 0 2 0 0 3 0 
				-14    0 0 1 1 0 3 0 
				2    0 1 0 0 1 3 0 
				-1    0 0 1 0 1 3 0 
				-7    0 0 0 1 1 3 0 
				4    0 0 0 0 2 3 0 
				1    0 0 0 0 1 4 0 
				22    0 0 0 0 0 5 0 
				-10    0 1 2 1 0 0 1 
				-14    0 1 1 2 0 0 1 
				-14    0 0 2 2 0 0 1 
				-7    0 0 1 3 0 0 1 
				-10    0 0 2 1 1 0 1 
				14    0 1 0 2 1 0 1 
				-13    0 0 1 2 1 0 1 
				7    0 0 0 3 1 0 1 
				10    0 1 0 1 2 0 1 
				1    0 0 1 1 2 0 1 
				13    0 0 0 2 2 0 1 
				1    0 0 1 0 3 0 1 
				9    0 0 0 1 3 0 1 
				11    0 1 2 0 0 1 1 
				34    0 1 1 1 0 1 1 
				34    0 0 2 1 0 1 1 
				46    0 0 1 2 0 1 1 
				11    0 0 2 0 1 1 1 
				-34    0 1 0 1 1 1 1 
				35    0 0 1 1 1 1 1 
				10    0 0 0 2 1 1 1 
				-11    0 1 0 0 2 1 1 
				1    0 0 1 0 2 1 1 
				-13    0 0 0 1 2 1 1 
				-11    0 0 0 0 3 1 1 
				-7    0 1 1 0 0 2 1 
				-7    0 0 2 0 0 2 1 
				-10    0 0 1 1 0 2 1 
				-21    0 0 0 2 0 2 1 
				7    0 1 0 0 1 2 1 
				-6    0 0 1 0 1 2 1 
				-32    0 0 0 1 1 2 1 
				-7    0 0 0 0 2 2 1 
				-14    0 0 1 0 0 3 1 
				-21    0 0 0 1 0 3 1 
				-6    0 0 0 0 1 3 1 
				1    0 0 0 0 0 4 1 
				-4    0 1 2 0 0 0 2 
				-14    0 1 1 1 0 0 2 
				-14    0 0 2 1 0 0 2 
				-20    0 0 1 2 0 0 2 
				-4    0 0 2 0 1 0 2 
				14    0 1 0 1 1 0 2 
				-13    0 0 1 1 1 0 2 
				6    0 0 0 2 1 0 2 
				4    0 1 0 0 2 0 2 
				1    0 0 1 0 2 0 2 
				13    0 0 0 1 2 0 2 
				4    0 0 0 0 3 0 2 
				14    0 1 1 0 0 1 2 
				14    0 0 2 0 0 1 2 
				46    0 0 1 1 0 1 2 
				21    0 0 0 2 0 1 2 
				-14    0 1 0 0 1 1 2 
				15    0 0 1 0 1 1 2 
				10    0 0 0 1 1 1 2 
				-7    0 0 0 0 2 1 2 
				-6    0 0 1 0 0 2 2 
				-21    0 0 0 1 0 2 2 
				-14    0 0 0 0 1 2 2 
				1    0 0 0 0 0 3 2 
				-2    0 1 1 0 0 0 3 
				-2    0 0 2 0 0 0 3 
				-7    0 0 1 1 0 0 3 
				2    0 1 0 0 1 0 3 
				-1    0 0 1 0 1 0 3 
				7    0 0 0 1 1 0 3 
				4    0 0 0 0 2 0 3 
				7    0 0 1 0 0 1 3 
				-6    0 0 0 0 1 1 3 
				1    0 0 0 0 0 2 3 
				1    0 0 0 0 1 0 4 
				1    0 0 0 0 0 1 4 
				1    0 0 0 0 0 0 5 
				-1    0 1 2 1 0 0 0 
				-2    0 1 1 2 0 0 0 
				-2    0 0 2 2 0 0 0 
				-1    0 0 1 3 0 0 0 
				-1    0 0 2 1 1 0 0 
				2    0 1 0 2 1 0 0 
				-1    0 0 1 2 1 0 0 
				1    0 0 0 3 1 0 0 
				1    0 1 0 1 2 0 0 
				1    0 0 1 1 2 0 0 
				4    0 0 0 2 2 0 0 
				1    0 0 1 0 3 0 0 
				2    0 1 2 0 0 1 0 
				10    0 1 1 1 0 1 0 
				10    0 0 2 1 0 1 0 
				16    0 0 1 2 0 1 0 
				2    0 0 2 0 1 1 0 
				-10    0 1 0 1 1 1 0 
				11    0 0 1 1 1 1 0 
				-8    0 0 0 2 1 1 0 
				-2    0 1 0 0 2 1 0 
				1    0 0 1 0 2 1 0 
				-13    0 0 0 1 2 1 0 
				-2    0 0 0 0 3 1 0 
				-4    0 1 1 0 0 2 0 
				-4    0 0 2 0 0 2 0 
				-13    0 0 1 1 0 2 0 
				-6    0 0 0 2 0 2 0 
				4    0 1 0 0 1 2 0 
				-3    0 0 1 0 1 2 0 
				-14    0 0 0 1 1 2 0 
				2    0 0 0 0 2 2 0 
				-5    0 0 1 0 0 3 0 
				-6    0 0 0 1 0 3 0 
				16    0 0 0 0 0 4 0 
				-1    0 1 2 0 0 0 1 
				-6    0 1 1 1 0 0 1 
				-6    0 0 2 1 0 0 1 
				-10    0 0 1 2 0 0 1 
				-1    0 0 2 0 1 0 1 
				6    0 1 0 1 1 0 1 
				-5    0 0 1 1 1 0 1 
				10    0 0 0 2 1 0 1 
				1    0 1 0 0 2 0 1 
				1    0 0 1 0 2 0 1 
				11    0 0 0 1 2 0 1 
				1    0 0 0 0 3 0 1 
				10    0 1 1 0 0 1 1 
				10    0 0 2 0 0 1 1 
				43    0 0 1 1 0 1 1 
				8    0 0 0 2 0 1 1 
				-10    0 1 0 0 1 1 1 
				11    0 0 1 0 1 1 1 
				-7    0 0 0 1 1 1 1 
				-12    0 0 0 0 2 1 1 
				-13    0 0 1 0 0 2 1 
				-27    0 0 0 1 0 2 1 
				-13    0 0 0 0 1 2 1 
				-5    0 0 0 0 0 3 1 
				-2    0 1 1 0 0 0 2 
				-2    0 0 2 0 0 0 2 
				-10    0 0 1 1 0 0 2 
				1    0 0 0 2 0 0 2 
				2    0 1 0 0 1 0 2 
				-1    0 0 1 0 1 0 2 
				10    0 0 0 1 1 0 2 
				5    0 0 0 0 2 0 2 
				16    0 0 1 0 0 1 2 
				8    0 0 0 1 0 1 2 
				-7    0 0 0 0 1 1 2 
				-5    0 0 0 0 0 2 2 
				-1    0 0 1 0 0 0 3 
				2    0 0 0 0 1 0 3 
				1    0 0 0 0 0 1 3 
				1    0 0 0 0 0 0 4 
				-25    0 1 1 1 0 0 0 
				-25    0 0 2 1 0 0 0 
				-50    0 0 1 2 0 0 0 
				25    0 1 0 1 1 0 0 
				-37    0 0 1 1 1 0 0 
				1    0 0 0 2 1 0 0 
				-12    0 0 1 0 2 0 0 
				13    0 0 0 1 2 0 0 
				26    0 1 1 0 0 1 0 
				26    0 0 2 0 0 1 0 
				168    0 0 1 1 0 1 0 
				50    0 0 0 2 0 1 0 
				-26    0 1 0 0 1 1 0 
				14    0 0 1 0 1 1 0 
				181    0 0 0 1 1 1 0 
				-2    0 0 0 0 2 1 0 
				-4    0 0 1 0 0 2 0 
				-6    0 0 0 1 0 2 0 
				-14    0 0 0 0 1 2 0 
				-270    0 0 0 0 0 3 0 
				-25    0 1 1 0 0 0 1 
				-25    0 0 2 0 0 0 1 
				-163    0 0 1 1 0 0 1 
				-49    0 0 0 2 0 0 1 
				25    0 1 0 0 1 0 1 
				-37    0 0 1 0 1 0 1 
				-83    0 0 0 1 1 0 1 
				1    0 0 0 0 2 0 1 
				168    0 0 1 0 0 1 1 
				349    0 0 0 1 0 1 1 
				169    0 0 0 0 1 1 1 
				-18    0 0 0 0 0 2 1 
				-50    0 0 1 0 0 0 2 
				-49    0 0 0 1 0 0 2 
				-11    0 0 0 0 1 0 2 
				38    0 0 0 0 0 1 2 
				-12    0 0 0 0 0 0 3 
				-26    0 1 1 0 0 0 0 
				-26    0 0 2 0 0 0 0 
				-101    0 0 1 1 0 0 0 
				-52    0 0 0 2 0 0 0 
				26    0 1 0 0 1 0 0 
				-33    0 0 1 0 1 0 0 
				-36    0 0 0 1 1 0 0 
				78    0 0 1 0 0 1 0 
				170    0 0 0 1 0 1 0 
				85    0 0 0 0 1 1 0 
				-82    0 0 0 0 0 2 0 
				-101    0 0 1 0 0 0 1 
				-137    0 0 0 1 0 0 1 
				-43    0 0 0 0 1 0 1 
				163    0 0 0 0 0 1 1 
				-59    0 0 0 0 0 0 2 
				-26    0 0 1 0 0 0 0 
				-82    0 0 0 1 0 0 0 
				-28    0 0 0 0 1 0 0 
				567    0 0 0 0 0 1 0 
				-54    0 0 0 0 0 0 1 
				-116    0 0 0 0 0 0 0 
				
				256
				-21    0 1 2 2 0 1 0 
				-21    0 0 2 2 1 1 0 
				21    0 1 2 1 0 2 0 
				21    0 1 1 2 0 2 0 
				21    0 0 2 2 0 2 0 
				21    0 0 2 1 1 2 0 
				21    0 0 1 2 1 2 0 
				21    0 1 1 1 0 3 0 
				21    0 0 2 1 0 3 0 
				21    0 0 1 2 0 3 0 
				21    0 0 1 1 1 3 0 
				-21    0 0 1 1 0 4 0 
				-21    0 1 0 0 0 5 0 
				-42    0 0 1 0 0 5 0 
				-42    0 0 0 1 0 5 0 
				-21    0 0 0 0 1 5 0 
				14    0 1 2 2 0 0 1 
				14    0 0 2 2 1 0 1 
				-56    0 1 2 1 0 1 1 
				-56    0 1 1 2 0 1 1 
				-56    0 0 2 2 0 1 1 
				-56    0 0 2 1 1 1 1 
				-56    0 0 1 2 1 1 1 
				21    0 1 2 0 0 2 1 
				42    0 1 1 1 0 2 1 
				42    0 0 2 1 0 2 1 
				21    0 1 0 2 0 2 1 
				42    0 0 1 2 0 2 1 
				21    0 0 2 0 1 2 1 
				42    0 0 1 1 1 2 1 
				21    0 0 0 2 1 2 1 
				21    0 1 1 0 0 3 1 
				21    0 0 2 0 0 3 1 
				21    0 1 0 1 0 3 1 
				98    0 0 1 1 0 3 1 
				21    0 0 0 2 0 3 1 
				21    0 0 1 0 1 3 1 
				21    0 0 0 1 1 3 1 
				-21    0 0 1 0 0 4 1 
				-21    0 0 0 1 0 4 1 
				-77    0 0 0 0 0 5 1 
				14    0 1 2 1 0 0 2 
				14    0 1 1 2 0 0 2 
				14    0 0 2 2 0 0 2 
				14    0 0 2 1 1 0 2 
				14    0 0 1 2 1 0 2 
				-21    0 1 2 0 0 1 2 
				-56    0 1 1 1 0 1 2 
				-56    0 0 2 1 0 1 2 
				-21    0 1 0 2 0 1 2 
				-56    0 0 1 2 0 1 2 
				-21    0 0 2 0 1 1 2 
				-56    0 0 1 1 1 1 2 
				-21    0 0 0 2 1 1 2 
				21    0 1 1 0 0 2 2 
				21    0 0 2 0 0 2 2 
				21    0 1 0 1 0 2 2 
				42    0 0 1 1 0 2 2 
				21    0 0 0 2 0 2 2 
				21    0 0 1 0 1 2 2 
				21    0 0 0 1 1 2 2 
				21    0 0 1 0 0 3 2 
				21    0 0 0 1 0 3 2 
				-35    0 0 0 0 0 4 2 
				-35    0 0 0 0 0 3 3 
				-35    0 0 0 0 0 2 4 
				-35    0 0 0 0 0 1 5 
				-35    0 0 0 0 0 0 6 
				-1    0 1 2 2 0 0 0 
				-1    0 0 2 2 1 0 0 
				-8    0 1 2 1 0 1 0 
				-8    0 1 1 2 0 1 0 
				-8    0 0 2 2 0 1 0 
				-8    0 0 2 1 1 1 0 
				-8    0 0 1 2 1 1 0 
				6    0 1 2 0 0 2 0 
				27    0 1 1 1 0 2 0 
				27    0 0 2 1 0 2 0 
				6    0 1 0 2 0 2 0 
				27    0 0 1 2 0 2 0 
				6    0 0 2 0 1 2 0 
				27    0 0 1 1 1 2 0 
				6    0 0 0 2 1 2 0 
				6    0 1 1 0 0 3 0 
				6    0 0 2 0 0 3 0 
				6    0 1 0 1 0 3 0 
				20    0 0 1 1 0 3 0 
				6    0 0 0 2 0 3 0 
				6    0 0 1 0 1 3 0 
				6    0 0 0 1 1 3 0 
				-15    0 1 0 0 0 4 0 
				-36    0 0 1 0 0 4 0 
				-36    0 0 0 1 0 4 0 
				-15    0 0 0 0 1 4 0 
				-29    0 0 0 0 0 5 0 
				-8    0 1 2 0 0 1 1 
				-36    0 1 1 1 0 1 1 
				-36    0 0 2 1 0 1 1 
				-8    0 1 0 2 0 1 1 
				-36    0 0 1 2 0 1 1 
				-8    0 0 2 0 1 1 1 
				-36    0 0 1 1 1 1 1 
				-8    0 0 0 2 1 1 1 
				27    0 1 1 0 0 2 1 
				27    0 0 2 0 0 2 1 
				27    0 1 0 1 0 2 1 
				90    0 0 1 1 0 2 1 
				27    0 0 0 2 0 2 1 
				27    0 0 1 0 1 2 1 
				27    0 0 0 1 1 2 1 
				6    0 1 0 0 0 3 1 
				20    0 0 1 0 0 3 1 
				20    0 0 0 1 0 3 1 
				6    0 0 0 0 1 3 1 
				-71    0 0 0 0 0 4 1 
				-1    0 1 2 0 0 0 2 
				-1    0 1 0 2 0 0 2 
				-1    0 0 2 0 1 0 2 
				-1    0 0 0 2 1 0 2 
				-8    0 1 1 0 0 1 2 
				-8    0 0 2 0 0 1 2 
				-8    0 1 0 1 0 1 2 
				-36    0 0 1 1 0 1 2 
				-8    0 0 0 2 0 1 2 
				-8    0 0 1 0 1 1 2 
				-8    0 0 0 1 1 1 2 
				6    0 1 0 0 0 2 2 
				27    0 0 1 0 0 2 2 
				27    0 0 0 1 0 2 2 
				6    0 0 0 0 1 2 2 
				-29    0 0 0 0 0 3 2 
				-35    0 0 0 0 0 2 3 
				-35    0 0 0 0 0 1 4 
				-35    0 0 0 0 0 0 5 
				49    0 1 2 1 0 0 0 
				49    0 1 1 2 0 0 0 
				49    0 0 2 2 0 0 0 
				49    0 0 2 1 1 0 0 
				49    0 0 1 2 1 0 0 
				-50    0 1 2 0 0 1 0 
				-349    0 1 1 1 0 1 0 
				-349    0 0 2 1 0 1 0 
				-50    0 1 0 2 0 1 0 
				-349    0 0 1 2 0 1 0 
				-50    0 0 2 0 1 1 0 
				-349    0 0 1 1 1 1 0 
				-50    0 0 0 2 1 1 0 
				6    0 1 1 0 0 2 0 
				6    0 0 2 0 0 2 0 
				6    0 1 0 1 0 2 0 
				246    0 0 1 1 0 2 0 
				6    0 0 0 2 0 2 0 
				6    0 0 1 0 1 2 0 
				6    0 0 0 1 1 2 0 
				258    0 1 0 0 0 3 0 
				566    0 0 1 0 0 3 0 
				566    0 0 0 1 0 3 0 
				258    0 0 0 0 1 3 0 
				27    0 0 0 0 0 4 0 
				49    0 1 2 0 0 0 1 
				246    0 1 1 1 0 0 1 
				246    0 0 2 1 0 0 1 
				49    0 1 0 2 0 0 1 
				246    0 0 1 2 0 0 1 
				49    0 0 2 0 1 0 1 
				246    0 0 1 1 1 0 1 
				49    0 0 0 2 1 0 1 
				-349    0 1 1 0 0 1 1 
				-349    0 0 2 0 0 1 1 
				-349    0 1 0 1 0 1 1 
				-1437    0 0 1 1 0 1 1 
				-349    0 0 0 2 0 1 1 
				-349    0 0 1 0 1 1 1 
				-349    0 0 0 1 1 1 1 
				6    0 1 0 0 0 2 1 
				246    0 0 1 0 0 2 1 
				246    0 0 0 1 0 2 1 
				6    0 0 0 0 1 2 1 
				986    0 0 0 0 0 3 1 
				49    0 1 1 0 0 0 2 
				49    0 0 2 0 0 0 2 
				49    0 1 0 1 0 0 2 
				246    0 0 1 1 0 0 2 
				49    0 0 0 2 0 0 2 
				49    0 0 1 0 1 0 2 
				49    0 0 0 1 1 0 2 
				-50    0 1 0 0 0 1 2 
				-349    0 0 1 0 0 1 2 
				-349    0 0 0 1 0 1 2 
				-50    0 0 0 0 1 1 2 
				426    0 0 0 0 0 2 2 
				420    0 0 0 0 0 1 3 
				420    0 0 0 0 0 0 4 
				52    0 1 2 0 0 0 0 
				137    0 1 1 1 0 0 0 
				137    0 0 2 1 0 0 0 
				52    0 1 0 2 0 0 0 
				137    0 0 1 2 0 0 0 
				52    0 0 2 0 1 0 0 
				137    0 0 1 1 1 0 0 
				52    0 0 0 2 1 0 0 
				-170    0 1 1 0 0 1 0 
				-170    0 0 2 0 0 1 0 
				-170    0 1 0 1 0 1 0 
				-588    0 0 1 1 0 1 0 
				-170    0 0 0 2 0 1 0 
				-170    0 0 1 0 1 1 0 
				-170    0 0 0 1 1 1 0 
				75    0 1 0 0 0 2 0 
				180    0 0 1 0 0 2 0 
				180    0 0 0 1 0 2 0 
				75    0 0 0 0 1 2 0 
				404    0 0 0 0 0 3 0 
				137    0 1 1 0 0 0 1 
				137    0 0 2 0 0 0 1 
				137    0 1 0 1 0 0 1 
				452    0 0 1 1 0 0 1 
				137    0 0 0 2 0 0 1 
				137    0 0 1 0 1 0 1 
				137    0 0 0 1 1 0 1 
				-170    0 1 0 0 0 1 1 
				-588    0 0 1 0 0 1 1 
				-588    0 0 0 1 0 1 1 
				-170    0 0 0 0 1 1 1 
				425    0 0 0 0 0 2 1 
				52    0 1 0 0 0 0 2 
				137    0 0 1 0 0 0 2 
				137    0 0 0 1 0 0 2 
				52    0 0 0 0 1 0 2 
				75    0 0 0 0 0 1 2 
				245    0 0 0 0 0 0 3 
				82    0 1 1 0 0 0 0 
				82    0 0 2 0 0 0 0 
				82    0 1 0 1 0 0 0 
				706    0 0 1 1 0 0 0 
				82    0 0 0 2 0 0 0 
				82    0 0 1 0 1 0 0 
				82    0 0 0 1 1 0 0 
				-539    0 1 0 0 0 1 0 
				-1897    0 0 1 0 0 1 0 
				-1897    0 0 0 1 0 1 0 
				-539    0 0 0 0 1 1 0 
				-378    0 0 0 0 0 2 0 
				82    0 1 0 0 0 0 1 
				706    0 0 1 0 0 0 1 
				706    0 0 0 1 0 0 1 
				82    0 0 0 0 1 0 1 
				-2877    0 0 0 0 0 1 1 
				-898    0 0 0 0 0 0 2 
				130    0 1 0 0 0 0 0 
				868    0 0 1 0 0 0 0 
				868    0 0 0 1 0 0 0 
				130    0 0 0 0 1 0 0 
				-1113    0 0 0 0 0 1 0 
				378    0 0 0 0 0 0 1 
				851    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>ducos8</ID>
            <Name>Ducos8</Name>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, ducos8, with_8_vars</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations> 
                    s^8-8*s^7+28*s^6-54*s^5+71*s^4-58*s^3+30*s^2-10*s+3,-10-58*r^2+30*r+30*s+71*r^3-54*r^4+r^7-8*r^6+28*r^5+28*s^5-54*s^4+71*s^3+s^7-8*s^6-58*s^2+r^6*s+r^5*s^2-8*r^5*s+r^4*s^3-8*r^4*s^2+28*r^4*s+r^3*s^4-8*r^3*s^3+28*r^3*s^2-54*r^3*s+r^2*s^5-8*r^2*s^4+28*r^2*s^3-54*r^2*s^2+71*r^2*s+r*s^6-8*r*s^5+28*r*s^4-54*r*s^3+71*r*s^2-58*r*s,30+71*r^2-58*r-58*s-54*r^3+28*r^4+r^6-8*r^5-8*s^5+28*s^4-54*s^3+s^6-58*v+v^6-8*v^5+28*v^4-54*v^3+71*v^2+71*s^2+r^5*s+r^4*s^2-8*r^4*s+28*v*r*s^2+v^4*r*s+v^3*r^2*s+v^3*r*s^2-8*v^3*r*s+v^2*r^3*s+v^2*r^2*s^2-8*v^2*r^2*s+v^2*r*s^3-8*v^2*r*s^2+28*v^2*r*s+r^3*s^3-8*r^3*s^2+28*r^3*s+r^2*s^4-8*r^2*s^3+28*r^2*s^2-54*r^2*s+r*s^5-8*r*s^4+28*r*s^3-54*r*s^2+71*r*s+v^5*r+v^5*s+v^4*r^2-8*v^4*r+v^4*s^2-8*v^4*s+v^3*r^3-8*v^3*r^2+28*v^3*r+v^3*s^3-8*v^3*s^2+28*v^3*s+v^2*r^4-8*v^2*r^3+28*v^2*r^2-54*v^2*r+v^2*s^4-8*v^2*s^3+28*v^2*s^2-54*v^2*s+v*r^5-8*v*r^4+28*v*r^3-54*v*r^2+71*v*r+v*s^5-8*v*s^4+28*v*s^3-54*v*s^2+71*v*s+v*r^4*s+v*r^3*s^2-8*v*r^3*s+v*r^2*s^3-8*v*r^2*s^2+28*v*r^2*s+v*r*s^4-8*v*r*s^3-54*v*r*s,-58-54*r^2+71*r+71*s+28*r^3-8*r^4+r^5+s^5-8*s^4+28*s^3+71*u+71*v+u^5+v^5-8*v^4+28*v^3-8*u^4+28*u^3-54*v^2-54*u^2-54*s^2+r^4*s-8*v*r*s^2+v^3*r*s+v^2*r^2*s+v^2*r*s^2-8*v^2*r*s+r^3*s^2-8*r^3*s+r^2*s^3-8*r^2*s^2+28*r^2*s+r*s^4-8*r*s^3+28*r*s^2-54*r*s+v^4*r+v^4*s+v^3*r^2-8*v^3*r+v^3*s^2-8*v^3*s+v^2*r^3-8*v^2*r^2+28*v^2*r+v^2*s^3-8*v^2*s^2+28*v^2*s+v*r^4-8*v*r^3+28*v*r^2-54*v*r+v*s^4-8*v*s^3+28*v*s^2-54*v*s+u^4*v+u^4*r+u^4*s+u^3*v^2-8*u^3*v+u^3*r^2-8*u^3*r+u^3*s^2-8*u^3*s+v*r^3*s+v*r^2*s^2-8*v*r^2*s+v*r*s^3+28*v*r*s+u^3*v*r+u^3*v*s+u^3*r*s+u^2*v^2*r+u^2*v^2*s+u^2*v*r^2-8*u^2*v*r+u^2*v*s^2-8*u^2*v*s+u^2*r^2*s+u^2*r*s^2-8*u^2*r*s+u*r^3*s+u^2*v^3-8*u^2*v^2+28*u^2*v+u^2*r^3-8*u^2*r^2+28*u^2*r+u^2*s^3-8*u^2*s^2+28*u^2*s+28*u*r^2-54*u*r-54*u*s-8*u*r^3+u*r^4+u*s^4-8*u*s^3-54*u*v+u*v^4-8*u*v^3+28*u*v^2+28*u*s^2+u^2*v*r*s+u*v*r*s^2+u*v^2*r*s+u*r^2*s^2-8*u*r^2*s+u*r*s^3-8*u*r*s^2+28*u*r*s+u*v^3*r+u*v^3*s+u*v^2*r^2-8*u*v^2*r+u*v^2*s^2-8*u*v^2*s+u*v*r^3-8*u*v*r^2+28*u*v*r+u*v*s^3-8*u*v*s^2+28*u*v*s+u*v*r^2*s-8*u*v*r*s,71+28*r^2-54*r-54*s-8*r^3+r^4+s^4-8*s^3-54*w-54*u-54*v+v^4-8*v^3+u^4-8*u^3+w^4-8*w^3+28*v^2+28*u^2+28*w^2+28*s^2+v*r*s^2+v^2*r*s+r^3*s+r^2*s^2-8*r^2*s+r*s^3-8*r*s^2+28*r*s+v^3*r+v^3*s+v^2*r^2-8*v^2*r+v^2*s^2-8*v^2*s+v*r^3-8*v*r^2+28*v*r+v*s^3-8*v*s^2+28*v*s+u^3*v+u^3*r+u^3*s+v*r^2*s-8*v*r*s+u^2*v*r+u^2*v*s+u^2*r*s+u^2*v^2-8*u^2*v+u^2*r^2-8*u^2*r+u^2*s^2-8*u^2*s-8*u*r^2+28*u*r+28*u*s+u*r^3+u*s^3+28*u*v+u*v^3-8*u*v^2-8*u*s^2+w^3*u+w^3*v+w^3*r+w^3*s+w^2*u^2-8*w^2*u+w^2*v^2-8*w^2*v+w^2*r^2-8*w^2*r+w^2*s^2-8*w^2*s+u*r^2*s+u*r*s^2-8*u*r*s+u*v^2*r+u*v^2*s+u*v*r^2-8*u*v*r+u*v*s^2-8*u*v*s+w^2*u*v+w^2*u*r+w^2*u*s+w^2*v*r+w^2*v*s+w^2*r*s+u*v*r*s+w*r^2*s+w*r*s^2-8*w*r*s+w*v^2*r+w*v^2*s+w*v*r^2-8*w*v*r+w*v*s^2-8*w*v*s+w*u^2*v+w*u^2*r+w*u^2*s+w*u*r^2-8*w*u*r-8*w*u*s-8*w*u*v+w*u*v^2+w*u*s^2-8*w*r^2+28*w*r+28*w*s+w*r^3+w*s^3+28*w*u+28*w*v+w*v^3+w*u^3-8*w*v^2-8*w*u^2-8*w*s^2+w*v*r*s+w*u*r*s+w*u*v*r+w*u*v*s,-54-8*r^2+28*r+28*s+r^3+s^3+28*w+28*z+28*u+28*v+v^3+u^3+w^3-8*v^2-8*u^2-8*w^2-8*z^2+z^3-8*s^2+r^2*s+r*s^2-8*r*s+v^2*r+v^2*s+v*r^2-8*v*r+v*s^2-8*v*s+v*r*s+u^2*v+u^2*r+u^2*s+u*r^2-8*u*r-8*u*s-8*u*v+u*v^2+u*s^2+w^2*u+w^2*v+w^2*r+w^2*s+u*r*s+u*v*r+u*v*s+w*r*s+w*v*r+w*v*s+w*u*r+w*u*s+w*u*v+z*w*u+z*w*v+z*w*r+z*w*s+z*u*v+z*u*r+z*u*s+z*v*r+z*v*s+z*r*s+w*r^2-8*w*r-8*w*s-8*w*u-8*w*v+w*v^2+w*u^2+w*s^2+z^2*w+z^2*u+z^2*v+z^2*r+z^2*s+z*w^2-8*z*w+z*u^2-8*z*u+z*v^2-8*z*v+z*r^2-8*z*r+z*s^2-8*z*s,28+r^2-8*r-8*s-8*y-8*w-8*z-8*u-8*v+v^2+u^2+w^2+y^2+z^2+s^2+r*s+v*r+v*s+u*r+u*s+u*v+w*r+w*s+w*u+w*v+z*w+z*u+z*v+z*r+z*s+y*z+y*w+y*u+y*v+y*r+y*s,x+y+z+w+u+v+r+s-8,-63708*r^2+39792*r+39792*s+58440*r^3-31428*r^4-1008*r^6+8736*r^5+8736*s^5-31428*s^4+58440*s^3-1008*s^6-8232-63708*s^2+1008*r^6*s+2688*r^5*s^2-11424*r^5*s+4032*r^4*s^3-25536*r^4*s^2+54096*r^4*s+4032*r^3*s^4-32256*r^3*s^3+99456*r^3*s^2-133488*r^3*s+2688*r^2*s^5-25536*r^2*s^4+99456*r^2*s^3-191808*r^2*s^2+180912*r^2*s+1008*r*s^6-11424*r*s^5+54096*r*s^4-133488*r*s^3+180912*r*s^2-130992*r*s,14856*r^2-10292*r-18524*s-10020*r^3+4168*r^4+96*r^6-956*r^5-32384*s^5+62608*s^4-73728*s^3-1008*s^7+8832*s^6+2376+54648*s^2-192*r^6*s-1872*r^5*s^2+2448*r^5*s-6576*r^4*s^3+14544*r^4*s^2-13268*r^4*s-13296*r^3*s^4+39744*r^3*s^3-57008*r^3*s^2+38824*r^3*s-15984*r^2*s^5+59904*r^2*s^4-115328*r^2*s^3+120472*r^2*s^2-65220*r^2*s-10608*r*s^6+47808*r*s^5-115328*r*s^4+161296*r*s^3-132504*r*s^2+61848*r*s+96*r^6*s^2+432*r^5*s^3+1104*r^4*s^4+1776*r^3*s^5+1776*r^2*s^6+1008*r*s^7,-6804*r^2+10836*r+10836*s+2016*r^3-240*r^4-240*s^4+2016*s^3+10836*u+10836*v-240*v^4+2016*v^3-240*u^4+2016*u^3-6804*v^2-6804*u^2-6804*s^2+180*r^4*s-7560-2304*v*r*s^2+132*v^3*r*s+210*v^2*r^2*s+210*v^2*r*s^2-1680*v^2*r*s+360*r^3*s^2-1920*r^3*s+360*r^2*s^3-2880*r^2*s^2+8064*r^2*s+180*r*s^4-1920*r*s^3+8064*r*s^2-15552*r*s+30*v^4*r+30*v^4*s+42*v^3*r^2-576*v^3*r+42*v^3*s^2-576*v^3*s+42*v^2*r^3-672*v^2*r^2+3528*v^2*r+42*v^2*s^3-672*v^2*s^2+3528*v^2*s+30*v*r^4-576*v*r^3+3528*v*r^2-9720*v*r+30*v*s^4-576*v*s^3+3528*v*s^2-9720*v*s+180*u^4*v+30*u^4*r+30*u^4*s+360*u^3*v^2-1920*u^3*v+42*u^3*r^2-576*u^3*r+42*u^3*s^2-576*u^3*s+240*v*r^3*s+360*v*r^2*s^2-2304*v*r^2*s+240*v*r*s^3+8064*v*r*s+240*u^3*v*r+240*u^3*v*s+132*u^3*r*s+360*u^2*v^2*r+360*u^2*v^2*s+210*u^2*v*r^2-2304*u^2*v*r+210*u^2*v*s^2-2304*u^2*v*s+210*u^2*r^2*s+210*u^2*r*s^2-1680*u^2*r*s+240*u*r^3*s+360*u^2*v^3-2880*u^2*v^2+8064*u^2*v+42*u^2*r^3-672*u^2*r^2+3528*u^2*r+42*u^2*s^3-672*u^2*s^2+3528*u^2*s+3528*u*r^2-9720*u*r-9720*u*s-576*u*r^3+30*u*r^4+30*u*s^4-576*u*s^3-15552*u*v+180*u*v^4-1920*u*v^3+8064*u*v^2+3528*u*s^2+444*u^2*v*r*s+444*u*v*r*s^2+444*u*v^2*r*s+360*u*r^2*s^2-2304*u*r^2*s+240*u*r*s^3-2304*u*r*s^2+8064*u*r*s+240*u*v^3*r+240*u*v^3*s+210*u*v^2*r^2-2304*u*v^2*r+210*u*v^2*s^2-2304*u*v^2*s+132*u*v*r^3-1680*u*v*r^2+8064*u*v*r+132*u*v*s^3-1680*u*v*s^2+8064*u*v*s+444*u*v*r^2*s-3552*u*v*r*s,30952*r^2-29316*r-29316*s-18452*r^3+6144*r^4+72*r^6-1056*r^5-1056*s^5+6144*s^4-18452*s^3+72*s^6-10020*u-17580*v-240*v^5+2112*v^4-7760*v^3+96*u^4-956*u^3+15004*v^2+4168*u^2+13296+30952*s^2+504*r^5*s+1092*r^4*s^2-5360*r^4*s+96*u^2*r^3*s+17624*v*r*s^2+140*v^4*r*s+244*v^3*r^2*s+244*v^3*r*s^2-1936*v^3*r*s+336*v^2*r^3*s+496*v^2*r^2*s^2-3184*v^2*r^2*s+336*v^2*r*s^3-3184*v^2*r*s^2+11072*v^2*r*s+1372*r^3*s^3-9680*r^3*s^2+23728*r^3*s+1092*r^2*s^4-9680*r^2*s^3+33808*r^2*s^2-53336*r^2*s+504*r*s^5-5360*r*s^4+23728*r*s^3-53336*r*s^2+61428*r*s+30*v^5*r+30*v^5*s+46*v^4*r^2-608*v^4*r+46*v^4*s^2-608*v^4*s+54*v^3*r^3-800*v^3*r^2+4072*v^3*r+54*v^3*s^3-800*v^3*s^2+4072*v^3*s+58*v^2*r^4-896*v^2*r^3+5080*v^2*r^2-13484*v^2*r+58*v^2*s^4-896*v^2*s^3+5080*v^2*s^2-13484*v^2*s+60*v*r^5-944*v*r^4+5584*v*r^3-16400*v*r^2+25068*v*r+60*v*s^5-944*v*s^4+5584*v*s^3-16400*v*s^2+25068*v*s-128*u^4*v-32*u^4*r-32*u^4*s-848*u^3*v^2+1552*u^3*v-128*u^3*r^2+544*u^3*r-128*u^3*s^2+544*u^3*s+418*v*r^4*s+778*v*r^3*s^2-4288*v*r^3*s+778*v*r^2*s^3-6208*v*r^2*s^2+17624*v*r^2*s+418*v*r*s^4-4288*v*r*s^3-33788*v*r*s-448*u^3*v*r-448*u^3*v*s-256*u^3*r*s-1600*u^2*v^2*r-1600*u^2*v^2*s-880*u^2*v*r^2+4016*u^2*v*r-880*u^2*v*s^2+4016*u^2*v*s-880*u^2*r^2*s-880*u^2*r*s^2+3008*u^2*r*s-2368*u*r^3*s-1808*u^2*v^3+5584*u^2*v^2-7652*u^2*v-320*u^2*r^3+1552*u^2*r^2-3764*u^2*r-320*u^2*s^3+1552*u^2*s^2-3764*u^2*s-9596*u*r^2+14232*u*r+14232*u*s+3568*u*r^3-704*u*r^4-704*u*s^4+3568*u*s^3+18696*u*v-1808*u*v^4+7600*u*v^3-16400*u*v^2-9596*u*s^2-1728*u^2*v*r*s-3600*u*v*r*s^2-3600*u*v^2*r*s-3328*u*r^2*s^2+9560*u*r^2*s-2368*u*r*s^3+9560*u*r*s^2-18236*u*r*s-2176*u*v^3*r-2176*u*v^3*s-1888*u*v^2*r^2+8552*u*v^2*r-1888*u*v^2*s^2+8552*u*v^2*s-1312*u*v*r^3+6536*u*v*r^2-16292*u*v*r-1312*u*v*s^3+6536*u*v*s^2-16292*u*v*s-3600*u*v*r^2*s+12528*u*v*r*s+48*u^4*v^2+4*u^4*r^2+4*u^4*s^2+148*u^3*v^3+16*u^4*v*r+16*u^4*v*s+8*u^4*r*s+106*u^3*v^2*r+106*u^3*v^2*s+42*u^3*v*r^2+42*u^3*v*s^2+34*u^3*r^2*s+34*u^3*r*s^2+136*u^2*r^2*s^2+96*u^2*r*s^3+226*u^2*v^3*r+226*u^2*v^3*s+154*u^2*v^2*r^2+154*u^2*v^2*s^2+76*u^2*v*r^3+76*u^2*v*s^3+238*u*r^4*s+418*u*r^3*s^2+418*u*r^2*s^3+88*u^3*v*r*s+12*u^3*r^3+12*u^3*s^3+28*u^2*r^4+28*u^2*s^4+228*u^2*v^4+60*u*r^5+60*u*s^5+218*u^2*v*r*s^2+296*u^2*v^2*r*s+218*u^2*v*r^2*s+180*u*v^5+400*u*v^3*r*s+452*u*v^2*r^2*s+452*u*v^2*r*s^2+238*u*r*s^4+226*u*v^4*r+226*u*v^4*s+210*u*v^3*r^2+210*u*v^3*s^2+166*u*v^2*r^3+166*u*v^2*s^3+110*u*v*r^4+110*u*v*s^4+388*u*v*r^3*s+548*u*v*r^2*s^2+388*u*v*r*s^3,-48*r^2+336*r+336*s+336*w+336*z+336*u+336*v-48*v^2-48*u^2-48*w^2-48*z^2-648-48*s^2+24*r^2*s+24*r*s^2-192*r*s+6*v^2*r+6*v^2*s+6*v*r^2-96*v*r+6*v*s^2-96*v*s+24*v*r*s+24*u^2*v+6*u^2*r+6*u^2*s+6*u*r^2-96*u*r-96*u*s-192*u*v+24*u*v^2+6*u*s^2+6*w^2*u+6*w^2*v+6*w^2*r+6*w^2*s+24*u*r*s+24*u*v*r+24*u*v*s+24*w*r*s+12*w*v*r+12*w*v*s+12*w*u*r+12*w*u*s+24*w*u*v+24*z*w*u+24*z*w*v+24*z*w*r+24*z*w*s+24*z*u*v+12*z*u*r+12*z*u*s+12*z*v*r+12*z*v*s+24*z*r*s+6*w*r^2-96*w*r-96*w*s-96*w*u-96*w*v+6*w*v^2+6*w*u^2+6*w*s^2+24*z^2*w+6*z^2*u+6*z^2*v+6*z^2*r+6*z^2*s+24*z*w^2-192*z*w+6*z*u^2-96*z*u+6*z*v^2-96*z*v+6*z*r^2-96*z*r+6*z*s^2-96*z*s,1448*r^2+38*z*u*r*s-2960*r-2960*s-352*r^3+38*r^4+38*s^4-352*s^3+388*w-260*z-2960*u-2960*v+38*v^4-352*v^3+38*u^4-352*u^3+48*w^3+1448*v^2+1448*u^2-288*w^2+48*z^2+2712+1448*s^2+108*v*r*s^2+82*v^2*r*s+100*r^3*s+140*r^2*s^2-864*r^2*s+100*r*s^3-864*r*s^2+2736*r*s+44*v^3*r+44*v^3*s+48*v^2*r^2-432*v^2*r+48*v^2*s^2-432*v^2*s+44*v*r^3-432*v*r^2+1728*v*r+44*v*s^3-432*v*s^2+1728*v*s+100*u^3*v+44*u^3*r+44*u^3*s+108*v*r^2*s-800*v*r*s+108*u^2*v*r+108*u^2*v*s+82*u^2*r*s+140*u^2*v^2-864*u^2*v+48*u^2*r^2-432*u^2*r+48*u^2*s^2-432*u^2*s-432*u*r^2+1728*u*r+1728*u*s+44*u*r^3+44*u*s^3+2736*u*v+100*u*v^3-864*u*v^2-432*u*s^2-6*w^3*u-6*w^3*v-6*w^3*r-6*w^3*s-2*w^2*u^2+64*w^2*u-2*w^2*v^2+64*w^2*v-2*w^2*r^2+64*w^2*r-2*w^2*s^2+64*w^2*s+108*u*r^2*s+108*u*r*s^2-800*u*r*s+108*u*v^2*r+108*u*v^2*s+82*u*v*r^2-800*u*v*r+82*u*v*s^2-800*u*v*s-4*w^2*u*v-8*w^2*u*r-8*w^2*u*s-8*w^2*v*r-8*w^2*v*s-4*w^2*r*s+152*u*v*r*s+22*w*r^2*s+22*w*r*s^2-112*w*r*s+4*w*v^2*r+4*w*v^2*s+4*w*v*r^2-16*w*v*r+4*w*v*s^2-16*w*v*s+22*w*u^2*v+4*w*u^2*r+4*w*u^2*s+4*w*u*r^2-16*w*u*r-16*w*u*s-112*w*u*v+22*w*u*v^2+4*w*u*s^2+96*z*w*u+96*z*w*v+96*z*w*r+96*z*w*s-304*z*u*v-112*z*u*r-112*z*u*s-112*z*v*r-112*z*v*s-304*z*r*s-32*w*r^2-8*w*r-8*w*s+6*w*r^3+6*w*s^3-8*w*u-8*w*v+6*w*v^3+6*w*u^3-32*w*v^2-32*w*u^2-32*w*s^2+32*z^2*w-32*z^2*u-32*z^2*v-32*z^2*r-32*z^2*s+176*z*w^2-400*z*w-80*z*u^2+328*z*u-80*z*v^2+328*z*v-80*z*r^2+328*z*r-80*z*s^2+328*z*s+14*w*v*r*s+14*w*u*r*s+14*w*u*v*r+14*w*u*v*s-4*z^2*w*u-4*z^2*w*v-4*z^2*w*r-4*z^2*w*s+20*z^2*u*v+4*z^2*u*r+4*z^2*u*s+4*z^2*v*r+4*z^2*v*s-8*z^2*w^2+4*z^2*u^2+4*z^2*v^2+4*z^2*r^2+4*z^2*s^2+6*z*r^3+6*z*s^3+6*z*v^3+6*z*u^3-24*z*w^3+20*z^2*r*s+46*z*r^2*s+46*z*r*s^2+10*z*v^2*r+10*z*v^2*s+10*z*v*r^2+10*z*v*s^2+46*z*u^2*v+10*z*u^2*r+10*z*u^2*s+10*z*u*r^2+46*z*u*v^2+10*z*u*s^2-22*z*w^2*u-22*z*w^2*v-22*z*w^2*r-22*z*w^2*s-12*z*w*r^2-12*z*w*v^2-12*z*w*u^2-12*z*w*s^2+38*z*v*r*s+38*z*u*v*r+38*z*u*v*s+4*z*w*r*s-12*z*w*v*r-12*z*w*v*s-12*z*w*u*r-12*z*w*u*s+4*z*w*u*v</Equations>
            <GBasisLen>11</GBasisLen>
            <HilbertPolynomial>384</HilbertPolynomial>
            <Polynomials>
				14
				
				9
				1    0 0 0 0 0 0 0 8 
				-8    0 0 0 0 0 0 0 7 
				28    0 0 0 0 0 0 0 6 
				-54    0 0 0 0 0 0 0 5 
				71    0 0 0 0 0 0 0 4 
				-58    0 0 0 0 0 0 0 3 
				30    0 0 0 0 0 0 0 2 
				-10    0 0 0 0 0 0 0 1 
				3    0 0 0 0 0 0 0 0 
				
				36
				1    0 0 0 0 0 0 7 0 
				1    0 0 0 0 0 0 6 1 
				1    0 0 0 0 0 0 5 2 
				1    0 0 0 0 0 0 4 3 
				1    0 0 0 0 0 0 3 4 
				1    0 0 0 0 0 0 2 5 
				1    0 0 0 0 0 0 1 6 
				1    0 0 0 0 0 0 0 7 
				-8    0 0 0 0 0 0 6 0 
				-8    0 0 0 0 0 0 5 1 
				-8    0 0 0 0 0 0 4 2 
				-8    0 0 0 0 0 0 3 3 
				-8    0 0 0 0 0 0 2 4 
				-8    0 0 0 0 0 0 1 5 
				-8    0 0 0 0 0 0 0 6 
				28    0 0 0 0 0 0 5 0 
				28    0 0 0 0 0 0 4 1 
				28    0 0 0 0 0 0 3 2 
				28    0 0 0 0 0 0 2 3 
				28    0 0 0 0 0 0 1 4 
				28    0 0 0 0 0 0 0 5 
				-54    0 0 0 0 0 0 4 0 
				-54    0 0 0 0 0 0 3 1 
				-54    0 0 0 0 0 0 2 2 
				-54    0 0 0 0 0 0 1 3 
				-54    0 0 0 0 0 0 0 4 
				71    0 0 0 0 0 0 3 0 
				71    0 0 0 0 0 0 2 1 
				71    0 0 0 0 0 0 1 2 
				71    0 0 0 0 0 0 0 3 
				-58    0 0 0 0 0 0 2 0 
				-58    0 0 0 0 0 0 1 1 
				-58    0 0 0 0 0 0 0 2 
				30    0 0 0 0 0 0 1 0 
				30    0 0 0 0 0 0 0 1 
				-10    0 0 0 0 0 0 0 0 
				
				84
				1    0 0 0 0 0 6 0 0 
				1    0 0 0 0 0 5 1 0 
				1    0 0 0 0 0 4 2 0 
				1    0 0 0 0 0 3 3 0 
				1    0 0 0 0 0 2 4 0 
				1    0 0 0 0 0 1 5 0 
				1    0 0 0 0 0 0 6 0 
				1    0 0 0 0 0 5 0 1 
				1    0 0 0 0 0 4 1 1 
				1    0 0 0 0 0 3 2 1 
				1    0 0 0 0 0 2 3 1 
				1    0 0 0 0 0 1 4 1 
				1    0 0 0 0 0 0 5 1 
				1    0 0 0 0 0 4 0 2 
				1    0 0 0 0 0 3 1 2 
				1    0 0 0 0 0 2 2 2 
				1    0 0 0 0 0 1 3 2 
				1    0 0 0 0 0 0 4 2 
				1    0 0 0 0 0 3 0 3 
				1    0 0 0 0 0 2 1 3 
				1    0 0 0 0 0 1 2 3 
				1    0 0 0 0 0 0 3 3 
				1    0 0 0 0 0 2 0 4 
				1    0 0 0 0 0 1 1 4 
				1    0 0 0 0 0 0 2 4 
				1    0 0 0 0 0 1 0 5 
				1    0 0 0 0 0 0 1 5 
				1    0 0 0 0 0 0 0 6 
				-8    0 0 0 0 0 5 0 0 
				-8    0 0 0 0 0 4 1 0 
				-8    0 0 0 0 0 3 2 0 
				-8    0 0 0 0 0 2 3 0 
				-8    0 0 0 0 0 1 4 0 
				-8    0 0 0 0 0 0 5 0 
				-8    0 0 0 0 0 4 0 1 
				-8    0 0 0 0 0 3 1 1 
				-8    0 0 0 0 0 2 2 1 
				-8    0 0 0 0 0 1 3 1 
				-8    0 0 0 0 0 0 4 1 
				-8    0 0 0 0 0 3 0 2 
				-8    0 0 0 0 0 2 1 2 
				-8    0 0 0 0 0 1 2 2 
				-8    0 0 0 0 0 0 3 2 
				-8    0 0 0 0 0 2 0 3 
				-8    0 0 0 0 0 1 1 3 
				-8    0 0 0 0 0 0 2 3 
				-8    0 0 0 0 0 1 0 4 
				-8    0 0 0 0 0 0 1 4 
				-8    0 0 0 0 0 0 0 5 
				28    0 0 0 0 0 4 0 0 
				28    0 0 0 0 0 3 1 0 
				28    0 0 0 0 0 2 2 0 
				28    0 0 0 0 0 1 3 0 
				28    0 0 0 0 0 0 4 0 
				28    0 0 0 0 0 3 0 1 
				28    0 0 0 0 0 2 1 1 
				28    0 0 0 0 0 1 2 1 
				28    0 0 0 0 0 0 3 1 
				28    0 0 0 0 0 2 0 2 
				28    0 0 0 0 0 1 1 2 
				28    0 0 0 0 0 0 2 2 
				28    0 0 0 0 0 1 0 3 
				28    0 0 0 0 0 0 1 3 
				28    0 0 0 0 0 0 0 4 
				-54    0 0 0 0 0 3 0 0 
				-54    0 0 0 0 0 2 1 0 
				-54    0 0 0 0 0 1 2 0 
				-54    0 0 0 0 0 0 3 0 
				-54    0 0 0 0 0 2 0 1 
				-54    0 0 0 0 0 1 1 1 
				-54    0 0 0 0 0 0 2 1 
				-54    0 0 0 0 0 1 0 2 
				-54    0 0 0 0 0 0 1 2 
				-54    0 0 0 0 0 0 0 3 
				71    0 0 0 0 0 2 0 0 
				71    0 0 0 0 0 1 1 0 
				71    0 0 0 0 0 0 2 0 
				71    0 0 0 0 0 1 0 1 
				71    0 0 0 0 0 0 1 1 
				71    0 0 0 0 0 0 0 2 
				-58    0 0 0 0 0 1 0 0 
				-58    0 0 0 0 0 0 1 0 
				-58    0 0 0 0 0 0 0 1 
				30    0 0 0 0 0 0 0 0 
				
				126
				1    0 0 0 0 5 0 0 0 
				1    0 0 0 0 4 1 0 0 
				1    0 0 0 0 3 2 0 0 
				1    0 0 0 0 2 3 0 0 
				1    0 0 0 0 1 4 0 0 
				1    0 0 0 0 0 5 0 0 
				1    0 0 0 0 4 0 1 0 
				1    0 0 0 0 3 1 1 0 
				1    0 0 0 0 2 2 1 0 
				1    0 0 0 0 1 3 1 0 
				1    0 0 0 0 0 4 1 0 
				1    0 0 0 0 3 0 2 0 
				1    0 0 0 0 2 1 2 0 
				1    0 0 0 0 1 2 2 0 
				1    0 0 0 0 0 3 2 0 
				1    0 0 0 0 2 0 3 0 
				1    0 0 0 0 1 1 3 0 
				1    0 0 0 0 0 2 3 0 
				1    0 0 0 0 1 0 4 0 
				1    0 0 0 0 0 1 4 0 
				1    0 0 0 0 0 0 5 0 
				1    0 0 0 0 4 0 0 1 
				1    0 0 0 0 3 1 0 1 
				1    0 0 0 0 2 2 0 1 
				1    0 0 0 0 1 3 0 1 
				1    0 0 0 0 0 4 0 1 
				1    0 0 0 0 3 0 1 1 
				1    0 0 0 0 2 1 1 1 
				1    0 0 0 0 1 2 1 1 
				1    0 0 0 0 0 3 1 1 
				1    0 0 0 0 2 0 2 1 
				1    0 0 0 0 1 1 2 1 
				1    0 0 0 0 0 2 2 1 
				1    0 0 0 0 1 0 3 1 
				1    0 0 0 0 0 1 3 1 
				1    0 0 0 0 0 0 4 1 
				1    0 0 0 0 3 0 0 2 
				1    0 0 0 0 2 1 0 2 
				1    0 0 0 0 1 2 0 2 
				1    0 0 0 0 0 3 0 2 
				1    0 0 0 0 2 0 1 2 
				1    0 0 0 0 1 1 1 2 
				1    0 0 0 0 0 2 1 2 
				1    0 0 0 0 1 0 2 2 
				1    0 0 0 0 0 1 2 2 
				1    0 0 0 0 0 0 3 2 
				1    0 0 0 0 2 0 0 3 
				1    0 0 0 0 1 1 0 3 
				1    0 0 0 0 0 2 0 3 
				1    0 0 0 0 1 0 1 3 
				1    0 0 0 0 0 1 1 3 
				1    0 0 0 0 0 0 2 3 
				1    0 0 0 0 1 0 0 4 
				1    0 0 0 0 0 1 0 4 
				1    0 0 0 0 0 0 1 4 
				1    0 0 0 0 0 0 0 5 
				-8    0 0 0 0 4 0 0 0 
				-8    0 0 0 0 3 1 0 0 
				-8    0 0 0 0 2 2 0 0 
				-8    0 0 0 0 1 3 0 0 
				-8    0 0 0 0 0 4 0 0 
				-8    0 0 0 0 3 0 1 0 
				-8    0 0 0 0 2 1 1 0 
				-8    0 0 0 0 1 2 1 0 
				-8    0 0 0 0 0 3 1 0 
				-8    0 0 0 0 2 0 2 0 
				-8    0 0 0 0 1 1 2 0 
				-8    0 0 0 0 0 2 2 0 
				-8    0 0 0 0 1 0 3 0 
				-8    0 0 0 0 0 1 3 0 
				-8    0 0 0 0 0 0 4 0 
				-8    0 0 0 0 3 0 0 1 
				-8    0 0 0 0 2 1 0 1 
				-8    0 0 0 0 1 2 0 1 
				-8    0 0 0 0 0 3 0 1 
				-8    0 0 0 0 2 0 1 1 
				-8    0 0 0 0 1 1 1 1 
				-8    0 0 0 0 0 2 1 1 
				-8    0 0 0 0 1 0 2 1 
				-8    0 0 0 0 0 1 2 1 
				-8    0 0 0 0 0 0 3 1 
				-8    0 0 0 0 2 0 0 2 
				-8    0 0 0 0 1 1 0 2 
				-8    0 0 0 0 0 2 0 2 
				-8    0 0 0 0 1 0 1 2 
				-8    0 0 0 0 0 1 1 2 
				-8    0 0 0 0 0 0 2 2 
				-8    0 0 0 0 1 0 0 3 
				-8    0 0 0 0 0 1 0 3 
				-8    0 0 0 0 0 0 1 3 
				-8    0 0 0 0 0 0 0 4 
				28    0 0 0 0 3 0 0 0 
				28    0 0 0 0 2 1 0 0 
				28    0 0 0 0 1 2 0 0 
				28    0 0 0 0 0 3 0 0 
				28    0 0 0 0 2 0 1 0 
				28    0 0 0 0 1 1 1 0 
				28    0 0 0 0 0 2 1 0 
				28    0 0 0 0 1 0 2 0 
				28    0 0 0 0 0 1 2 0 
				28    0 0 0 0 0 0 3 0 
				28    0 0 0 0 2 0 0 1 
				28    0 0 0 0 1 1 0 1 
				28    0 0 0 0 0 2 0 1 
				28    0 0 0 0 1 0 1 1 
				28    0 0 0 0 0 1 1 1 
				28    0 0 0 0 0 0 2 1 
				28    0 0 0 0 1 0 0 2 
				28    0 0 0 0 0 1 0 2 
				28    0 0 0 0 0 0 1 2 
				28    0 0 0 0 0 0 0 3 
				-54    0 0 0 0 2 0 0 0 
				-54    0 0 0 0 1 1 0 0 
				-54    0 0 0 0 0 2 0 0 
				-54    0 0 0 0 1 0 1 0 
				-54    0 0 0 0 0 1 1 0 
				-54    0 0 0 0 0 0 2 0 
				-54    0 0 0 0 1 0 0 1 
				-54    0 0 0 0 0 1 0 1 
				-54    0 0 0 0 0 0 1 1 
				-54    0 0 0 0 0 0 0 2 
				71    0 0 0 0 1 0 0 0 
				71    0 0 0 0 0 1 0 0 
				71    0 0 0 0 0 0 1 0 
				71    0 0 0 0 0 0 0 1 
				-58    0 0 0 0 0 0 0 0 
				
				126
				1    0 0 0 4 0 0 0 0 
				1    0 0 0 3 1 0 0 0 
				1    0 0 0 2 2 0 0 0 
				1    0 0 0 1 3 0 0 0 
				1    0 0 0 0 4 0 0 0 
				1    0 0 0 3 0 1 0 0 
				1    0 0 0 2 1 1 0 0 
				1    0 0 0 1 2 1 0 0 
				1    0 0 0 0 3 1 0 0 
				1    0 0 0 2 0 2 0 0 
				1    0 0 0 1 1 2 0 0 
				1    0 0 0 0 2 2 0 0 
				1    0 0 0 1 0 3 0 0 
				1    0 0 0 0 1 3 0 0 
				1    0 0 0 0 0 4 0 0 
				1    0 0 0 3 0 0 1 0 
				1    0 0 0 2 1 0 1 0 
				1    0 0 0 1 2 0 1 0 
				1    0 0 0 0 3 0 1 0 
				1    0 0 0 2 0 1 1 0 
				1    0 0 0 1 1 1 1 0 
				1    0 0 0 0 2 1 1 0 
				1    0 0 0 1 0 2 1 0 
				1    0 0 0 0 1 2 1 0 
				1    0 0 0 0 0 3 1 0 
				1    0 0 0 2 0 0 2 0 
				1    0 0 0 1 1 0 2 0 
				1    0 0 0 0 2 0 2 0 
				1    0 0 0 1 0 1 2 0 
				1    0 0 0 0 1 1 2 0 
				1    0 0 0 0 0 2 2 0 
				1    0 0 0 1 0 0 3 0 
				1    0 0 0 0 1 0 3 0 
				1    0 0 0 0 0 1 3 0 
				1    0 0 0 0 0 0 4 0 
				1    0 0 0 3 0 0 0 1 
				1    0 0 0 2 1 0 0 1 
				1    0 0 0 1 2 0 0 1 
				1    0 0 0 0 3 0 0 1 
				1    0 0 0 2 0 1 0 1 
				1    0 0 0 1 1 1 0 1 
				1    0 0 0 0 2 1 0 1 
				1    0 0 0 1 0 2 0 1 
				1    0 0 0 0 1 2 0 1 
				1    0 0 0 0 0 3 0 1 
				1    0 0 0 2 0 0 1 1 
				1    0 0 0 1 1 0 1 1 
				1    0 0 0 0 2 0 1 1 
				1    0 0 0 1 0 1 1 1 
				1    0 0 0 0 1 1 1 1 
				1    0 0 0 0 0 2 1 1 
				1    0 0 0 1 0 0 2 1 
				1    0 0 0 0 1 0 2 1 
				1    0 0 0 0 0 1 2 1 
				1    0 0 0 0 0 0 3 1 
				1    0 0 0 2 0 0 0 2 
				1    0 0 0 1 1 0 0 2 
				1    0 0 0 0 2 0 0 2 
				1    0 0 0 1 0 1 0 2 
				1    0 0 0 0 1 1 0 2 
				1    0 0 0 0 0 2 0 2 
				1    0 0 0 1 0 0 1 2 
				1    0 0 0 0 1 0 1 2 
				1    0 0 0 0 0 1 1 2 
				1    0 0 0 0 0 0 2 2 
				1    0 0 0 1 0 0 0 3 
				1    0 0 0 0 1 0 0 3 
				1    0 0 0 0 0 1 0 3 
				1    0 0 0 0 0 0 1 3 
				1    0 0 0 0 0 0 0 4 
				-8    0 0 0 3 0 0 0 0 
				-8    0 0 0 2 1 0 0 0 
				-8    0 0 0 1 2 0 0 0 
				-8    0 0 0 0 3 0 0 0 
				-8    0 0 0 2 0 1 0 0 
				-8    0 0 0 1 1 1 0 0 
				-8    0 0 0 0 2 1 0 0 
				-8    0 0 0 1 0 2 0 0 
				-8    0 0 0 0 1 2 0 0 
				-8    0 0 0 0 0 3 0 0 
				-8    0 0 0 2 0 0 1 0 
				-8    0 0 0 1 1 0 1 0 
				-8    0 0 0 0 2 0 1 0 
				-8    0 0 0 1 0 1 1 0 
				-8    0 0 0 0 1 1 1 0 
				-8    0 0 0 0 0 2 1 0 
				-8    0 0 0 1 0 0 2 0 
				-8    0 0 0 0 1 0 2 0 
				-8    0 0 0 0 0 1 2 0 
				-8    0 0 0 0 0 0 3 0 
				-8    0 0 0 2 0 0 0 1 
				-8    0 0 0 1 1 0 0 1 
				-8    0 0 0 0 2 0 0 1 
				-8    0 0 0 1 0 1 0 1 
				-8    0 0 0 0 1 1 0 1 
				-8    0 0 0 0 0 2 0 1 
				-8    0 0 0 1 0 0 1 1 
				-8    0 0 0 0 1 0 1 1 
				-8    0 0 0 0 0 1 1 1 
				-8    0 0 0 0 0 0 2 1 
				-8    0 0 0 1 0 0 0 2 
				-8    0 0 0 0 1 0 0 2 
				-8    0 0 0 0 0 1 0 2 
				-8    0 0 0 0 0 0 1 2 
				-8    0 0 0 0 0 0 0 3 
				28    0 0 0 2 0 0 0 0 
				28    0 0 0 1 1 0 0 0 
				28    0 0 0 0 2 0 0 0 
				28    0 0 0 1 0 1 0 0 
				28    0 0 0 0 1 1 0 0 
				28    0 0 0 0 0 2 0 0 
				28    0 0 0 1 0 0 1 0 
				28    0 0 0 0 1 0 1 0 
				28    0 0 0 0 0 1 1 0 
				28    0 0 0 0 0 0 2 0 
				28    0 0 0 1 0 0 0 1 
				28    0 0 0 0 1 0 0 1 
				28    0 0 0 0 0 1 0 1 
				28    0 0 0 0 0 0 1 1 
				28    0 0 0 0 0 0 0 2 
				-54    0 0 0 1 0 0 0 0 
				-54    0 0 0 0 1 0 0 0 
				-54    0 0 0 0 0 1 0 0 
				-54    0 0 0 0 0 0 1 0 
				-54    0 0 0 0 0 0 0 1 
				71    0 0 0 0 0 0 0 0 
				
				84
				1    0 0 3 0 0 0 0 0 
				1    0 0 2 1 0 0 0 0 
				1    0 0 1 2 0 0 0 0 
				1    0 0 0 3 0 0 0 0 
				1    0 0 2 0 1 0 0 0 
				1    0 0 1 1 1 0 0 0 
				1    0 0 0 2 1 0 0 0 
				1    0 0 1 0 2 0 0 0 
				1    0 0 0 1 2 0 0 0 
				1    0 0 0 0 3 0 0 0 
				1    0 0 2 0 0 1 0 0 
				1    0 0 1 1 0 1 0 0 
				1    0 0 0 2 0 1 0 0 
				1    0 0 1 0 1 1 0 0 
				1    0 0 0 1 1 1 0 0 
				1    0 0 0 0 2 1 0 0 
				1    0 0 1 0 0 2 0 0 
				1    0 0 0 1 0 2 0 0 
				1    0 0 0 0 1 2 0 0 
				1    0 0 0 0 0 3 0 0 
				1    0 0 2 0 0 0 1 0 
				1    0 0 1 1 0 0 1 0 
				1    0 0 0 2 0 0 1 0 
				1    0 0 1 0 1 0 1 0 
				1    0 0 0 1 1 0 1 0 
				1    0 0 0 0 2 0 1 0 
				1    0 0 1 0 0 1 1 0 
				1    0 0 0 1 0 1 1 0 
				1    0 0 0 0 1 1 1 0 
				1    0 0 0 0 0 2 1 0 
				1    0 0 1 0 0 0 2 0 
				1    0 0 0 1 0 0 2 0 
				1    0 0 0 0 1 0 2 0 
				1    0 0 0 0 0 1 2 0 
				1    0 0 0 0 0 0 3 0 
				1    0 0 2 0 0 0 0 1 
				1    0 0 1 1 0 0 0 1 
				1    0 0 0 2 0 0 0 1 
				1    0 0 1 0 1 0 0 1 
				1    0 0 0 1 1 0 0 1 
				1    0 0 0 0 2 0 0 1 
				1    0 0 1 0 0 1 0 1 
				1    0 0 0 1 0 1 0 1 
				1    0 0 0 0 1 1 0 1 
				1    0 0 0 0 0 2 0 1 
				1    0 0 1 0 0 0 1 1 
				1    0 0 0 1 0 0 1 1 
				1    0 0 0 0 1 0 1 1 
				1    0 0 0 0 0 1 1 1 
				1    0 0 0 0 0 0 2 1 
				1    0 0 1 0 0 0 0 2 
				1    0 0 0 1 0 0 0 2 
				1    0 0 0 0 1 0 0 2 
				1    0 0 0 0 0 1 0 2 
				1    0 0 0 0 0 0 1 2 
				1    0 0 0 0 0 0 0 3 
				-8    0 0 2 0 0 0 0 0 
				-8    0 0 1 1 0 0 0 0 
				-8    0 0 0 2 0 0 0 0 
				-8    0 0 1 0 1 0 0 0 
				-8    0 0 0 1 1 0 0 0 
				-8    0 0 0 0 2 0 0 0 
				-8    0 0 1 0 0 1 0 0 
				-8    0 0 0 1 0 1 0 0 
				-8    0 0 0 0 1 1 0 0 
				-8    0 0 0 0 0 2 0 0 
				-8    0 0 1 0 0 0 1 0 
				-8    0 0 0 1 0 0 1 0 
				-8    0 0 0 0 1 0 1 0 
				-8    0 0 0 0 0 1 1 0 
				-8    0 0 0 0 0 0 2 0 
				-8    0 0 1 0 0 0 0 1 
				-8    0 0 0 1 0 0 0 1 
				-8    0 0 0 0 1 0 0 1 
				-8    0 0 0 0 0 1 0 1 
				-8    0 0 0 0 0 0 1 1 
				-8    0 0 0 0 0 0 0 2 
				28    0 0 1 0 0 0 0 0 
				28    0 0 0 1 0 0 0 0 
				28    0 0 0 0 1 0 0 0 
				28    0 0 0 0 0 1 0 0 
				28    0 0 0 0 0 0 1 0 
				28    0 0 0 0 0 0 0 1 
				-54    0 0 0 0 0 0 0 0 
				
				36
				1    0 2 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 
				1    0 0 2 0 0 0 0 0 
				1    0 1 0 1 0 0 0 0 
				1    0 0 1 1 0 0 0 0 
				1    0 0 0 2 0 0 0 0 
				1    0 1 0 0 1 0 0 0 
				1    0 0 1 0 1 0 0 0 
				1    0 0 0 1 1 0 0 0 
				1    0 0 0 0 2 0 0 0 
				1    0 1 0 0 0 1 0 0 
				1    0 0 1 0 0 1 0 0 
				1    0 0 0 1 0 1 0 0 
				1    0 0 0 0 1 1 0 0 
				1    0 0 0 0 0 2 0 0 
				1    0 1 0 0 0 0 1 0 
				1    0 0 1 0 0 0 1 0 
				1    0 0 0 1 0 0 1 0 
				1    0 0 0 0 1 0 1 0 
				1    0 0 0 0 0 1 1 0 
				1    0 0 0 0 0 0 2 0 
				1    0 1 0 0 0 0 0 1 
				1    0 0 1 0 0 0 0 1 
				1    0 0 0 1 0 0 0 1 
				1    0 0 0 0 1 0 0 1 
				1    0 0 0 0 0 1 0 1 
				1    0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 0 2 
				-8    0 1 0 0 0 0 0 0 
				-8    0 0 1 0 0 0 0 0 
				-8    0 0 0 1 0 0 0 0 
				-8    0 0 0 0 1 0 0 0 
				-8    0 0 0 0 0 1 0 0 
				-8    0 0 0 0 0 0 1 0 
				-8    0 0 0 0 0 0 0 1 
				28    0 0 0 0 0 0 0 0 
				
				9
				1    1 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 1 
				-8    0 0 0 0 0 0 0 0 
				
				34
				1008    0 0 0 0 0 0 6 1 
				2688    0 0 0 0 0 0 5 2 
				4032    0 0 0 0 0 0 4 3 
				4032    0 0 0 0 0 0 3 4 
				2688    0 0 0 0 0 0 2 5 
				1008    0 0 0 0 0 0 1 6 
				-1008    0 0 0 0 0 0 6 0 
				-11424    0 0 0 0 0 0 5 1 
				-25536    0 0 0 0 0 0 4 2 
				-32256    0 0 0 0 0 0 3 3 
				-25536    0 0 0 0 0 0 2 4 
				-11424    0 0 0 0 0 0 1 5 
				-1008    0 0 0 0 0 0 0 6 
				8736    0 0 0 0 0 0 5 0 
				54096    0 0 0 0 0 0 4 1 
				99456    0 0 0 0 0 0 3 2 
				99456    0 0 0 0 0 0 2 3 
				54096    0 0 0 0 0 0 1 4 
				8736    0 0 0 0 0 0 0 5 
				-31428    0 0 0 0 0 0 4 0 
				-133488    0 0 0 0 0 0 3 1 
				-191808    0 0 0 0 0 0 2 2 
				-133488    0 0 0 0 0 0 1 3 
				-31428    0 0 0 0 0 0 0 4 
				58440    0 0 0 0 0 0 3 0 
				180912    0 0 0 0 0 0 2 1 
				180912    0 0 0 0 0 0 1 2 
				58440    0 0 0 0 0 0 0 3 
				-63708    0 0 0 0 0 0 2 0 
				-130992    0 0 0 0 0 0 1 1 
				-63708    0 0 0 0 0 0 0 2 
				39792    0 0 0 0 0 0 1 0 
				39792    0 0 0 0 0 0 0 1 
				-8232    0 0 0 0 0 0 0 0 
				
				41
				96    0 0 0 0 0 0 6 2 
				432    0 0 0 0 0 0 5 3 
				1104    0 0 0 0 0 0 4 4 
				1776    0 0 0 0 0 0 3 5 
				1776    0 0 0 0 0 0 2 6 
				1008    0 0 0 0 0 0 1 7 
				-192    0 0 0 0 0 0 6 1 
				-1872    0 0 0 0 0 0 5 2 
				-6576    0 0 0 0 0 0 4 3 
				-13296    0 0 0 0 0 0 3 4 
				-15984    0 0 0 0 0 0 2 5 
				-10608    0 0 0 0 0 0 1 6 
				-1008    0 0 0 0 0 0 0 7 
				96    0 0 0 0 0 0 6 0 
				2448    0 0 0 0 0 0 5 1 
				14544    0 0 0 0 0 0 4 2 
				39744    0 0 0 0 0 0 3 3 
				59904    0 0 0 0 0 0 2 4 
				47808    0 0 0 0 0 0 1 5 
				8832    0 0 0 0 0 0 0 6 
				-956    0 0 0 0 0 0 5 0 
				-13268    0 0 0 0 0 0 4 1 
				-57008    0 0 0 0 0 0 3 2 
				-115328    0 0 0 0 0 0 2 3 
				-115328    0 0 0 0 0 0 1 4 
				-32384    0 0 0 0 0 0 0 5 
				4168    0 0 0 0 0 0 4 0 
				38824    0 0 0 0 0 0 3 1 
				120472    0 0 0 0 0 0 2 2 
				161296    0 0 0 0 0 0 1 3 
				62608    0 0 0 0 0 0 0 4 
				-10020    0 0 0 0 0 0 3 0 
				-65220    0 0 0 0 0 0 2 1 
				-132504    0 0 0 0 0 0 1 2 
				-73728    0 0 0 0 0 0 0 3 
				14856    0 0 0 0 0 0 2 0 
				61848    0 0 0 0 0 0 1 1 
				54648    0 0 0 0 0 0 0 2 
				-10292    0 0 0 0 0 0 1 0 
				-18524    0 0 0 0 0 0 0 1 
				2376    0 0 0 0 0 0 0 0 
				
				122
				180    0 0 0 0 4 1 0 0 
				360    0 0 0 0 3 2 0 0 
				360    0 0 0 0 2 3 0 0 
				180    0 0 0 0 1 4 0 0 
				30    0 0 0 0 4 0 1 0 
				240    0 0 0 0 3 1 1 0 
				360    0 0 0 0 2 2 1 0 
				240    0 0 0 0 1 3 1 0 
				30    0 0 0 0 0 4 1 0 
				42    0 0 0 0 3 0 2 0 
				210    0 0 0 0 2 1 2 0 
				210    0 0 0 0 1 2 2 0 
				42    0 0 0 0 0 3 2 0 
				42    0 0 0 0 2 0 3 0 
				132    0 0 0 0 1 1 3 0 
				42    0 0 0 0 0 2 3 0 
				30    0 0 0 0 1 0 4 0 
				30    0 0 0 0 0 1 4 0 
				30    0 0 0 0 4 0 0 1 
				240    0 0 0 0 3 1 0 1 
				360    0 0 0 0 2 2 0 1 
				240    0 0 0 0 1 3 0 1 
				30    0 0 0 0 0 4 0 1 
				132    0 0 0 0 3 0 1 1 
				444    0 0 0 0 2 1 1 1 
				444    0 0 0 0 1 2 1 1 
				132    0 0 0 0 0 3 1 1 
				210    0 0 0 0 2 0 2 1 
				444    0 0 0 0 1 1 2 1 
				210    0 0 0 0 0 2 2 1 
				240    0 0 0 0 1 0 3 1 
				240    0 0 0 0 0 1 3 1 
				180    0 0 0 0 0 0 4 1 
				42    0 0 0 0 3 0 0 2 
				210    0 0 0 0 2 1 0 2 
				210    0 0 0 0 1 2 0 2 
				42    0 0 0 0 0 3 0 2 
				210    0 0 0 0 2 0 1 2 
				444    0 0 0 0 1 1 1 2 
				210    0 0 0 0 0 2 1 2 
				360    0 0 0 0 1 0 2 2 
				360    0 0 0 0 0 1 2 2 
				360    0 0 0 0 0 0 3 2 
				42    0 0 0 0 2 0 0 3 
				132    0 0 0 0 1 1 0 3 
				42    0 0 0 0 0 2 0 3 
				240    0 0 0 0 1 0 1 3 
				240    0 0 0 0 0 1 1 3 
				360    0 0 0 0 0 0 2 3 
				30    0 0 0 0 1 0 0 4 
				30    0 0 0 0 0 1 0 4 
				180    0 0 0 0 0 0 1 4 
				-240    0 0 0 0 4 0 0 0 
				-1920    0 0 0 0 3 1 0 0 
				-2880    0 0 0 0 2 2 0 0 
				-1920    0 0 0 0 1 3 0 0 
				-240    0 0 0 0 0 4 0 0 
				-576    0 0 0 0 3 0 1 0 
				-2304    0 0 0 0 2 1 1 0 
				-2304    0 0 0 0 1 2 1 0 
				-576    0 0 0 0 0 3 1 0 
				-672    0 0 0 0 2 0 2 0 
				-1680    0 0 0 0 1 1 2 0 
				-672    0 0 0 0 0 2 2 0 
				-576    0 0 0 0 1 0 3 0 
				-576    0 0 0 0 0 1 3 0 
				-240    0 0 0 0 0 0 4 0 
				-576    0 0 0 0 3 0 0 1 
				-2304    0 0 0 0 2 1 0 1 
				-2304    0 0 0 0 1 2 0 1 
				-576    0 0 0 0 0 3 0 1 
				-1680    0 0 0 0 2 0 1 1 
				-3552    0 0 0 0 1 1 1 1 
				-1680    0 0 0 0 0 2 1 1 
				-2304    0 0 0 0 1 0 2 1 
				-2304    0 0 0 0 0 1 2 1 
				-1920    0 0 0 0 0 0 3 1 
				-672    0 0 0 0 2 0 0 2 
				-1680    0 0 0 0 1 1 0 2 
				-672    0 0 0 0 0 2 0 2 
				-2304    0 0 0 0 1 0 1 2 
				-2304    0 0 0 0 0 1 1 2 
				-2880    0 0 0 0 0 0 2 2 
				-576    0 0 0 0 1 0 0 3 
				-576    0 0 0 0 0 1 0 3 
				-1920    0 0 0 0 0 0 1 3 
				-240    0 0 0 0 0 0 0 4 
				2016    0 0 0 0 3 0 0 0 
				8064    0 0 0 0 2 1 0 0 
				8064    0 0 0 0 1 2 0 0 
				2016    0 0 0 0 0 3 0 0 
				3528    0 0 0 0 2 0 1 0 
				8064    0 0 0 0 1 1 1 0 
				3528    0 0 0 0 0 2 1 0 
				3528    0 0 0 0 1 0 2 0 
				3528    0 0 0 0 0 1 2 0 
				2016    0 0 0 0 0 0 3 0 
				3528    0 0 0 0 2 0 0 1 
				8064    0 0 0 0 1 1 0 1 
				3528    0 0 0 0 0 2 0 1 
				8064    0 0 0 0 1 0 1 1 
				8064    0 0 0 0 0 1 1 1 
				8064    0 0 0 0 0 0 2 1 
				3528    0 0 0 0 1 0 0 2 
				3528    0 0 0 0 0 1 0 2 
				8064    0 0 0 0 0 0 1 2 
				2016    0 0 0 0 0 0 0 3 
				-6804    0 0 0 0 2 0 0 0 
				-15552    0 0 0 0 1 1 0 0 
				-6804    0 0 0 0 0 2 0 0 
				-9720    0 0 0 0 1 0 1 0 
				-9720    0 0 0 0 0 1 1 0 
				-6804    0 0 0 0 0 0 2 0 
				-9720    0 0 0 0 1 0 0 1 
				-9720    0 0 0 0 0 1 0 1 
				-15552    0 0 0 0 0 0 1 1 
				-6804    0 0 0 0 0 0 0 2 
				10836    0 0 0 0 1 0 0 0 
				10836    0 0 0 0 0 1 0 0 
				10836    0 0 0 0 0 0 1 0 
				10836    0 0 0 0 0 0 0 1 
				-7560    0 0 0 0 0 0 0 0 
				
				204
				48    0 0 0 0 4 2 0 0 
				148    0 0 0 0 3 3 0 0 
				228    0 0 0 0 2 4 0 0 
				180    0 0 0 0 1 5 0 0 
				16    0 0 0 0 4 1 1 0 
				106    0 0 0 0 3 2 1 0 
				226    0 0 0 0 2 3 1 0 
				226    0 0 0 0 1 4 1 0 
				30    0 0 0 0 0 5 1 0 
				4    0 0 0 0 4 0 2 0 
				42    0 0 0 0 3 1 2 0 
				154    0 0 0 0 2 2 2 0 
				210    0 0 0 0 1 3 2 0 
				46    0 0 0 0 0 4 2 0 
				12    0 0 0 0 3 0 3 0 
				76    0 0 0 0 2 1 3 0 
				166    0 0 0 0 1 2 3 0 
				54    0 0 0 0 0 3 3 0 
				28    0 0 0 0 2 0 4 0 
				110    0 0 0 0 1 1 4 0 
				58    0 0 0 0 0 2 4 0 
				60    0 0 0 0 1 0 5 0 
				60    0 0 0 0 0 1 5 0 
				72    0 0 0 0 0 0 6 0 
				16    0 0 0 0 4 1 0 1 
				106    0 0 0 0 3 2 0 1 
				226    0 0 0 0 2 3 0 1 
				226    0 0 0 0 1 4 0 1 
				30    0 0 0 0 0 5 0 1 
				8    0 0 0 0 4 0 1 1 
				88    0 0 0 0 3 1 1 1 
				296    0 0 0 0 2 2 1 1 
				400    0 0 0 0 1 3 1 1 
				140    0 0 0 0 0 4 1 1 
				34    0 0 0 0 3 0 2 1 
				218    0 0 0 0 2 1 2 1 
				452    0 0 0 0 1 2 2 1 
				244    0 0 0 0 0 3 2 1 
				96    0 0 0 0 2 0 3 1 
				388    0 0 0 0 1 1 3 1 
				336    0 0 0 0 0 2 3 1 
				238    0 0 0 0 1 0 4 1 
				418    0 0 0 0 0 1 4 1 
				504    0 0 0 0 0 0 5 1 
				4    0 0 0 0 4 0 0 2 
				42    0 0 0 0 3 1 0 2 
				154    0 0 0 0 2 2 0 2 
				210    0 0 0 0 1 3 0 2 
				46    0 0 0 0 0 4 0 2 
				34    0 0 0 0 3 0 1 2 
				218    0 0 0 0 2 1 1 2 
				452    0 0 0 0 1 2 1 2 
				244    0 0 0 0 0 3 1 2 
				136    0 0 0 0 2 0 2 2 
				548    0 0 0 0 1 1 2 2 
				496    0 0 0 0 0 2 2 2 
				418    0 0 0 0 1 0 3 2 
				778    0 0 0 0 0 1 3 2 
				1092    0 0 0 0 0 0 4 2 
				12    0 0 0 0 3 0 0 3 
				76    0 0 0 0 2 1 0 3 
				166    0 0 0 0 1 2 0 3 
				54    0 0 0 0 0 3 0 3 
				96    0 0 0 0 2 0 1 3 
				388    0 0 0 0 1 1 1 3 
				336    0 0 0 0 0 2 1 3 
				418    0 0 0 0 1 0 2 3 
				778    0 0 0 0 0 1 2 3 
				1372    0 0 0 0 0 0 3 3 
				28    0 0 0 0 2 0 0 4 
				110    0 0 0 0 1 1 0 4 
				58    0 0 0 0 0 2 0 4 
				238    0 0 0 0 1 0 1 4 
				418    0 0 0 0 0 1 1 4 
				1092    0 0 0 0 0 0 2 4 
				60    0 0 0 0 1 0 0 5 
				60    0 0 0 0 0 1 0 5 
				504    0 0 0 0 0 0 1 5 
				72    0 0 0 0 0 0 0 6 
				-128    0 0 0 0 4 1 0 0 
				-848    0 0 0 0 3 2 0 0 
				-1808    0 0 0 0 2 3 0 0 
				-1808    0 0 0 0 1 4 0 0 
				-240    0 0 0 0 0 5 0 0 
				-32    0 0 0 0 4 0 1 0 
				-448    0 0 0 0 3 1 1 0 
				-1600    0 0 0 0 2 2 1 0 
				-2176    0 0 0 0 1 3 1 0 
				-608    0 0 0 0 0 4 1 0 
				-128    0 0 0 0 3 0 2 0 
				-880    0 0 0 0 2 1 2 0 
				-1888    0 0 0 0 1 2 2 0 
				-800    0 0 0 0 0 3 2 0 
				-320    0 0 0 0 2 0 3 0 
				-1312    0 0 0 0 1 1 3 0 
				-896    0 0 0 0 0 2 3 0 
				-704    0 0 0 0 1 0 4 0 
				-944    0 0 0 0 0 1 4 0 
				-1056    0 0 0 0 0 0 5 0 
				-32    0 0 0 0 4 0 0 1 
				-448    0 0 0 0 3 1 0 1 
				-1600    0 0 0 0 2 2 0 1 
				-2176    0 0 0 0 1 3 0 1 
				-608    0 0 0 0 0 4 0 1 
				-256    0 0 0 0 3 0 1 1 
				-1728    0 0 0 0 2 1 1 1 
				-3600    0 0 0 0 1 2 1 1 
				-1936    0 0 0 0 0 3 1 1 
				-880    0 0 0 0 2 0 2 1 
				-3600    0 0 0 0 1 1 2 1 
				-3184    0 0 0 0 0 2 2 1 
				-2368    0 0 0 0 1 0 3 1 
				-4288    0 0 0 0 0 1 3 1 
				-5360    0 0 0 0 0 0 4 1 
				-128    0 0 0 0 3 0 0 2 
				-880    0 0 0 0 2 1 0 2 
				-1888    0 0 0 0 1 2 0 2 
				-800    0 0 0 0 0 3 0 2 
				-880    0 0 0 0 2 0 1 2 
				-3600    0 0 0 0 1 1 1 2 
				-3184    0 0 0 0 0 2 1 2 
				-3328    0 0 0 0 1 0 2 2 
				-6208    0 0 0 0 0 1 2 2 
				-9680    0 0 0 0 0 0 3 2 
				-320    0 0 0 0 2 0 0 3 
				-1312    0 0 0 0 1 1 0 3 
				-896    0 0 0 0 0 2 0 3 
				-2368    0 0 0 0 1 0 1 3 
				-4288    0 0 0 0 0 1 1 3 
				-9680    0 0 0 0 0 0 2 3 
				-704    0 0 0 0 1 0 0 4 
				-944    0 0 0 0 0 1 0 4 
				-5360    0 0 0 0 0 0 1 4 
				-1056    0 0 0 0 0 0 0 5 
				96    0 0 0 0 4 0 0 0 
				1552    0 0 0 0 3 1 0 0 
				5584    0 0 0 0 2 2 0 0 
				7600    0 0 0 0 1 3 0 0 
				2112    0 0 0 0 0 4 0 0 
				544    0 0 0 0 3 0 1 0 
				4016    0 0 0 0 2 1 1 0 
				8552    0 0 0 0 1 2 1 0 
				4072    0 0 0 0 0 3 1 0 
				1552    0 0 0 0 2 0 2 0 
				6536    0 0 0 0 1 1 2 0 
				5080    0 0 0 0 0 2 2 0 
				3568    0 0 0 0 1 0 3 0 
				5584    0 0 0 0 0 1 3 0 
				6144    0 0 0 0 0 0 4 0 
				544    0 0 0 0 3 0 0 1 
				4016    0 0 0 0 2 1 0 1 
				8552    0 0 0 0 1 2 0 1 
				4072    0 0 0 0 0 3 0 1 
				3008    0 0 0 0 2 0 1 1 
				12528    0 0 0 0 1 1 1 1 
				11072    0 0 0 0 0 2 1 1 
				9560    0 0 0 0 1 0 2 1 
				17624    0 0 0 0 0 1 2 1 
				23728    0 0 0 0 0 0 3 1 
				1552    0 0 0 0 2 0 0 2 
				6536    0 0 0 0 1 1 0 2 
				5080    0 0 0 0 0 2 0 2 
				9560    0 0 0 0 1 0 1 2 
				17624    0 0 0 0 0 1 1 2 
				33808    0 0 0 0 0 0 2 2 
				3568    0 0 0 0 1 0 0 3 
				5584    0 0 0 0 0 1 0 3 
				23728    0 0 0 0 0 0 1 3 
				6144    0 0 0 0 0 0 0 4 
				-956    0 0 0 0 3 0 0 0 
				-7652    0 0 0 0 2 1 0 0 
				-16400    0 0 0 0 1 2 0 0 
				-7760    0 0 0 0 0 3 0 0 
				-3764    0 0 0 0 2 0 1 0 
				-16292    0 0 0 0 1 1 1 0 
				-13484    0 0 0 0 0 2 1 0 
				-9596    0 0 0 0 1 0 2 0 
				-16400    0 0 0 0 0 1 2 0 
				-18452    0 0 0 0 0 0 3 0 
				-3764    0 0 0 0 2 0 0 1 
				-16292    0 0 0 0 1 1 0 1 
				-13484    0 0 0 0 0 2 0 1 
				-18236    0 0 0 0 1 0 1 1 
				-33788    0 0 0 0 0 1 1 1 
				-53336    0 0 0 0 0 0 2 1 
				-9596    0 0 0 0 1 0 0 2 
				-16400    0 0 0 0 0 1 0 2 
				-53336    0 0 0 0 0 0 1 2 
				-18452    0 0 0 0 0 0 0 3 
				4168    0 0 0 0 2 0 0 0 
				18696    0 0 0 0 1 1 0 0 
				15004    0 0 0 0 0 2 0 0 
				14232    0 0 0 0 1 0 1 0 
				25068    0 0 0 0 0 1 1 0 
				30952    0 0 0 0 0 0 2 0 
				14232    0 0 0 0 1 0 0 1 
				25068    0 0 0 0 0 1 0 1 
				61428    0 0 0 0 0 0 1 1 
				30952    0 0 0 0 0 0 0 2 
				-10020    0 0 0 0 1 0 0 0 
				-17580    0 0 0 0 0 1 0 0 
				-29316    0 0 0 0 0 0 1 0 
				-29316    0 0 0 0 0 0 0 1 
				13296    0 0 0 0 0 0 0 0 
				
				78
				24    0 0 2 1 0 0 0 0 
				24    0 0 1 2 0 0 0 0 
				6    0 0 2 0 1 0 0 0 
				24    0 0 1 1 1 0 0 0 
				6    0 0 0 2 1 0 0 0 
				6    0 0 1 0 2 0 0 0 
				6    0 0 0 1 2 0 0 0 
				6    0 0 2 0 0 1 0 0 
				24    0 0 1 1 0 1 0 0 
				6    0 0 0 2 0 1 0 0 
				24    0 0 1 0 1 1 0 0 
				24    0 0 0 1 1 1 0 0 
				24    0 0 0 0 2 1 0 0 
				6    0 0 1 0 0 2 0 0 
				6    0 0 0 1 0 2 0 0 
				24    0 0 0 0 1 2 0 0 
				6    0 0 2 0 0 0 1 0 
				24    0 0 1 1 0 0 1 0 
				6    0 0 0 2 0 0 1 0 
				12    0 0 1 0 1 0 1 0 
				12    0 0 0 1 1 0 1 0 
				6    0 0 0 0 2 0 1 0 
				12    0 0 1 0 0 1 1 0 
				12    0 0 0 1 0 1 1 0 
				24    0 0 0 0 1 1 1 0 
				6    0 0 0 0 0 2 1 0 
				6    0 0 1 0 0 0 2 0 
				6    0 0 0 1 0 0 2 0 
				6    0 0 0 0 1 0 2 0 
				6    0 0 0 0 0 1 2 0 
				6    0 0 2 0 0 0 0 1 
				24    0 0 1 1 0 0 0 1 
				6    0 0 0 2 0 0 0 1 
				12    0 0 1 0 1 0 0 1 
				12    0 0 0 1 1 0 0 1 
				6    0 0 0 0 2 0 0 1 
				12    0 0 1 0 0 1 0 1 
				12    0 0 0 1 0 1 0 1 
				24    0 0 0 0 1 1 0 1 
				6    0 0 0 0 0 2 0 1 
				24    0 0 1 0 0 0 1 1 
				24    0 0 0 1 0 0 1 1 
				24    0 0 0 0 1 0 1 1 
				24    0 0 0 0 0 1 1 1 
				24    0 0 0 0 0 0 2 1 
				6    0 0 1 0 0 0 0 2 
				6    0 0 0 1 0 0 0 2 
				6    0 0 0 0 1 0 0 2 
				6    0 0 0 0 0 1 0 2 
				24    0 0 0 0 0 0 1 2 
				-48    0 0 2 0 0 0 0 0 
				-192    0 0 1 1 0 0 0 0 
				-48    0 0 0 2 0 0 0 0 
				-96    0 0 1 0 1 0 0 0 
				-96    0 0 0 1 1 0 0 0 
				-48    0 0 0 0 2 0 0 0 
				-96    0 0 1 0 0 1 0 0 
				-96    0 0 0 1 0 1 0 0 
				-192    0 0 0 0 1 1 0 0 
				-48    0 0 0 0 0 2 0 0 
				-96    0 0 1 0 0 0 1 0 
				-96    0 0 0 1 0 0 1 0 
				-96    0 0 0 0 1 0 1 0 
				-96    0 0 0 0 0 1 1 0 
				-48    0 0 0 0 0 0 2 0 
				-96    0 0 1 0 0 0 0 1 
				-96    0 0 0 1 0 0 0 1 
				-96    0 0 0 0 1 0 0 1 
				-96    0 0 0 0 0 1 0 1 
				-192    0 0 0 0 0 0 1 1 
				-48    0 0 0 0 0 0 0 2 
				336    0 0 1 0 0 0 0 0 
				336    0 0 0 1 0 0 0 0 
				336    0 0 0 0 1 0 0 0 
				336    0 0 0 0 0 1 0 0 
				336    0 0 0 0 0 0 1 0 
				336    0 0 0 0 0 0 0 1 
				-648    0 0 0 0 0 0 0 0 
				
				202
				-8    0 0 2 2 0 0 0 0 
				-24    0 0 1 3 0 0 0 0 
				-4    0 0 2 1 1 0 0 0 
				-22    0 0 1 2 1 0 0 0 
				-6    0 0 0 3 1 0 0 0 
				4    0 0 2 0 2 0 0 0 
				-12    0 0 1 1 2 0 0 0 
				-2    0 0 0 2 2 0 0 0 
				6    0 0 1 0 3 0 0 0 
				6    0 0 0 1 3 0 0 0 
				38    0 0 0 0 4 0 0 0 
				-4    0 0 2 1 0 1 0 0 
				-22    0 0 1 2 0 1 0 0 
				-6    0 0 0 3 0 1 0 0 
				20    0 0 2 0 1 1 0 0 
				4    0 0 1 1 1 1 0 0 
				-4    0 0 0 2 1 1 0 0 
				46    0 0 1 0 2 1 0 0 
				22    0 0 0 1 2 1 0 0 
				100    0 0 0 0 3 1 0 0 
				4    0 0 2 0 0 2 0 0 
				-12    0 0 1 1 0 2 0 0 
				-2    0 0 0 2 0 2 0 0 
				46    0 0 1 0 1 2 0 0 
				22    0 0 0 1 1 2 0 0 
				140    0 0 0 0 2 2 0 0 
				6    0 0 1 0 0 3 0 0 
				6    0 0 0 1 0 3 0 0 
				100    0 0 0 0 1 3 0 0 
				38    0 0 0 0 0 4 0 0 
				-4    0 0 2 1 0 0 1 0 
				-22    0 0 1 2 0 0 1 0 
				-6    0 0 0 3 0 0 1 0 
				4    0 0 2 0 1 0 1 0 
				-12    0 0 1 1 1 0 1 0 
				-8    0 0 0 2 1 0 1 0 
				10    0 0 1 0 2 0 1 0 
				4    0 0 0 1 2 0 1 0 
				44    0 0 0 0 3 0 1 0 
				4    0 0 2 0 0 1 1 0 
				-12    0 0 1 1 0 1 1 0 
				-8    0 0 0 2 0 1 1 0 
				38    0 0 1 0 1 1 1 0 
				14    0 0 0 1 1 1 1 0 
				108    0 0 0 0 2 1 1 0 
				10    0 0 1 0 0 2 1 0 
				4    0 0 0 1 0 2 1 0 
				108    0 0 0 0 1 2 1 0 
				44    0 0 0 0 0 3 1 0 
				4    0 0 2 0 0 0 2 0 
				-12    0 0 1 1 0 0 2 0 
				-2    0 0 0 2 0 0 2 0 
				10    0 0 1 0 1 0 2 0 
				4    0 0 0 1 1 0 2 0 
				48    0 0 0 0 2 0 2 0 
				10    0 0 1 0 0 1 2 0 
				4    0 0 0 1 0 1 2 0 
				82    0 0 0 0 1 1 2 0 
				48    0 0 0 0 0 2 2 0 
				6    0 0 1 0 0 0 3 0 
				6    0 0 0 1 0 0 3 0 
				44    0 0 0 0 1 0 3 0 
				44    0 0 0 0 0 1 3 0 
				38    0 0 0 0 0 0 4 0 
				-4    0 0 2 1 0 0 0 1 
				-22    0 0 1 2 0 0 0 1 
				-6    0 0 0 3 0 0 0 1 
				4    0 0 2 0 1 0 0 1 
				-12    0 0 1 1 1 0 0 1 
				-8    0 0 0 2 1 0 0 1 
				10    0 0 1 0 2 0 0 1 
				4    0 0 0 1 2 0 0 1 
				44    0 0 0 0 3 0 0 1 
				4    0 0 2 0 0 1 0 1 
				-12    0 0 1 1 0 1 0 1 
				-8    0 0 0 2 0 1 0 1 
				38    0 0 1 0 1 1 0 1 
				14    0 0 0 1 1 1 0 1 
				108    0 0 0 0 2 1 0 1 
				10    0 0 1 0 0 2 0 1 
				4    0 0 0 1 0 2 0 1 
				108    0 0 0 0 1 2 0 1 
				44    0 0 0 0 0 3 0 1 
				20    0 0 2 0 0 0 1 1 
				4    0 0 1 1 0 0 1 1 
				-4    0 0 0 2 0 0 1 1 
				38    0 0 1 0 1 0 1 1 
				14    0 0 0 1 1 0 1 1 
				82    0 0 0 0 2 0 1 1 
				38    0 0 1 0 0 1 1 1 
				14    0 0 0 1 0 1 1 1 
				152    0 0 0 0 1 1 1 1 
				82    0 0 0 0 0 2 1 1 
				46    0 0 1 0 0 0 2 1 
				22    0 0 0 1 0 0 2 1 
				108    0 0 0 0 1 0 2 1 
				108    0 0 0 0 0 1 2 1 
				100    0 0 0 0 0 0 3 1 
				4    0 0 2 0 0 0 0 2 
				-12    0 0 1 1 0 0 0 2 
				-2    0 0 0 2 0 0 0 2 
				10    0 0 1 0 1 0 0 2 
				4    0 0 0 1 1 0 0 2 
				48    0 0 0 0 2 0 0 2 
				10    0 0 1 0 0 1 0 2 
				4    0 0 0 1 0 1 0 2 
				82    0 0 0 0 1 1 0 2 
				48    0 0 0 0 0 2 0 2 
				46    0 0 1 0 0 0 1 2 
				22    0 0 0 1 0 0 1 2 
				108    0 0 0 0 1 0 1 2 
				108    0 0 0 0 0 1 1 2 
				140    0 0 0 0 0 0 2 2 
				6    0 0 1 0 0 0 0 3 
				6    0 0 0 1 0 0 0 3 
				44    0 0 0 0 1 0 0 3 
				44    0 0 0 0 0 1 0 3 
				100    0 0 0 0 0 0 1 3 
				38    0 0 0 0 0 0 0 4 
				32    0 0 2 1 0 0 0 0 
				176    0 0 1 2 0 0 0 0 
				48    0 0 0 3 0 0 0 0 
				-32    0 0 2 0 1 0 0 0 
				96    0 0 1 1 1 0 0 0 
				64    0 0 0 2 1 0 0 0 
				-80    0 0 1 0 2 0 0 0 
				-32    0 0 0 1 2 0 0 0 
				-352    0 0 0 0 3 0 0 0 
				-32    0 0 2 0 0 1 0 0 
				96    0 0 1 1 0 1 0 0 
				64    0 0 0 2 0 1 0 0 
				-304    0 0 1 0 1 1 0 0 
				-112    0 0 0 1 1 1 0 0 
				-864    0 0 0 0 2 1 0 0 
				-80    0 0 1 0 0 2 0 0 
				-32    0 0 0 1 0 2 0 0 
				-864    0 0 0 0 1 2 0 0 
				-352    0 0 0 0 0 3 0 0 
				-32    0 0 2 0 0 0 1 0 
				96    0 0 1 1 0 0 1 0 
				64    0 0 0 2 0 0 1 0 
				-112    0 0 1 0 1 0 1 0 
				-16    0 0 0 1 1 0 1 0 
				-432    0 0 0 0 2 0 1 0 
				-112    0 0 1 0 0 1 1 0 
				-16    0 0 0 1 0 1 1 0 
				-800    0 0 0 0 1 1 1 0 
				-432    0 0 0 0 0 2 1 0 
				-80    0 0 1 0 0 0 2 0 
				-32    0 0 0 1 0 0 2 0 
				-432    0 0 0 0 1 0 2 0 
				-432    0 0 0 0 0 1 2 0 
				-352    0 0 0 0 0 0 3 0 
				-32    0 0 2 0 0 0 0 1 
				96    0 0 1 1 0 0 0 1 
				64    0 0 0 2 0 0 0 1 
				-112    0 0 1 0 1 0 0 1 
				-16    0 0 0 1 1 0 0 1 
				-432    0 0 0 0 2 0 0 1 
				-112    0 0 1 0 0 1 0 1 
				-16    0 0 0 1 0 1 0 1 
				-800    0 0 0 0 1 1 0 1 
				-432    0 0 0 0 0 2 0 1 
				-304    0 0 1 0 0 0 1 1 
				-112    0 0 0 1 0 0 1 1 
				-800    0 0 0 0 1 0 1 1 
				-800    0 0 0 0 0 1 1 1 
				-864    0 0 0 0 0 0 2 1 
				-80    0 0 1 0 0 0 0 2 
				-32    0 0 0 1 0 0 0 2 
				-432    0 0 0 0 1 0 0 2 
				-432    0 0 0 0 0 1 0 2 
				-864    0 0 0 0 0 0 1 2 
				-352    0 0 0 0 0 0 0 3 
				48    0 0 2 0 0 0 0 0 
				-400    0 0 1 1 0 0 0 0 
				-288    0 0 0 2 0 0 0 0 
				328    0 0 1 0 1 0 0 0 
				-8    0 0 0 1 1 0 0 0 
				1448    0 0 0 0 2 0 0 0 
				328    0 0 1 0 0 1 0 0 
				-8    0 0 0 1 0 1 0 0 
				2736    0 0 0 0 1 1 0 0 
				1448    0 0 0 0 0 2 0 0 
				328    0 0 1 0 0 0 1 0 
				-8    0 0 0 1 0 0 1 0 
				1728    0 0 0 0 1 0 1 0 
				1728    0 0 0 0 0 1 1 0 
				1448    0 0 0 0 0 0 2 0 
				328    0 0 1 0 0 0 0 1 
				-8    0 0 0 1 0 0 0 1 
				1728    0 0 0 0 1 0 0 1 
				1728    0 0 0 0 0 1 0 1 
				2736    0 0 0 0 0 0 1 1 
				1448    0 0 0 0 0 0 0 2 
				-260    0 0 1 0 0 0 0 0 
				388    0 0 0 1 0 0 0 0 
				-2960    0 0 0 0 1 0 0 0 
				-2960    0 0 0 0 0 1 0 0 
				-2960    0 0 0 0 0 0 1 0 
				-2960    0 0 0 0 0 0 0 1 
				2712    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>eco10</ID>
            <Name>Eco10</Name>
            <Description>\textbf{Title}: n-dimensional economics problem</Description>
            <References>\begin{itemize} \item Alexander Morgan. `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}</References>
            <Notes>Transform $u = 1/x_n$ and the total degree equals the number of solutions. See the reduced economics problem, in the file redeco.</Notes>
            <Variables>x,y,z,w,u,v,r,s,t,p</Variables>
            <TagsList>DevRevLex, DegLex, Lex, eco10, with_10_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_10_vars</TestEnvironment>
            <Equations>
            x*p*y+x*p+p*y*z+p*z*w+p*w*u+p*u*v+p*v*r+p*r*s+p*s*t-1,x*p*z+p*y*w+p*y+p*z*u+p*w*v+p*u*r+p*v*s+p*r*t-2,x*p*w+p*y*u+p*z*v+p*z+p*w*r+p*u*s+p*v*t-3,x*p*u+p*y*v+p*z*r+p*w*s+p*w+p*u*t-4,x*p*v+p*y*r+p*z*s+p*w*t+p*u-5,x*p*r+p*y*s+p*z*t+p*v-6,x*p*s+p*y*t+p*r-7,x*p*t+p*s-8,p*t-9,x+y+z+w+u+v+r+s+t+1</Equations>
            <GBasisLen>203</GBasisLen>
            <HilbertPolynomial>256</HilbertPolynomial>
            <Polynomials>
				10
				
				10
				1    1 1 0 0 0 0 0 0 0 1 
				1    0 1 1 0 0 0 0 0 0 1 
				1    0 0 1 1 0 0 0 0 0 1 
				1    0 0 0 1 1 0 0 0 0 1 
				1    0 0 0 0 1 1 0 0 0 1 
				1    0 0 0 0 0 1 1 0 0 1 
				1    0 0 0 0 0 0 1 1 0 1 
				1    0 0 0 0 0 0 0 1 1 1 
				1    1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				9
				1    1 0 1 0 0 0 0 0 0 1 
				1    0 1 0 1 0 0 0 0 0 1 
				1    0 0 1 0 1 0 0 0 0 1 
				1    0 0 0 1 0 1 0 0 0 1 
				1    0 0 0 0 1 0 1 0 0 1 
				1    0 0 0 0 0 1 0 1 0 1 
				1    0 0 0 0 0 0 1 0 1 1 
				1    0 1 0 0 0 0 0 0 0 1 
				-2    0 0 0 0 0 0 0 0 0 0 
				
				8
				1    1 0 0 1 0 0 0 0 0 1 
				1    0 1 0 0 1 0 0 0 0 1 
				1    0 0 1 0 0 1 0 0 0 1 
				1    0 0 0 1 0 0 1 0 0 1 
				1    0 0 0 0 1 0 0 1 0 1 
				1    0 0 0 0 0 1 0 0 1 1 
				1    0 0 1 0 0 0 0 0 0 1 
				-3    0 0 0 0 0 0 0 0 0 0 
				
				7
				1    1 0 0 0 1 0 0 0 0 1 
				1    0 1 0 0 0 1 0 0 0 1 
				1    0 0 1 0 0 0 1 0 0 1 
				1    0 0 0 1 0 0 0 1 0 1 
				1    0 0 0 0 1 0 0 0 1 1 
				1    0 0 0 1 0 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 0 0 
				
				6
				1    1 0 0 0 0 1 0 0 0 1 
				1    0 1 0 0 0 0 1 0 0 1 
				1    0 0 1 0 0 0 0 1 0 1 
				1    0 0 0 1 0 0 0 0 1 1 
				1    0 0 0 0 1 0 0 0 0 1 
				-5    0 0 0 0 0 0 0 0 0 0 
				
				5
				1    1 0 0 0 0 0 1 0 0 1 
				1    0 1 0 0 0 0 0 1 0 1 
				1    0 0 1 0 0 0 0 0 1 1 
				1    0 0 0 0 0 1 0 0 0 1 
				-6    0 0 0 0 0 0 0 0 0 0 
				
				4
				1    1 0 0 0 0 0 0 1 0 1 
				1    0 1 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 1 0 0 1 
				-7    0 0 0 0 0 0 0 0 0 0 
				
				3
				1    1 0 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 0 1 0 1 
				-8    0 0 0 0 0 0 0 0 0 0 
				
				2
				1    0 0 0 0 0 0 0 0 1 1 
				-9    0 0 0 0 0 0 0 0 0 0 
				
				10
				1    1 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>eco11</ID>
            <Name>Eco11</Name>
            <Description>\textbf{Title}: n-dimensional economics problem</Description>
            <References>\begin{itemize} \item Alexander Morgan. `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}</References>
            <Notes>Transform $u = 1/x_n$ and the total degree equals the number of solutions. See the reduced economics problem, in the file redeco.</Notes>
            <Variables>x[1..11]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, eco11, with_11_vars</TagsList>
            <TestEnvironment>rings_with_11_vars</TestEnvironment>
            <Equations>
            x[1]*x[11]*x[2]+x[1]*x[11]+x[10]*x[11]*x[9]+x[11]*x[2]*x[3]+x[11]*x[3]*x[4]+x[11]*x[4]*x[5]+x[11]*x[5]*x[6]+x[11]*x[6]*x[7]+x[11]*x[7]*x[8]+x[11]*x[8]*x[9]-1,x[1]*x[11]*x[3]+x[10]*x[11]*x[8]+x[11]*x[2]*x[4]+x[11]*x[2]+x[11]*x[3]*x[5]+x[11]*x[4]*x[6]+x[11]*x[5]*x[7]+x[11]*x[6]*x[8]+x[11]*x[7]*x[9]-2,x[1]*x[11]*x[4]+x[10]*x[11]*x[7]+x[11]*x[2]*x[5]+x[11]*x[3]*x[6]+x[11]*x[3]+x[11]*x[4]*x[7]+x[11]*x[5]*x[8]+x[11]*x[6]*x[9]-3,x[1]*x[11]*x[5]+x[10]*x[11]*x[6]+x[11]*x[2]*x[6]+x[11]*x[3]*x[7]+x[11]*x[4]*x[8]+x[11]*x[4]+x[11]*x[5]*x[9]-4,x[1]*x[11]*x[6]+x[10]*x[11]*x[5]+x[11]*x[2]*x[7]+x[11]*x[3]*x[8]+x[11]*x[4]*x[9]+x[11]*x[5]-5,x[1]*x[11]*x[7]+x[10]*x[11]*x[4]+x[11]*x[2]*x[8]+x[11]*x[3]*x[9]+x[11]*x[6]-6,x[1]*x[11]*x[8]+x[10]*x[11]*x[3]+x[11]*x[2]*x[9]+x[11]*x[7]-7,x[1]*x[11]*x[9]+x[10]*x[11]*x[2]+x[11]*x[8]-8,x[1]*x[10]*x[11]+x[11]*x[9]-9,x[10]*x[11]-10,x[1]+x[10]+x[2]+x[3]+x[4]+x[5]+x[6]+x[7]+x[8]+x[9]+1</Equations>
            <GBasisLen>389</GBasisLen>
            <HilbertPolynomial>512</HilbertPolynomial>
            <Polynomials>
				11
				
				11
				1    1 1 0 0 0 0 0 0 0 0 1 
				1    0 1 1 0 0 0 0 0 0 0 1 
				1    0 0 1 1 0 0 0 0 0 0 1 
				1    0 0 0 1 1 0 0 0 0 0 1 
				1    0 0 0 0 1 1 0 0 0 0 1 
				1    0 0 0 0 0 1 1 0 0 0 1 
				1    0 0 0 0 0 0 1 1 0 0 1 
				1    0 0 0 0 0 0 0 1 1 0 1 
				1    0 0 0 0 0 0 0 0 1 1 1 
				1    1 0 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 
				
				10
				1    1 0 1 0 0 0 0 0 0 0 1 
				1    0 1 0 1 0 0 0 0 0 0 1 
				1    0 0 1 0 1 0 0 0 0 0 1 
				1    0 0 0 1 0 1 0 0 0 0 1 
				1    0 0 0 0 1 0 1 0 0 0 1 
				1    0 0 0 0 0 1 0 1 0 0 1 
				1    0 0 0 0 0 0 1 0 1 0 1 
				1    0 0 0 0 0 0 0 1 0 1 1 
				1    0 1 0 0 0 0 0 0 0 0 1 
				-2    0 0 0 0 0 0 0 0 0 0 0 
				
				9
				1    1 0 0 1 0 0 0 0 0 0 1 
				1    0 1 0 0 1 0 0 0 0 0 1 
				1    0 0 1 0 0 1 0 0 0 0 1 
				1    0 0 0 1 0 0 1 0 0 0 1 
				1    0 0 0 0 1 0 0 1 0 0 1 
				1    0 0 0 0 0 1 0 0 1 0 1 
				1    0 0 0 0 0 0 1 0 0 1 1 
				1    0 0 1 0 0 0 0 0 0 0 1 
				-3    0 0 0 0 0 0 0 0 0 0 0 
				
				8
				1    1 0 0 0 1 0 0 0 0 0 1 
				1    0 1 0 0 0 1 0 0 0 0 1 
				1    0 0 1 0 0 0 1 0 0 0 1 
				1    0 0 0 1 0 0 0 1 0 0 1 
				1    0 0 0 0 1 0 0 0 1 0 1 
				1    0 0 0 0 0 1 0 0 0 1 1 
				1    0 0 0 1 0 0 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 0 0 0 
				
				7
				1    1 0 0 0 0 1 0 0 0 0 1 
				1    0 1 0 0 0 0 1 0 0 0 1 
				1    0 0 1 0 0 0 0 1 0 0 1 
				1    0 0 0 1 0 0 0 0 1 0 1 
				1    0 0 0 0 1 0 0 0 0 1 1 
				1    0 0 0 0 1 0 0 0 0 0 1 
				-5    0 0 0 0 0 0 0 0 0 0 0 
				
				6
				1    1 0 0 0 0 0 1 0 0 0 1 
				1    0 1 0 0 0 0 0 1 0 0 1 
				1    0 0 1 0 0 0 0 0 1 0 1 
				1    0 0 0 1 0 0 0 0 0 1 1 
				1    0 0 0 0 0 1 0 0 0 0 1 
				-6    0 0 0 0 0 0 0 0 0 0 0 
				
				5
				1    1 0 0 0 0 0 0 1 0 0 1 
				1    0 1 0 0 0 0 0 0 1 0 1 
				1    0 0 1 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 1 0 0 0 1 
				-7    0 0 0 0 0 0 0 0 0 0 0 
				
				4
				1    1 0 0 0 0 0 0 0 1 0 1 
				1    0 1 0 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 0 1 0 0 1 
				-8    0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    1 0 0 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 0 0 1 0 1 
				-9    0 0 0 0 0 0 0 0 0 0 0 
				
				2
				1    0 0 0 0 0 0 0 0 0 1 1 
				-10    0 0 0 0 0 0 0 0 0 0 0 
				
				11
				1    1 0 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>eco12</ID>
            <Name>Eco12</Name>
            <Description>\textbf{Title}: n-dimensional economics problem</Description>
            <References>\begin{itemize} \item Alexander Morgan. `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}</References>
            <Notes>Transform $u = 1/x_n$ and the total degree equals the number of solutions. See the reduced economics problem, in the file redeco.</Notes>
            <Variables>x[1..12]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, eco12, with_12_vars</TagsList>
            <TestEnvironment>rings_with_12_vars</TestEnvironment>
            <Equations>
            x[1]*x[12]*x[2]+x[1]*x[12]+x[10]*x[11]*x[12]+x[10]*x[12]*x[9]+x[12]*x[2]*x[3]+x[12]*x[3]*x[4]+x[12]*x[4]*x[5]+x[12]*x[5]*x[6]+x[12]*x[6]*x[7]+x[12]*x[7]*x[8]+x[12]*x[8]*x[9]-1,x[1]*x[12]*x[3]+x[10]*x[12]*x[8]+x[11]*x[12]*x[9]+x[12]*x[2]*x[4]+x[12]*x[2]+x[12]*x[3]*x[5]+x[12]*x[4]*x[6]+x[12]*x[5]*x[7]+x[12]*x[6]*x[8]+x[12]*x[7]*x[9]-2,x[1]*x[12]*x[4]+x[10]*x[12]*x[7]+x[11]*x[12]*x[8]+x[12]*x[2]*x[5]+x[12]*x[3]*x[6]+x[12]*x[3]+x[12]*x[4]*x[7]+x[12]*x[5]*x[8]+x[12]*x[6]*x[9]-3,x[1]*x[12]*x[5]+x[10]*x[12]*x[6]+x[11]*x[12]*x[7]+x[12]*x[2]*x[6]+x[12]*x[3]*x[7]+x[12]*x[4]*x[8]+x[12]*x[4]+x[12]*x[5]*x[9]-4,x[1]*x[12]*x[6]+x[10]*x[12]*x[5]+x[11]*x[12]*x[6]+x[12]*x[2]*x[7]+x[12]*x[3]*x[8]+x[12]*x[4]*x[9]+x[12]*x[5]-5,x[1]*x[12]*x[7]+x[10]*x[12]*x[4]+x[11]*x[12]*x[5]+x[12]*x[2]*x[8]+x[12]*x[3]*x[9]+x[12]*x[6]-6,x[1]*x[12]*x[8]+x[10]*x[12]*x[3]+x[11]*x[12]*x[4]+x[12]*x[2]*x[9]+x[12]*x[7]-7,x[1]*x[12]*x[9]+x[10]*x[12]*x[2]+x[11]*x[12]*x[3]+x[12]*x[8]-8,x[1]*x[10]*x[12]+x[11]*x[12]*x[2]+x[12]*x[9]-9,x[1]*x[11]*x[12]+x[10]*x[12]-10,x[11]*x[12]-11,x[1]+x[10]+x[11]+x[2]+x[3]+x[4]+x[5]+x[6]+x[7]+x[8]+x[9]+1</Equations>
            <GBasisLen>743</GBasisLen>
            <HilbertPolynomial>1024</HilbertPolynomial>
            <Polynomials>
				12
				
				12
				1    1 1 0 0 0 0 0 0 0 0 0 1 
				1    0 1 1 0 0 0 0 0 0 0 0 1 
				1    0 0 1 1 0 0 0 0 0 0 0 1 
				1    0 0 0 1 1 0 0 0 0 0 0 1 
				1    0 0 0 0 1 1 0 0 0 0 0 1 
				1    0 0 0 0 0 1 1 0 0 0 0 1 
				1    0 0 0 0 0 0 1 1 0 0 0 1 
				1    0 0 0 0 0 0 0 1 1 0 0 1 
				1    0 0 0 0 0 0 0 0 1 1 0 1 
				1    0 0 0 0 0 0 0 0 0 1 1 1 
				1    1 0 0 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				1    1 0 1 0 0 0 0 0 0 0 0 1 
				1    0 1 0 1 0 0 0 0 0 0 0 1 
				1    0 0 1 0 1 0 0 0 0 0 0 1 
				1    0 0 0 1 0 1 0 0 0 0 0 1 
				1    0 0 0 0 1 0 1 0 0 0 0 1 
				1    0 0 0 0 0 1 0 1 0 0 0 1 
				1    0 0 0 0 0 0 1 0 1 0 0 1 
				1    0 0 0 0 0 0 0 1 0 1 0 1 
				1    0 0 0 0 0 0 0 0 1 0 1 1 
				1    0 1 0 0 0 0 0 0 0 0 0 1 
				-2    0 0 0 0 0 0 0 0 0 0 0 0 
				
				10
				1    1 0 0 1 0 0 0 0 0 0 0 1 
				1    0 1 0 0 1 0 0 0 0 0 0 1 
				1    0 0 1 0 0 1 0 0 0 0 0 1 
				1    0 0 0 1 0 0 1 0 0 0 0 1 
				1    0 0 0 0 1 0 0 1 0 0 0 1 
				1    0 0 0 0 0 1 0 0 1 0 0 1 
				1    0 0 0 0 0 0 1 0 0 1 0 1 
				1    0 0 0 0 0 0 0 1 0 0 1 1 
				1    0 0 1 0 0 0 0 0 0 0 0 1 
				-3    0 0 0 0 0 0 0 0 0 0 0 0 
				
				9
				1    1 0 0 0 1 0 0 0 0 0 0 1 
				1    0 1 0 0 0 1 0 0 0 0 0 1 
				1    0 0 1 0 0 0 1 0 0 0 0 1 
				1    0 0 0 1 0 0 0 1 0 0 0 1 
				1    0 0 0 0 1 0 0 0 1 0 0 1 
				1    0 0 0 0 0 1 0 0 0 1 0 1 
				1    0 0 0 0 0 0 1 0 0 0 1 1 
				1    0 0 0 1 0 0 0 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 0 0 0 0 
				
				8
				1    1 0 0 0 0 1 0 0 0 0 0 1 
				1    0 1 0 0 0 0 1 0 0 0 0 1 
				1    0 0 1 0 0 0 0 1 0 0 0 1 
				1    0 0 0 1 0 0 0 0 1 0 0 1 
				1    0 0 0 0 1 0 0 0 0 1 0 1 
				1    0 0 0 0 0 1 0 0 0 0 1 1 
				1    0 0 0 0 1 0 0 0 0 0 0 1 
				-5    0 0 0 0 0 0 0 0 0 0 0 0 
				
				7
				1    1 0 0 0 0 0 1 0 0 0 0 1 
				1    0 1 0 0 0 0 0 1 0 0 0 1 
				1    0 0 1 0 0 0 0 0 1 0 0 1 
				1    0 0 0 1 0 0 0 0 0 1 0 1 
				1    0 0 0 0 1 0 0 0 0 0 1 1 
				1    0 0 0 0 0 1 0 0 0 0 0 1 
				-6    0 0 0 0 0 0 0 0 0 0 0 0 
				
				6
				1    1 0 0 0 0 0 0 1 0 0 0 1 
				1    0 1 0 0 0 0 0 0 1 0 0 1 
				1    0 0 1 0 0 0 0 0 0 1 0 1 
				1    0 0 0 1 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 1 0 0 0 0 1 
				-7    0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				1    1 0 0 0 0 0 0 0 1 0 0 1 
				1    0 1 0 0 0 0 0 0 0 1 0 1 
				1    0 0 1 0 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 0 1 0 0 0 1 
				-8    0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				1    1 0 0 0 0 0 0 0 0 1 0 1 
				1    0 1 0 0 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 0 0 1 0 0 1 
				-9    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    1 0 0 0 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 0 0 0 1 0 1 
				-10    0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				1    0 0 0 0 0 0 0 0 0 0 1 1 
				-11    0 0 0 0 0 0 0 0 0 0 0 0 
				
				12
				1    1 0 0 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>eco7</ID>
            <Name>Eco7</Name>
            <Description>\textbf{Title}: n-dimensional economics problem</Description>
            <References>\begin{itemize} \item Alexander Morgan. `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}</References>
            <Notes>Transform $u = 1/x_n$ and the total degree equals the number of solutions. See the reduced economics problem, in the file redeco.</Notes>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, eco7, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>x*y*r+x*r+y*z*r+z*w*r+w*u*r+u*v*r-1,x*z*r+y*w*r+y*r+z*u*r+w*v*r-2,x*w*r+y*u*r+z*v*r+z*r-3,x*u*r+y*v*r+w*r-4,x*v*r+u*r-5,v*r-6,x+y+z+w+u+v+1</Equations>
            <GBasisLen>32</GBasisLen>
            <HilbertPolynomial>32</HilbertPolynomial>
            <Polynomials>
				7
				
				7
				1    1 1 0 0 0 0 1 
				1    0 1 1 0 0 0 1 
				1    0 0 1 1 0 0 1 
				1    0 0 0 1 1 0 1 
				1    0 0 0 0 1 1 1 
				1    1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 
				
				6
				1    1 0 1 0 0 0 1 
				1    0 1 0 1 0 0 1 
				1    0 0 1 0 1 0 1 
				1    0 0 0 1 0 1 1 
				1    0 1 0 0 0 0 1 
				-2    0 0 0 0 0 0 0 
				
				5
				1    1 0 0 1 0 0 1 
				1    0 1 0 0 1 0 1 
				1    0 0 1 0 0 1 1 
				1    0 0 1 0 0 0 1 
				-3    0 0 0 0 0 0 0 
				
				4
				1    1 0 0 0 1 0 1 
				1    0 1 0 0 0 1 1 
				1    0 0 0 1 0 0 1 
				-4    0 0 0 0 0 0 0 
				
				3
				1    1 0 0 0 0 1 1 
				1    0 0 0 0 1 0 1 
				-5    0 0 0 0 0 0 0 
				
				2
				1    0 0 0 0 0 1 1 
				-6    0 0 0 0 0 0 0 
				
				7
				1    1 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>eco8</ID>
            <Name>Eco8</Name>
            <Description>\textbf{Title}: n-dimensional economics problem</Description>
            <References>\begin{itemize} \item Alexander Morgan. `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}</References>
            <Notes>Transform $u = 1/x_n$ and the total degree equals the number of solutions. See the reduced economics problem, in the file redeco.</Notes>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, eco8, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>x*y*s+x*s+y*z*s+z*w*s+w*u*s+u*v*s+v*r*s-1,x*z*s+y*w*s+y*s+z*u*s+w*v*s+u*r*s-2,x*w*s+y*u*s+z*v*s+z*s+w*r*s-3,x*u*s+y*v*s+z*r*s+w*s-4,x*v*s+y*r*s+u*s-5,x*r*s+v*s-6,r*s-7,x+y+z+w+u+v+r+1</Equations>
            <GBasisLen>59</GBasisLen>
            <HilbertPolynomial>64</HilbertPolynomial>
            <Polynomials>
				8
				
				8
				1    1 1 0 0 0 0 0 1 
				1    0 1 1 0 0 0 0 1 
				1    0 0 1 1 0 0 0 1 
				1    0 0 0 1 1 0 0 1 
				1    0 0 0 0 1 1 0 1 
				1    0 0 0 0 0 1 1 1 
				1    1 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 
				
				7
				1    1 0 1 0 0 0 0 1 
				1    0 1 0 1 0 0 0 1 
				1    0 0 1 0 1 0 0 1 
				1    0 0 0 1 0 1 0 1 
				1    0 0 0 0 1 0 1 1 
				1    0 1 0 0 0 0 0 1 
				-2    0 0 0 0 0 0 0 0 
				
				6
				1    1 0 0 1 0 0 0 1 
				1    0 1 0 0 1 0 0 1 
				1    0 0 1 0 0 1 0 1 
				1    0 0 0 1 0 0 1 1 
				1    0 0 1 0 0 0 0 1 
				-3    0 0 0 0 0 0 0 0 
				
				5
				1    1 0 0 0 1 0 0 1 
				1    0 1 0 0 0 1 0 1 
				1    0 0 1 0 0 0 1 1 
				1    0 0 0 1 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 
				
				4
				1    1 0 0 0 0 1 0 1 
				1    0 1 0 0 0 0 1 1 
				1    0 0 0 0 1 0 0 1 
				-5    0 0 0 0 0 0 0 0 
				
				3
				1    1 0 0 0 0 0 1 1 
				1    0 0 0 0 0 1 0 1 
				-6    0 0 0 0 0 0 0 0 
				
				2
				1    0 0 0 0 0 0 1 1 
				-7    0 0 0 0 0 0 0 0 
				
				8
				1    1 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>eco9</ID>
            <Name>Eco9</Name>
            <Description>\textbf{Title}: n-dimensional economics problem</Description>
            <References>\begin{itemize} \item Alexander Morgan. `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}</References>
            <Notes>Transform $u = 1/x_n$ and the total degree equals the number of solutions. See the reduced economics problem, in the file redeco.</Notes>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, eco9, with_9_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>x*y*t+x*t+y*z*t+z*w*t+w*u*t+u*v*t+v*r*t+r*s*t-1,x*z*t+y*w*t+y*t+z*u*t+w*v*t+u*r*t+v*s*t-2,x*w*t+y*u*t+z*v*t+z*t+w*r*t+u*s*t-3,x*u*t+y*v*t+z*r*t+w*s*t+w*t-4,x*v*t+y*r*t+z*s*t+u*t-5,x*r*t+y*s*t+v*t-6,x*s*t+r*t-7,s*t-8,x+y+z+w+u+v+r+s+1</Equations>
            <GBasisLen>106</GBasisLen>
            <HilbertPolynomial>128</HilbertPolynomial>
            <Polynomials>
				9
				
				9
				1    1 1 0 0 0 0 0 0 1 
				1    0 1 1 0 0 0 0 0 1 
				1    0 0 1 1 0 0 0 0 1 
				1    0 0 0 1 1 0 0 0 1 
				1    0 0 0 0 1 1 0 0 1 
				1    0 0 0 0 0 1 1 0 1 
				1    0 0 0 0 0 0 1 1 1 
				1    1 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 
				
				8
				1    1 0 1 0 0 0 0 0 1 
				1    0 1 0 1 0 0 0 0 1 
				1    0 0 1 0 1 0 0 0 1 
				1    0 0 0 1 0 1 0 0 1 
				1    0 0 0 0 1 0 1 0 1 
				1    0 0 0 0 0 1 0 1 1 
				1    0 1 0 0 0 0 0 0 1 
				-2    0 0 0 0 0 0 0 0 0 
				
				7
				1    1 0 0 1 0 0 0 0 1 
				1    0 1 0 0 1 0 0 0 1 
				1    0 0 1 0 0 1 0 0 1 
				1    0 0 0 1 0 0 1 0 1 
				1    0 0 0 0 1 0 0 1 1 
				1    0 0 1 0 0 0 0 0 1 
				-3    0 0 0 0 0 0 0 0 0 
				
				6
				1    1 0 0 0 1 0 0 0 1 
				1    0 1 0 0 0 1 0 0 1 
				1    0 0 1 0 0 0 1 0 1 
				1    0 0 0 1 0 0 0 1 1 
				1    0 0 0 1 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 0 
				
				5
				1    1 0 0 0 0 1 0 0 1 
				1    0 1 0 0 0 0 1 0 1 
				1    0 0 1 0 0 0 0 1 1 
				1    0 0 0 0 1 0 0 0 1 
				-5    0 0 0 0 0 0 0 0 0 
				
				4
				1    1 0 0 0 0 0 1 0 1 
				1    0 1 0 0 0 0 0 1 1 
				1    0 0 0 0 0 1 0 0 1 
				-6    0 0 0 0 0 0 0 0 0 
				
				3
				1    1 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 0 1 0 1 
				-7    0 0 0 0 0 0 0 0 0 
				
				2
				1    0 0 0 0 0 0 0 1 1 
				-8    0 0 0 0 0 0 0 0 0 
				
				9
				1    1 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>extcyc5</ID>
            <Name>Extcyc5</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript. \end{itemize}</References>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, extcyc5, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>x^5+1,x+y+z+w+u+v,x^2+y*z+y*v+z*w+w*u+u*v,x^3+y*z*w+y*z*v+y*u*v+z*w*u+w*u*v,x^4+y*z*w*u+y*z*w*v+y*z*u*v+y*w*u*v+z*w*u*v,y*z*w*u*v-1</Equations>
            <GBasisLen>102</GBasisLen>
            <HilbertPolynomial>350</HilbertPolynomial>
            <Polynomials>
				6
				
				2
				1    5 0 0 0 0 0 
				1    0 0 0 0 0 0 
				
				6
				1    1 0 0 0 0 0 
				1    0 1 0 0 0 0 
				1    0 0 1 0 0 0 
				1    0 0 0 1 0 0 
				1    0 0 0 0 1 0 
				1    0 0 0 0 0 1 
				
				6
				1    2 0 0 0 0 0 
				1    0 1 1 0 0 0 
				1    0 0 1 1 0 0 
				1    0 0 0 1 1 0 
				1    0 1 0 0 0 1 
				1    0 0 0 0 1 1 
				
				6
				1    3 0 0 0 0 0 
				1    0 1 1 1 0 0 
				1    0 0 1 1 1 0 
				1    0 1 1 0 0 1 
				1    0 1 0 0 1 1 
				1    0 0 0 1 1 1 
				
				6
				1    4 0 0 0 0 0 
				1    0 1 1 1 1 0 
				1    0 1 1 1 0 1 
				1    0 1 1 0 1 1 
				1    0 1 0 1 1 1 
				1    0 0 1 1 1 1 
				
				2
				1    0 1 1 1 1 1 
				-1    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>extcyc6</ID>
            <Name>Extcyc6</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript. \end{itemize}</References>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, extcyc6, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>x^6+1,x+y+z+w+u+v+r,x^2+y*z+y*r+z*w+w*u+u*v+v*r,x^3+y*z*w+y*z*r+y*v*r+z*w*u+w*u*v+u*v*r,x^4+y*z*w*u+y*z*w*r+y*z*v*r+y*u*v*r+z*w*u*v+w*u*v*r,x^5+y*z*w*u*v+y*z*w*u*r+y*z*w*v*r+y*z*u*v*r+y*w*u*v*r+z*w*u*v*r,y*z*w*u*v*r-1</Equations>
            <GBasisLen>242</GBasisLen>
            <HilbertPolynomial>936</HilbertPolynomial>
            <Polynomials>
				7
				
				2
				1    6 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 
				
				7
				1    1 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 1 
				
				7
				1    2 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 
				1    0 0 1 1 0 0 0 
				1    0 0 0 1 1 0 0 
				1    0 0 0 0 1 1 0 
				1    0 1 0 0 0 0 1 
				1    0 0 0 0 0 1 1 
				
				7
				1    3 0 0 0 0 0 0 
				1    0 1 1 1 0 0 0 
				1    0 0 1 1 1 0 0 
				1    0 0 0 1 1 1 0 
				1    0 1 1 0 0 0 1 
				1    0 1 0 0 0 1 1 
				1    0 0 0 0 1 1 1 
				
				7
				1    4 0 0 0 0 0 0 
				1    0 1 1 1 1 0 0 
				1    0 0 1 1 1 1 0 
				1    0 1 1 1 0 0 1 
				1    0 1 1 0 0 1 1 
				1    0 1 0 0 1 1 1 
				1    0 0 0 1 1 1 1 
				
				7
				1    5 0 0 0 0 0 0 
				1    0 1 1 1 1 1 0 
				1    0 1 1 1 1 0 1 
				1    0 1 1 1 0 1 1 
				1    0 1 1 0 1 1 1 
				1    0 1 0 1 1 1 1 
				1    0 0 1 1 1 1 1 
				
				2
				1    0 1 1 1 1 1 1 
				-1    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>extcyc7</ID>
            <Name>Extcyc7</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript. \end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, extcyc7, with_8_vars</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>x^7+1,x+y+z+w+u+v+r+s,x^2+y*z+y*s+z*w+w*u+u*v+v*r+r*s,x^3+y*z*w+y*z*s+y*r*s+z*w*u+w*u*v+u*v*r+v*r*s,x^4+y*z*w*u+y*z*w*s+y*z*r*s+y*v*r*s+z*w*u*v+w*u*v*r+u*v*r*s,x^5+y*z*w*u*v+y*z*w*u*s+y*z*w*r*s+y*z*v*r*s+y*u*v*r*s+z*w*u*v*r+w*u*v*r*s,x^6+y*z*w*u*v*r+y*z*w*u*v*s+y*z*w*u*r*s+y*z*w*v*r*s+y*z*u*v*r*s+y*w*u*v*r*s+z*w*u*v*r*s,y*z*w*u*v*r*s-1</Equations>
            <GBasisLen>&amp;nbsp;</GBasisLen>
            <HilbertPolynomial>&amp;nbsp;</HilbertPolynomial>
            <Polynomials>
				8
				
				2
				1    7 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 
				
				8
				1    1 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 1 
				
				8
				1    2 0 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 
				1    0 0 0 1 1 0 0 0 
				1    0 0 0 0 1 1 0 0 
				1    0 0 0 0 0 1 1 0 
				1    0 1 0 0 0 0 0 1 
				1    0 0 0 0 0 0 1 1 
				
				8
				1    3 0 0 0 0 0 0 0 
				1    0 1 1 1 0 0 0 0 
				1    0 0 1 1 1 0 0 0 
				1    0 0 0 1 1 1 0 0 
				1    0 0 0 0 1 1 1 0 
				1    0 1 1 0 0 0 0 1 
				1    0 1 0 0 0 0 1 1 
				1    0 0 0 0 0 1 1 1 
				
				8
				1    4 0 0 0 0 0 0 0 
				1    0 1 1 1 1 0 0 0 
				1    0 0 1 1 1 1 0 0 
				1    0 0 0 1 1 1 1 0 
				1    0 1 1 1 0 0 0 1 
				1    0 1 1 0 0 0 1 1 
				1    0 1 0 0 0 1 1 1 
				1    0 0 0 0 1 1 1 1 
				
				8
				1    5 0 0 0 0 0 0 0 
				1    0 1 1 1 1 1 0 0 
				1    0 0 1 1 1 1 1 0 
				1    0 1 1 1 1 0 0 1 
				1    0 1 1 1 0 0 1 1 
				1    0 1 1 0 0 1 1 1 
				1    0 1 0 0 1 1 1 1 
				1    0 0 0 1 1 1 1 1 
				
				8
				1    6 0 0 0 0 0 0 0 
				1    0 1 1 1 1 1 1 0 
				1    0 1 1 1 1 1 0 1 
				1    0 1 1 1 1 0 1 1 
				1    0 1 1 1 0 1 1 1 
				1    0 1 1 0 1 1 1 1 
				1    0 1 0 1 1 1 1 1 
				1    0 0 1 1 1 1 1 1 
				
				2
				1    0 1 1 1 1 1 1 1 
				-1    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>filter9</ID>
            <Name>Filter9</Name>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, filter9, with_9_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>
            100*w*v*s-1,500*x*y*v-7,25*x^2+25*z^2-2,50*y^2+50*t^2-37,10000*w^2+10000*u^2+10000*v^2+10000*r^2+10000*s^2-9401,1000000*w^2*v^2+1000000*w^2*r^2+1000000*w^2*s^2+1000000*u^2*r^2+1000000*u^2*s^2+1000000*v^2*s^2-38589,10000*x*y*w*s-10000*x*w*r*t-10000*y*z*u*s+10000*z*u*r*t+81,25000*x*y*w^2*v+25000*x*y*v*s^2-25000*x*v*r*s*t-25000*y*z*w*u*v+39,-40000*y^2*w^2-40000*y^2*u^2-40000*y^2*s^2+80000*y*r*s*t-40000*w^2*t^2-40000*u^2*t^2-40000*v^2*t^2-40000*r^2*t^2+27173</Equations>
            <GBasisLen>153</GBasisLen>
            <HilbertPolynomial>192</HilbertPolynomial>
            <Polynomials>
				9
				
				2
				100    0 0 0 1 0 1 0 1 0 
				-1    0 0 0 0 0 0 0 0 0 
				
				2
				500    1 1 0 0 0 1 0 0 0 
				-7    0 0 0 0 0 0 0 0 0 
				
				3
				25    2 0 0 0 0 0 0 0 0 
				25    0 0 2 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 
				
				3
				50    0 2 0 0 0 0 0 0 0 
				50    0 0 0 0 0 0 0 0 2 
				-37    0 0 0 0 0 0 0 0 0 
				
				6
				10000    0 0 0 2 0 0 0 0 0 
				10000    0 0 0 0 2 0 0 0 0 
				10000    0 0 0 0 0 2 0 0 0 
				10000    0 0 0 0 0 0 2 0 0 
				10000    0 0 0 0 0 0 0 2 0 
				-9401    0 0 0 0 0 0 0 0 0 
				
				7
				1000000    0 0 0 2 0 2 0 0 0 
				1000000    0 0 0 2 0 0 2 0 0 
				1000000    0 0 0 0 2 0 2 0 0 
				1000000    0 0 0 2 0 0 0 2 0 
				1000000    0 0 0 0 2 0 0 2 0 
				1000000    0 0 0 0 0 2 0 2 0 
				-38589    0 0 0 0 0 0 0 0 0 
				
				5
				10000    1 1 0 1 0 0 0 1 0 
				-10000    0 1 1 0 1 0 0 1 0 
				-10000    1 0 0 1 0 0 1 0 1 
				10000    0 0 1 0 1 0 1 0 1 
				81    0 0 0 0 0 0 0 0 0 
				
				5
				25000    1 1 0 2 0 1 0 0 0 
				-25000    0 1 1 1 1 1 0 0 0 
				25000    1 1 0 0 0 1 0 2 0 
				-25000    1 0 0 0 0 1 1 1 1 
				39    0 0 0 0 0 0 0 0 0 
				
				9
				-40000    0 2 0 2 0 0 0 0 0 
				-40000    0 2 0 0 2 0 0 0 0 
				-40000    0 2 0 0 0 0 0 2 0 
				80000    0 1 0 0 0 0 1 1 1 
				-40000    0 0 0 2 0 0 0 0 2 
				-40000    0 0 0 0 2 0 0 0 2 
				-40000    0 0 0 0 0 2 0 0 2 
				-40000    0 0 0 0 0 0 2 0 2 
				27173    0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>geneig</ID>
            <Name>Geneig</Name>
            <Description>\textbf{Title}: Generalized eigenvalue problem</Description>
            <References>M. Chu, T.-Y. Li and T. Sauer,  'Homotopy method for general lambda-matrix problems',  SIAM J. Matrix Anal. Appl., vol. 9, No. 4, pp 528-536.</References>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, geneig, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>-10*x*v^2+x*v+10*x+2*y*v^2+2*y*v+2*y-z*v^2+z*v-z+w*v^2+2*w*v+2*w+3*u*v^2+u*v-2*u,2*x*v^2+2*x*v+2*x-11*y*v^2+y*v+9*y+2*z*v^2+2*z*v+3*z-2*w*v^2+w*v-w+u*v^2+3*u*v-2*u,-x*v^2+x*v-x+2*y*v^2+2*y*v+3*y-12*z*v^2+10*z-w*v^2-2*w*v+2*w+u*v^2-2*u*v-u,x*v^2+2*x*v+2*x-2*y*v^2+y*v-y-z*v^2-2*z*v+2*z-10*w*v^2+2*w*v+12*w+2*u*v^2+3*u*v+u,3*x*v^2+x*v-2*x+y*v^2+3*y*v-2*y+z*v^2-2*z*v-z+2*w*v^2+3*w*v+w-11*u*v^2+3*u*v+10*u,x+y+z+w+u-1</Equations>
            <GBasisLen>16</GBasisLen>
            <HilbertPolynomial>10</HilbertPolynomial>
            <Polynomials>
				6
				
				15
				-10    1 0 0 0 0 2 
				2    0 1 0 0 0 2 
				-1    0 0 1 0 0 2 
				1    0 0 0 1 0 2 
				3    0 0 0 0 1 2 
				1    1 0 0 0 0 1 
				2    0 1 0 0 0 1 
				1    0 0 1 0 0 1 
				2    0 0 0 1 0 1 
				1    0 0 0 0 1 1 
				10    1 0 0 0 0 0 
				2    0 1 0 0 0 0 
				-1    0 0 1 0 0 0 
				2    0 0 0 1 0 0 
				-2    0 0 0 0 1 0 
				
				15
				2    1 0 0 0 0 2 
				-11    0 1 0 0 0 2 
				2    0 0 1 0 0 2 
				-2    0 0 0 1 0 2 
				1    0 0 0 0 1 2 
				2    1 0 0 0 0 1 
				1    0 1 0 0 0 1 
				2    0 0 1 0 0 1 
				1    0 0 0 1 0 1 
				3    0 0 0 0 1 1 
				2    1 0 0 0 0 0 
				9    0 1 0 0 0 0 
				3    0 0 1 0 0 0 
				-1    0 0 0 1 0 0 
				-2    0 0 0 0 1 0 
				
				14
				-1    1 0 0 0 0 2 
				2    0 1 0 0 0 2 
				-12    0 0 1 0 0 2 
				-1    0 0 0 1 0 2 
				1    0 0 0 0 1 2 
				1    1 0 0 0 0 1 
				2    0 1 0 0 0 1 
				-2    0 0 0 1 0 1 
				-2    0 0 0 0 1 1 
				-1    1 0 0 0 0 0 
				3    0 1 0 0 0 0 
				10    0 0 1 0 0 0 
				2    0 0 0 1 0 0 
				-1    0 0 0 0 1 0 
				
				15
				1    1 0 0 0 0 2 
				-2    0 1 0 0 0 2 
				-1    0 0 1 0 0 2 
				-10    0 0 0 1 0 2 
				2    0 0 0 0 1 2 
				2    1 0 0 0 0 1 
				1    0 1 0 0 0 1 
				-2    0 0 1 0 0 1 
				2    0 0 0 1 0 1 
				3    0 0 0 0 1 1 
				2    1 0 0 0 0 0 
				-1    0 1 0 0 0 0 
				2    0 0 1 0 0 0 
				12    0 0 0 1 0 0 
				1    0 0 0 0 1 0 
				
				15
				3    1 0 0 0 0 2 
				1    0 1 0 0 0 2 
				1    0 0 1 0 0 2 
				2    0 0 0 1 0 2 
				-11    0 0 0 0 1 2 
				1    1 0 0 0 0 1 
				3    0 1 0 0 0 1 
				-2    0 0 1 0 0 1 
				3    0 0 0 1 0 1 
				3    0 0 0 0 1 1 
				-2    1 0 0 0 0 0 
				-2    0 1 0 0 0 0 
				-1    0 0 1 0 0 0 
				1    0 0 0 1 0 0 
				10    0 0 0 0 1 0 
				
				6
				1    1 0 0 0 0 0 
				1    0 1 0 0 0 0 
				1    0 0 1 0 0 0 
				1    0 0 0 1 0 0 
				1    0 0 0 0 1 0 
				-1    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>hairer1</ID>
            <Name>Hairer1</Name>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hairer1, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>x-v,y-r-s,z+w+u-1,2*x*w+2*y*z-1,3*x^2*w+3*y^2*z-1,6*x*z*r-1</Equations>
            <GBasisLen>12</GBasisLen>
            <HilbertPolynomial>5s^2 - s + 2</HilbertPolynomial>
            <Polynomials>
				6
				
				2
				1    1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 1 0 0 
				
				3
				1    0 1 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 1 
				
				4
				1    0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				3
				2    0 1 1 0 0 0 0 0 
				2    1 0 0 1 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				3
				3    0 2 1 0 0 0 0 0 
				3    2 0 0 1 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				2
				6    1 0 1 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>hairer2</ID>
            <Name>Hairer2</Name>
            <Variables>x[1..13]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hairer2, with_13_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_13_vars</TestEnvironment>
            <Equations>
            x[4]+x[5]+x[6]+x[7]-1,2*x[1]*x[6]+2*x[2]*x[5]+2*x[3]*x[4]-1,3*x[1]^2*x[6]+3*x[2]^2*x[5]+3*x[3]^2*x[4]-1,6*x[1]*x[4]*x[12]+6*x[1]*x[5]*x[9]+6*x[2]*x[4]*x[13]-1,4*x[1]^3*x[6]+4*x[2]^3*x[5]+4*x[3]^3*x[4]-1,8*x[1]*x[2]*x[5]*x[9]+8*x[1]*x[3]*x[4]*x[12]+8*x[2]*x[3]*x[4]*x[13]-1,2*x[1]^2*x[4]*x[12]+2*x[1]^2*x[5]*x[9]+2*x[2]^2*x[4]*x[13]-1,24*x[1]*x[4]*x[9]*x[13]-1,x[1]-x[8],x[2]-x[10],x[3]-x[11]-x[12]-x[13]</Equations>
            <GBasisLen>128</GBasisLen>
            <HilbertPolynomial>31s^2 - 40s + 10</HilbertPolynomial>
            <Polynomials>
				11
				
				5
				1    0 0 0 1 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				2    0 0 1 1 0 0 0 0 0 0 0 0 0 
				2    0 1 0 0 1 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				3    0 0 2 1 0 0 0 0 0 0 0 0 0 
				3    0 2 0 0 1 0 0 0 0 0 0 0 0 
				3    2 0 0 0 0 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				6    1 0 0 0 1 0 0 0 1 0 0 0 0 
				6    1 0 0 1 0 0 0 0 0 0 0 1 0 
				6    0 1 0 1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				4    0 0 3 1 0 0 0 0 0 0 0 0 0 
				4    0 3 0 0 1 0 0 0 0 0 0 0 0 
				4    3 0 0 0 0 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				8    1 1 0 0 1 0 0 0 1 0 0 0 0 
				8    1 0 1 1 0 0 0 0 0 0 0 1 0 
				8    0 1 1 1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				2    2 0 0 0 1 0 0 0 1 0 0 0 0 
				2    2 0 0 1 0 0 0 0 0 0 0 1 0 
				2    0 2 0 1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				24    1 0 0 1 0 0 0 0 1 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				1    1 0 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 1 0 0 0 0 0 
				
				2
				1    0 1 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 1 0 0 0 
				
				4
				1    0 0 1 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 1 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 1 
				</Polynomials>
        </Example>
        <Example>
            <ID>hairer3</ID>
            <Name>Hairer3</Name>
            <Variables>x[1..14]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hairer3, with_14_vars</TagsList>
            <TestEnvironment>rings_with_14_vars</TestEnvironment>
            <Equations>
            2*x[1]*x[5]+2*x[2]*x[6]+2*x[3]*x[7]+2*x[4]*x[8]-1,3*x[1]^2*x[5]+3*x[2]^2*x[6]+3*x[3]^2*x[7]+3*x[4]^2*x[8]-1,6*x[1]*x[6]*x[9]+6*x[1]*x[7]*x[10]+6*x[1]*x[8]*x[12]+6*x[2]*x[7]*x[11]+6*x[2]*x[8]*x[13]+6*x[3]*x[8]*x[14]-1,4*x[1]^3*x[5]+4*x[2]^3*x[6]+4*x[3]^3*x[7]+4*x[4]^3*x[8]-1,8*x[1]*x[2]*x[6]*x[9]+8*x[1]*x[3]*x[7]*x[10]+8*x[1]*x[4]*x[8]*x[12]+8*x[2]*x[3]*x[7]*x[11]+8*x[2]*x[4]*x[8]*x[13]+8*x[3]*x[4]*x[8]*x[14]-1,12*x[1]^2*x[6]*x[9]+12*x[1]^2*x[7]*x[10]+12*x[1]^2*x[8]*x[12]+12*x[2]^2*x[7]*x[11]+12*x[2]^2*x[8]*x[13]+12*x[3]^2*x[8]*x[14]-1,24*x[1]*x[7]*x[9]*x[11]+24*x[1]*x[8]*x[9]*x[13]+24*x[1]*x[8]*x[10]*x[14]+24*x[2]*x[8]*x[11]*x[14]-1,5*x[1]^4*x[5]+5*x[2]^4*x[6]+5*x[3]^4*x[7]+5*x[4]^4*x[8]-1,10*x[1]*x[2]^2*x[6]*x[9]+10*x[1]*x[3]^2*x[7]*x[10]+10*x[1]*x[4]^2*x[8]*x[12]+10*x[2]*x[3]^2*x[7]*x[11]+10*x[2]*x[4]^2*x[8]*x[13]+10*x[3]*x[4]^2*x[8]*x[14]-1,15*x[1]^3*x[8]*x[12]+15*x[1]^2*x[2]*x[6]*x[9]+15*x[1]^2*x[3]*x[7]*x[10]+15*x[2]^2*x[3]*x[7]*x[11]+15*x[2]^2*x[4]*x[8]*x[13]+15*x[3]^2*x[4]*x[8]*x[14]-1,30*x[1]*x[3]*x[7]*x[9]*x[11]+30*x[1]*x[4]*x[8]*x[9]*x[13]+30*x[1]*x[4]*x[8]*x[10]*x[14]+30*x[2]*x[4]*x[8]*x[11]*x[14]-1,-20*x[1]^2*x[6]+20*x[1]^2*x[7]*x[10]^2+20*x[1]^2*x[8]*x[12]^2+40*x[1]*x[2]*x[7]*x[10]*x[11]+40*x[1]*x[2]*x[8]*x[12]*x[13]+40*x[1]*x[3]*x[8]*x[12]*x[14]+20*x[2]^2*x[7]*x[11]^2+20*x[2]^2*x[8]*x[13]^2+40*x[2]*x[3]*x[8]*x[13]*x[14]+20*x[3]^2*x[8]*x[14]^2-1,20*x[1]^3*x[6]*x[9]+20*x[1]^3*x[7]*x[10]+20*x[1]^3*x[8]*x[12]+20*x[2]^3*x[7]*x[11]+20*x[2]^3*x[8]*x[13]+20*x[3]^3*x[8]*x[14]-1,40*x[1]*x[2]*x[7]*x[9]*x[11]+40*x[1]*x[2]*x[8]*x[9]*x[13]+40*x[1]*x[3]*x[8]*x[10]*x[14]+40*x[2]*x[3]*x[8]*x[11]*x[14]-1,60*x[1]^2*x[7]*x[9]*x[11]+60*x[1]^2*x[8]*x[9]*x[13]+60*x[1]^2*x[8]*x[10]*x[14]+60*x[2]^2*x[8]*x[11]*x[14]-1,120*x[1]*x[8]*x[9]*x[11]*x[14]-1</Equations>
            <GBasisLen>1</GBasisLen>
            <HilbertPolynomial>0</HilbertPolynomial>
            <Polynomials>
				16
				
				5
				2    1 0 0 0 1 0 0 0 0 0 0 0 0 0 
				2    0 1 0 0 0 1 0 0 0 0 0 0 0 0 
				2    0 0 1 0 0 0 1 0 0 0 0 0 0 0 
				2    0 0 0 1 0 0 0 1 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				3    2 0 0 0 1 0 0 0 0 0 0 0 0 0 
				3    0 2 0 0 0 1 0 0 0 0 0 0 0 0 
				3    0 0 2 0 0 0 1 0 0 0 0 0 0 0 
				3    0 0 0 2 0 0 0 1 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				7
				6    1 0 0 0 0 1 0 0 1 0 0 0 0 0 
				6    1 0 0 0 0 0 1 0 0 1 0 0 0 0 
				6    0 1 0 0 0 0 1 0 0 0 1 0 0 0 
				6    1 0 0 0 0 0 0 1 0 0 0 1 0 0 
				6    0 1 0 0 0 0 0 1 0 0 0 0 1 0 
				6    0 0 1 0 0 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				4    3 0 0 0 1 0 0 0 0 0 0 0 0 0 
				4    0 3 0 0 0 1 0 0 0 0 0 0 0 0 
				4    0 0 3 0 0 0 1 0 0 0 0 0 0 0 
				4    0 0 0 3 0 0 0 1 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				7
				8    1 1 0 0 0 1 0 0 1 0 0 0 0 0 
				8    1 0 1 0 0 0 1 0 0 1 0 0 0 0 
				8    0 1 1 0 0 0 1 0 0 0 1 0 0 0 
				8    1 0 0 1 0 0 0 1 0 0 0 1 0 0 
				8    0 1 0 1 0 0 0 1 0 0 0 0 1 0 
				8    0 0 1 1 0 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				7
				12    2 0 0 0 0 1 0 0 1 0 0 0 0 0 
				12    2 0 0 0 0 0 1 0 0 1 0 0 0 0 
				12    0 2 0 0 0 0 1 0 0 0 1 0 0 0 
				12    2 0 0 0 0 0 0 1 0 0 0 1 0 0 
				12    0 2 0 0 0 0 0 1 0 0 0 0 1 0 
				12    0 0 2 0 0 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				24    1 0 0 0 0 0 1 0 1 0 1 0 0 0 
				24    1 0 0 0 0 0 0 1 1 0 0 0 1 0 
				24    1 0 0 0 0 0 0 1 0 1 0 0 0 1 
				24    0 1 0 0 0 0 0 1 0 0 1 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				5    4 0 0 0 1 0 0 0 0 0 0 0 0 0 
				5    0 4 0 0 0 1 0 0 0 0 0 0 0 0 
				5    0 0 4 0 0 0 1 0 0 0 0 0 0 0 
				5    0 0 0 4 0 0 0 1 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				7
				10    1 2 0 0 0 1 0 0 1 0 0 0 0 0 
				10    1 0 2 0 0 0 1 0 0 1 0 0 0 0 
				10    0 1 2 0 0 0 1 0 0 0 1 0 0 0 
				10    1 0 0 2 0 0 0 1 0 0 0 1 0 0 
				10    0 1 0 2 0 0 0 1 0 0 0 0 1 0 
				10    0 0 1 2 0 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				7
				15    2 1 0 0 0 1 0 0 1 0 0 0 0 0 
				15    2 0 1 0 0 0 1 0 0 1 0 0 0 0 
				15    0 2 1 0 0 0 1 0 0 0 1 0 0 0 
				15    3 0 0 0 0 0 0 1 0 0 0 1 0 0 
				15    0 2 0 1 0 0 0 1 0 0 0 0 1 0 
				15    0 0 2 1 0 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				30    1 0 1 0 0 0 1 0 1 0 1 0 0 0 
				30    1 0 0 1 0 0 0 1 1 0 0 0 1 0 
				30    1 0 0 1 0 0 0 1 0 1 0 0 0 1 
				30    0 1 0 1 0 0 0 1 0 0 1 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				20    2 0 0 0 0 0 1 0 0 2 0 0 0 0 
				40    1 1 0 0 0 0 1 0 0 1 1 0 0 0 
				20    0 2 0 0 0 0 1 0 0 0 2 0 0 0 
				20    2 0 0 0 0 0 0 1 0 0 0 2 0 0 
				40    1 1 0 0 0 0 0 1 0 0 0 1 1 0 
				20    0 2 0 0 0 0 0 1 0 0 0 0 2 0 
				40    1 0 1 0 0 0 0 1 0 0 0 1 0 1 
				40    0 1 1 0 0 0 0 1 0 0 0 0 1 1 
				20    0 0 2 0 0 0 0 1 0 0 0 0 0 2 
				-20    2 0 0 0 0 1 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				7
				20    3 0 0 0 0 1 0 0 1 0 0 0 0 0 
				20    3 0 0 0 0 0 1 0 0 1 0 0 0 0 
				20    0 3 0 0 0 0 1 0 0 0 1 0 0 0 
				20    3 0 0 0 0 0 0 1 0 0 0 1 0 0 
				20    0 3 0 0 0 0 0 1 0 0 0 0 1 0 
				20    0 0 3 0 0 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				40    1 1 0 0 0 0 1 0 1 0 1 0 0 0 
				40    1 1 0 0 0 0 0 1 1 0 0 0 1 0 
				40    1 0 1 0 0 0 0 1 0 1 0 0 0 1 
				40    0 1 1 0 0 0 0 1 0 0 1 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				60    2 0 0 0 0 0 1 0 1 0 1 0 0 0 
				60    2 0 0 0 0 0 0 1 1 0 0 0 1 0 
				60    2 0 0 0 0 0 0 1 0 1 0 0 0 1 
				60    0 2 0 0 0 0 0 1 0 0 1 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				120    1 0 0 0 0 0 0 1 1 0 1 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>hairer4</ID>
            <Name>Hairer4</Name>
            <Variables>x[1..20]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hairer4, with_20_vars</TagsList>
            <TestEnvironment>rings_with_20_vars</TestEnvironment>
            <Equations>
            2*x[2]*x[7]+2*x[3]*x[8]+2*x[4]*x[9]+2*x[5]*x[10]+2*x[6]*x[11]-1,3*x[2]^2*x[7]+3*x[3]^2*x[8]+3*x[4]^2*x[9]+3*x[5]^2*x[10]+3*x[6]^2*x[11]-1,6*x[2]*x[8]*x[12]+6*x[2]*x[9]*x[13]+6*x[2]*x[10]*x[15]+6*x[2]*x[11]*x[18]+6*x[3]*x[9]*x[14]+6*x[3]*x[10]*x[16]+6*x[3]*x[11]*x[19]+6*x[4]*x[10]*x[17]+6*x[4]*x[11]*x[20]+6*x[5]*x[11]*x[1]-1,4*x[2]^3*x[7]+4*x[3]^3*x[8]+4*x[4]^3*x[9]+4*x[5]^3*x[10]+4*x[6]^3*x[11]-1,8*x[2]*x[3]*x[8]*x[12]+8*x[2]*x[4]*x[9]*x[13]+8*x[2]*x[5]*x[10]*x[15]+8*x[2]*x[6]*x[11]*x[18]+8*x[3]*x[4]*x[9]*x[14]+8*x[3]*x[5]*x[10]*x[16]+8*x[3]*x[6]*x[11]*x[19]+8*x[4]*x[5]*x[10]*x[17]+8*x[4]*x[6]*x[11]*x[20]+8*x[5]*x[6]*x[11]*x[1]-1,12*x[2]^2*x[8]*x[12]+12*x[2]^2*x[9]*x[13]+12*x[2]^2*x[10]*x[15]+12*x[2]^2*x[11]*x[18]+12*x[3]^2*x[9]*x[14]+12*x[3]^2*x[10]*x[16]+12*x[3]^2*x[11]*x[19]+12*x[4]^2*x[10]*x[17]+12*x[4]^2*x[11]*x[20]+12*x[5]^2*x[11]*x[1]-1,24*x[2]*x[9]*x[12]*x[14]+24*x[2]*x[10]*x[12]*x[16]+24*x[2]*x[10]*x[13]*x[17]+24*x[2]*x[11]*x[12]*x[19]+24*x[2]*x[11]*x[13]*x[20]+24*x[2]*x[11]*x[15]*x[1]+24*x[3]*x[10]*x[14]*x[17]+24*x[3]*x[11]*x[14]*x[20]+24*x[3]*x[11]*x[16]*x[1]+24*x[4]*x[11]*x[17]*x[1]-1,5*x[2]^4*x[7]+5*x[3]^4*x[8]+5*x[4]^4*x[9]+5*x[5]^4*x[10]+5*x[6]^4*x[11]-1,10*x[2]*x[3]^2*x[8]*x[12]+10*x[2]*x[4]^2*x[9]*x[13]+10*x[2]*x[5]^2*x[10]*x[15]+10*x[2]*x[6]^2*x[11]*x[18]+10*x[3]*x[4]^2*x[9]*x[14]+10*x[3]*x[5]^2*x[10]*x[16]+10*x[3]*x[6]^2*x[11]*x[19]+10*x[4]*x[5]^2*x[10]*x[17]+10*x[4]*x[6]^2*x[11]*x[20]+10*x[5]*x[6]^2*x[11]*x[1]-1,15*x[2]^2*x[3]*x[8]*x[12]+15*x[2]^2*x[4]*x[9]*x[13]+15*x[2]^2*x[5]*x[10]*x[15]+15*x[2]^2*x[6]*x[11]*x[18]+15*x[3]^2*x[4]*x[9]*x[14]+15*x[3]^2*x[5]*x[10]*x[16]+15*x[3]^2*x[6]*x[11]*x[19]+15*x[4]^2*x[5]*x[10]*x[17]+15*x[4]^2*x[6]*x[11]*x[20]+15*x[5]^2*x[6]*x[11]*x[1]-1,30*x[2]*x[4]*x[9]*x[12]*x[14]+30*x[2]*x[5]*x[10]*x[12]*x[16]+30*x[2]*x[5]*x[10]*x[13]*x[17]+30*x[2]*x[6]*x[11]*x[12]*x[19]+30*x[2]*x[6]*x[11]*x[13]*x[20]+30*x[2]*x[6]*x[11]*x[15]*x[1]+30*x[3]*x[5]*x[10]*x[14]*x[17]+30*x[3]*x[6]*x[11]*x[14]*x[20]+30*x[3]*x[6]*x[11]*x[16]*x[1]+30*x[4]*x[6]*x[11]*x[17]*x[1]-1,20*x[2]^2*x[8]*x[12]^2+20*x[2]^2*x[9]*x[13]^2+20*x[2]^2*x[10]*x[15]^2+20*x[2]^2*x[11]*x[18]^2+40*x[2]*x[3]*x[9]*x[13]*x[14]+40*x[2]*x[3]*x[10]*x[15]*x[16]+40*x[2]*x[3]*x[11]*x[18]*x[19]+40*x[2]*x[4]*x[10]*x[15]*x[17]+40*x[2]*x[4]*x[11]*x[18]*x[20]+40*x[2]*x[5]*x[11]*x[18]*x[1]+20*x[3]^2*x[9]*x[14]^2+20*x[3]^2*x[10]*x[16]^2+20*x[3]^2*x[11]*x[19]^2+40*x[3]*x[4]*x[10]*x[16]*x[17]+40*x[3]*x[4]*x[11]*x[19]*x[20]+40*x[3]*x[5]*x[11]*x[19]*x[1]+20*x[4]^2*x[10]*x[17]^2+20*x[4]^2*x[11]*x[20]^2+40*x[4]*x[5]*x[11]*x[20]*x[1]+20*x[5]^2*x[11]*x[1]^2-1,20*x[2]^3*x[8]*x[12]+20*x[2]^3*x[9]*x[13]+20*x[2]^3*x[10]*x[15]+20*x[2]^3*x[11]*x[18]+20*x[3]^3*x[9]*x[14]+20*x[3]^3*x[10]*x[16]+20*x[3]^3*x[11]*x[19]+20*x[4]^3*x[10]*x[17]+20*x[4]^3*x[11]*x[20]+20*x[5]^3*x[11]*x[1]-1,40*x[2]*x[3]*x[9]*x[12]*x[14]+40*x[2]*x[3]*x[10]*x[12]*x[16]+40*x[2]*x[3]*x[11]*x[12]*x[19]+40*x[2]*x[4]*x[10]*x[13]*x[17]+40*x[2]*x[4]*x[11]*x[13]*x[20]+40*x[2]*x[5]*x[11]*x[15]*x[1]+40*x[3]*x[4]*x[10]*x[14]*x[17]+40*x[3]*x[4]*x[11]*x[14]*x[20]+40*x[3]*x[5]*x[11]*x[16]*x[1]+40*x[4]*x[5]*x[11]*x[17]*x[1]-1,60*x[2]^2*x[9]*x[12]*x[14]+60*x[2]^2*x[10]*x[12]*x[16]+60*x[2]^2*x[10]*x[13]*x[17]+60*x[2]^2*x[11]*x[12]*x[19]+60*x[2]^2*x[11]*x[13]*x[20]+60*x[2]^2*x[11]*x[15]*x[1]+60*x[3]^2*x[10]*x[14]*x[17]+60*x[3]^2*x[11]*x[14]*x[20]+60*x[3]^2*x[11]*x[16]*x[1]+60*x[4]^2*x[11]*x[17]*x[1]-1,20*x[2]*x[10]*x[12]*x[14]*x[17]+20*x[2]*x[11]*x[12]*x[14]*x[20]+20*x[2]*x[11]*x[12]*x[16]*x[1]+20*x[2]*x[11]*x[13]*x[17]*x[1]+20*x[3]*x[11]*x[14]*x[17]*x[1]-1</Equations>
            <GBasisLen>&amp;nbsp;</GBasisLen>
            <HilbertPolynomial>&amp;nbsp;</HilbertPolynomial>
            <Polynomials>
				16
				
				6
				2    0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
				2    0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
				2    0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
				2    0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				6
				3    0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
				3    0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
				3    0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
				3    0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
				3    0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				6    1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				6    0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
				6    0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 
				6    0 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 
				6    0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
				6    0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 
				6    0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
				6    0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
				6    0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
				6    0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				6
				4    0 3 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
				4    0 0 3 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
				4    0 0 0 3 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
				4    0 0 0 0 3 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
				4    0 0 0 0 0 3 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				8    1 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				8    0 1 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
				8    0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 
				8    0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 
				8    0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
				8    0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 
				8    0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
				8    0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
				8    0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
				8    0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				12    1 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				12    0 2 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
				12    0 2 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 
				12    0 0 2 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 
				12    0 2 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
				12    0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 
				12    0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
				12    0 2 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
				12    0 0 2 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
				12    0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				24    0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 
				24    1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
				24    1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 
				24    0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 
				24    1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
				24    0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 
				24    0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 
				24    0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 
				24    0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 
				24    0 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				6
				5    0 4 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
				5    0 0 4 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
				5    0 0 0 4 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
				5    0 0 0 0 4 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
				5    0 0 0 0 0 4 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				10    1 0 0 0 1 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				10    0 1 2 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
				10    0 1 0 2 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 
				10    0 0 1 2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 
				10    0 1 0 0 2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
				10    0 0 1 0 2 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 
				10    0 0 0 1 2 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
				10    0 1 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
				10    0 0 1 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
				10    0 0 0 1 0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				15    1 0 0 0 2 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				15    0 2 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
				15    0 2 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 
				15    0 0 2 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 
				15    0 2 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
				15    0 0 2 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 
				15    0 0 0 2 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
				15    0 2 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
				15    0 0 2 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
				15    0 0 0 2 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				30    0 1 0 1 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 
				30    1 1 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
				30    1 0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 
				30    0 1 0 0 1 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 
				30    1 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
				30    0 1 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 
				30    0 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 
				30    0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 1 0 
				30    0 1 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 1 
				30    0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				21
				20    2 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				20    0 2 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
				20    0 2 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 
				40    0 1 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 
				20    0 0 2 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 
				20    0 2 0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 
				40    0 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 
				20    0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 
				40    0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 
				40    0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 
				20    0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 
				40    1 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
				20    0 2 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 
				40    1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
				40    0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 
				20    0 0 2 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 
				40    1 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
				40    0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 
				40    0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
				20    0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				20    1 0 0 0 3 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				20    0 3 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
				20    0 3 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 
				20    0 0 3 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 
				20    0 3 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
				20    0 0 3 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 
				20    0 0 0 3 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
				20    0 3 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
				20    0 0 3 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
				20    0 0 0 3 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				40    0 1 1 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 
				40    1 1 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
				40    1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 
				40    0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 
				40    1 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
				40    0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 
				40    0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 
				40    0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 
				40    0 1 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 
				40    0 0 1 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				11
				60    0 2 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 
				60    1 2 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
				60    1 0 2 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 
				60    0 2 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 
				60    1 0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
				60    0 2 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 
				60    0 0 2 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 
				60    0 2 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 
				60    0 2 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 
				60    0 0 2 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				6
				20    1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 
				20    1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 
				20    1 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 
				20    0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 0 
				20    0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>hcyclic5</ID>
            <Name>Hcyclic5</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript. \end{itemize}</References>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hcyclic5, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>
            x+y+z+w+u,x*y+x*u+y*z+z*w+w*u,x*y*z+x*y*u+x*w*u+y*z*w+z*w*u,x*y*z*w+x*y*z*u+x*y*w*u+x*z*w*u+y*z*w*u,-v^5+x*y*z*w*u</Equations>
            <GBasisLen>38</GBasisLen>
            <HilbertPolynomial>120s - 480</HilbertPolynomial>
            <Polynomials>
				5
				
				5
				1    1 0 0 0 0 0 
				1    0 1 0 0 0 0 
				1    0 0 1 0 0 0 
				1    0 0 0 1 0 0 
				1    0 0 0 0 1 0 
				
				5
				1    1 1 0 0 0 0 
				1    0 1 1 0 0 0 
				1    0 0 1 1 0 0 
				1    1 0 0 0 1 0 
				1    0 0 0 1 1 0 
				
				5
				1    1 1 1 0 0 0 
				1    0 1 1 1 0 0 
				1    1 1 0 0 1 0 
				1    1 0 0 1 1 0 
				1    0 0 1 1 1 0 
				
				5
				1    1 1 1 1 0 0 
				1    1 1 1 0 1 0 
				1    1 1 0 1 1 0 
				1    1 0 1 1 1 0 
				1    0 1 1 1 1 0 
				
				2
				1    1 1 1 1 1 0 
				-1    0 0 0 0 0 5 
				</Polynomials>
        </Example>
        <Example>
            <ID>hcyclic6</ID>
            <Name>Hcyclic6</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript. \end{itemize}</References>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hcyclic6, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>x+y+z+w+u+v,x*y+x*v+y*z+z*w+w*u+u*v,x*y*z+x*y*v+x*u*v+y*z*w+z*w*u+w*u*v,x*y*z*w+x*y*z*v+x*y*u*v+x*w*u*v+y*z*w*u+z*w*u*v,x*y*z*w*u+x*y*z*w*v+x*y*z*u*v+x*y*w*u*v+x*z*w*u*v+y*z*w*u*v,-r^6+x*y*z*w*u*v</Equations>
            <GBasisLen>99</GBasisLen>
            <HilbertPolynomial>30s^2 + 84s - 1210</HilbertPolynomial>
            <Polynomials>
				6
				
				6
				1    1 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 
				
				6
				1    1 1 0 0 0 0 0 
				1    0 1 1 0 0 0 0 
				1    0 0 1 1 0 0 0 
				1    0 0 0 1 1 0 0 
				1    1 0 0 0 0 1 0 
				1    0 0 0 0 1 1 0 
				
				6
				1    1 1 1 0 0 0 0 
				1    0 1 1 1 0 0 0 
				1    0 0 1 1 1 0 0 
				1    1 1 0 0 0 1 0 
				1    1 0 0 0 1 1 0 
				1    0 0 0 1 1 1 0 
				
				6
				1    1 1 1 1 0 0 0 
				1    0 1 1 1 1 0 0 
				1    1 1 1 0 0 1 0 
				1    1 1 0 0 1 1 0 
				1    1 0 0 1 1 1 0 
				1    0 0 1 1 1 1 0 
				
				6
				1    1 1 1 1 1 0 0 
				1    1 1 1 1 0 1 0 
				1    1 1 1 0 1 1 0 
				1    1 1 0 1 1 1 0 
				1    1 0 1 1 1 1 0 
				1    0 1 1 1 1 1 0 
				
				2
				1    1 1 1 1 1 1 0 
				-1    0 0 0 0 0 0 6 
				</Polynomials>
        </Example>
        <Example>
            <ID>hcyclic7</ID>
            <Name>Hcyclic7</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript. \end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hcyclic7, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>x+y+z+w+u+v+r,x*y+x*r+y*z+z*w+w*u+u*v+v*r,x*y*z+x*y*r+x*v*r+y*z*w+z*w*u+w*u*v+u*v*r,x*y*z*w+x*y*z*r+x*y*v*r+x*u*v*r+y*z*w*u+z*w*u*v+w*u*v*r,x*y*z*w*u+x*y*z*w*r+x*y*z*v*r+x*y*u*v*r+x*w*u*v*r+y*z*w*u*v+z*w*u*v*r,x*y*z*w*u*v+x*y*z*w*u*r+x*y*z*w*v*r+x*y*z*u*v*r+x*y*w*u*v*r+x*z*w*u*v*r+y*z*w*u*v*r,-s^7+x*y*z*w*u*v*r</Equations>
            <GBasisLen>443</GBasisLen>
            <HilbertPolynomial>196s^2 - 546s - 7056</HilbertPolynomial>
            <Polynomials>
				7
				
				7
				1    1 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 1 0 
				
				7
				1    1 1 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 
				1    0 0 0 1 1 0 0 0 
				1    0 0 0 0 1 1 0 0 
				1    1 0 0 0 0 0 1 0 
				1    0 0 0 0 0 1 1 0 
				
				7
				1    1 1 1 0 0 0 0 0 
				1    0 1 1 1 0 0 0 0 
				1    0 0 1 1 1 0 0 0 
				1    0 0 0 1 1 1 0 0 
				1    1 1 0 0 0 0 1 0 
				1    1 0 0 0 0 1 1 0 
				1    0 0 0 0 1 1 1 0 
				
				7
				1    1 1 1 1 0 0 0 0 
				1    0 1 1 1 1 0 0 0 
				1    0 0 1 1 1 1 0 0 
				1    1 1 1 0 0 0 1 0 
				1    1 1 0 0 0 1 1 0 
				1    1 0 0 0 1 1 1 0 
				1    0 0 0 1 1 1 1 0 
				
				7
				1    1 1 1 1 1 0 0 0 
				1    0 1 1 1 1 1 0 0 
				1    1 1 1 1 0 0 1 0 
				1    1 1 1 0 0 1 1 0 
				1    1 1 0 0 1 1 1 0 
				1    1 0 0 1 1 1 1 0 
				1    0 0 1 1 1 1 1 0 
				
				7
				1    1 1 1 1 1 1 0 0 
				1    1 1 1 1 1 0 1 0 
				1    1 1 1 1 0 1 1 0 
				1    1 1 1 0 1 1 1 0 
				1    1 1 0 1 1 1 1 0 
				1    1 0 1 1 1 1 1 0 
				1    0 1 1 1 1 1 1 0 
				
				2
				1    1 1 1 1 1 1 1 0 
				-1    0 0 0 0 0 0 0 7 
				</Polynomials>
        </Example>
        <Example>
            <ID>hcyclic8</ID>
            <Name>Hcyclic8</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg: `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R.: 'How we proved that there are exactly 924 cyclic 7-roots' , Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R.: 'Methods to ``divide out'' certain solutions from systems of algebraic  equations, applied to find all cyclic 8-roots ', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript. \end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hcyclic8, with_9_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>x+y+z+w+u+v+r+s,x*y+x*s+y*z+z*w+w*u+u*v+v*r+r*s,x*y*z+x*y*s+x*r*s+y*z*w+z*w*u+w*u*v+u*v*r+v*r*s,x*y*z*w+x*y*z*s+x*y*r*s+x*v*r*s+y*z*w*u+z*w*u*v+w*u*v*r+u*v*r*s,x*y*z*w*u+x*y*z*w*s+x*y*z*r*s+x*y*v*r*s+x*u*v*r*s+y*z*w*u*v+z*w*u*v*r+w*u*v*r*s,x*y*z*w*u*v+x*y*z*w*u*s+x*y*z*w*r*s+x*y*z*v*r*s+x*y*u*v*r*s+x*w*u*v*r*s+y*z*w*u*v*r+z*w*u*v*r*s,x*y*z*w*u*v*r+x*y*z*w*u*v*s+x*y*z*w*u*r*s+x*y*z*w*v*r*s+x*y*z*u*v*r*s+x*y*w*u*v*r*s+x*z*w*u*v*r*s+y*z*w*u*v*r*s,-t^8+x*y*z*w*u*v*r*s</Equations>
            <GBasisLen>1182</GBasisLen>
            <HilbertPolynomial>176/3s^3 - 392s^2 + 5944/3s - 23936</HilbertPolynomial>
            <Polynomials>
				8
				
				8
				1    1 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 1 0 
				
				8
				1    1 1 0 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 0 
				1    0 0 0 1 1 0 0 0 0 
				1    0 0 0 0 1 1 0 0 0 
				1    0 0 0 0 0 1 1 0 0 
				1    1 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 1 1 0 
				
				8
				1    1 1 1 0 0 0 0 0 0 
				1    0 1 1 1 0 0 0 0 0 
				1    0 0 1 1 1 0 0 0 0 
				1    0 0 0 1 1 1 0 0 0 
				1    0 0 0 0 1 1 1 0 0 
				1    1 1 0 0 0 0 0 1 0 
				1    1 0 0 0 0 0 1 1 0 
				1    0 0 0 0 0 1 1 1 0 
				
				8
				1    1 1 1 1 0 0 0 0 0 
				1    0 1 1 1 1 0 0 0 0 
				1    0 0 1 1 1 1 0 0 0 
				1    0 0 0 1 1 1 1 0 0 
				1    1 1 1 0 0 0 0 1 0 
				1    1 1 0 0 0 0 1 1 0 
				1    1 0 0 0 0 1 1 1 0 
				1    0 0 0 0 1 1 1 1 0 
				
				8
				1    1 1 1 1 1 0 0 0 0 
				1    0 1 1 1 1 1 0 0 0 
				1    0 0 1 1 1 1 1 0 0 
				1    1 1 1 1 0 0 0 1 0 
				1    1 1 1 0 0 0 1 1 0 
				1    1 1 0 0 0 1 1 1 0 
				1    1 0 0 0 1 1 1 1 0 
				1    0 0 0 1 1 1 1 1 0 
				
				8
				1    1 1 1 1 1 1 0 0 0 
				1    0 1 1 1 1 1 1 0 0 
				1    1 1 1 1 1 0 0 1 0 
				1    1 1 1 1 0 0 1 1 0 
				1    1 1 1 0 0 1 1 1 0 
				1    1 1 0 0 1 1 1 1 0 
				1    1 0 0 1 1 1 1 1 0 
				1    0 0 1 1 1 1 1 1 0 
				
				8
				1    1 1 1 1 1 1 1 0 0 
				1    1 1 1 1 1 1 0 1 0 
				1    1 1 1 1 1 0 1 1 0 
				1    1 1 1 1 0 1 1 1 0 
				1    1 1 1 0 1 1 1 1 0 
				1    1 1 0 1 1 1 1 1 0 
				1    1 0 1 1 1 1 1 1 0 
				1    0 1 1 1 1 1 1 1 0 
				
				2
				1    1 1 1 1 1 1 1 1 0 
				-1    0 0 0 0 0 0 0 0 8 
				</Polynomials>
        </Example>
        <Example>
            <ID>heart</ID>
            <Name>Heart</Name>
            <Description>\textbf{Title}: Heart-dipole problem</Description>
            <References>Nelsen, C.V. and Hodgkin, B.C.: `Determination of magnitudes, directions, and locations of two independent dipoles in a circular conducting region from boundary potential measurements', IEEE Trans. Biomed. Engrg. Vol. BME-28, No. 12, pages 817-823, 1981.
            \\ Morgan, A.P. and Sommese, A.J.: `Coefficient-Parameter Polynomial Continuation', Appl. Math. Comput. Vol. 29, No. 2, pages 123-160, 1989.
            \\ Morgan, A.P. and Sommese, A. and Watson, L.T.: `Mathematical reduction of a heart dipole model', J. Comput. Appl. Math. Vol. 27, pages 407-410, 1989.
            \\ Jan Verschelde. Homotopy Continuation Methods for solving Polynomial Systems. PhD thesis, Katholike Univ. Leuven.</References>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, heart, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>50000*x+50000*y-31627,50000*z+50000*w+67267,2500000*x*u+2500000*y*v-2500000*z*r-2500000*w*s+2091337,5000000*x*r+5000000*y*s+5000000*z*u+5000000*w*v-8672667,31250*x*u^2-31250*x*r^2+31250*y*v^2-31250*y*s^2-62500*z*u*r-62500*w*v*s-42261,2000000*x*u*r+2000000*y*v*s+1000000*z*u^2-1000000*z*r^2+1000000*w*v^2-1000000*w*s^2+843453,10000000*x*u^3-30000000*x*u*r^2+10000000*y*v^3-30000000*y*v*s^2-30000000*z*u^2*r+10000000*z*r^3-30000000*w*v^2*s+10000000*w*s^3+9563453,30000000*x*u^2*r-10000000*x*r^3+30000000*y*v^2*s-10000000*y*s^3+10000000*z*u^3-30000000*z*u*r^2+10000000*w*v^3-30000000*w*v*s^2-12342523</Equations>
            <GBasisLen>9</GBasisLen>
            <HilbertPolynomial>4</HilbertPolynomial>
            <Polynomials>
				8
				
				3
				50000    1 0 0 0 0 0 0 0 
				50000    0 1 0 0 0 0 0 0 
				-31627    0 0 0 0 0 0 0 0 
				
				3
				50000    0 0 1 0 0 0 0 0 
				50000    0 0 0 1 0 0 0 0 
				67267    0 0 0 0 0 0 0 0 
				
				5
				2500000    1 0 0 0 1 0 0 0 
				2500000    0 1 0 0 0 1 0 0 
				-2500000    0 0 1 0 0 0 1 0 
				-2500000    0 0 0 1 0 0 0 1 
				2091337    0 0 0 0 0 0 0 0 
				
				5
				5000000    0 0 1 0 1 0 0 0 
				5000000    0 0 0 1 0 1 0 0 
				5000000    1 0 0 0 0 0 1 0 
				5000000    0 1 0 0 0 0 0 1 
				-8672667    0 0 0 0 0 0 0 0 
				
				7
				31250    1 0 0 0 2 0 0 0 
				31250    0 1 0 0 0 2 0 0 
				-62500    0 0 1 0 1 0 1 0 
				-31250    1 0 0 0 0 0 2 0 
				-62500    0 0 0 1 0 1 0 1 
				-31250    0 1 0 0 0 0 0 2 
				-42261    0 0 0 0 0 0 0 0 
				
				7
				1000000    0 0 1 0 2 0 0 0 
				1000000    0 0 0 1 0 2 0 0 
				2000000    1 0 0 0 1 0 1 0 
				-1000000    0 0 1 0 0 0 2 0 
				2000000    0 1 0 0 0 1 0 1 
				-1000000    0 0 0 1 0 0 0 2 
				843453    0 0 0 0 0 0 0 0 
				
				9
				10000000    1 0 0 0 3 0 0 0 
				10000000    0 1 0 0 0 3 0 0 
				-30000000    0 0 1 0 2 0 1 0 
				-30000000    1 0 0 0 1 0 2 0 
				10000000    0 0 1 0 0 0 3 0 
				-30000000    0 0 0 1 0 2 0 1 
				-30000000    0 1 0 0 0 1 0 2 
				10000000    0 0 0 1 0 0 0 3 
				9563453    0 0 0 0 0 0 0 0 
				
				9
				10000000    0 0 1 0 3 0 0 0 
				10000000    0 0 0 1 0 3 0 0 
				30000000    1 0 0 0 2 0 1 0 
				-30000000    0 0 1 0 1 0 2 0 
				-10000000    1 0 0 0 0 0 3 0 
				30000000    0 1 0 0 0 2 0 1 
				-30000000    0 0 0 1 0 1 0 2 
				-10000000    0 1 0 0 0 0 0 3 
				-12342523    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>hemmecke</ID>
            <Name>Hemmecke</Name>
            <Variables>x,y,z,w</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hemmecke, with_4_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_4_vars</TestEnvironment>
            <Equations>y^2-w^20-w^10,y*z^3-w^30-w^10,-x^40*y^4+z^6</Equations>
            <GBasisLen>9</GBasisLen>
            <HilbertPolynomial>2980s - 76460</HilbertPolynomial>
            <Polynomials>
				3
				
				3
				-1    0 0 0 20 
				-1    0 0 0 10 
				1    0 2 0 0 
				
				3
				-1    0 0 0 30 
				-1    0 0 0 10 
				1    0 1 3 0 
				
				2
				-1    40 4 0 0 
				1    0 0 6 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>hietarinta1</ID>
            <Name>Hietarinta1</Name>
            <Variables>x,y,z,w,u,v,r,s,t,p</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hietarinta1, with_10_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_10_vars</TestEnvironment>
            <Equations>
            -x*y+x+y^2*r+y*w-p-r,x*y*p+y^2+y*v+p*u,-x^2*y+x^2+x*y*t+x*y*w-x*p-x*u+2*y^2-y*p*w+p*w-2,-x*y^2+x*y*z+x*y*v-y^2*u+y^2*s-y*p*v-y*u+p*v,-(x*w+y*t*w+z+1),-y*t*v+y*t+y*p-y*w-y*u+z*u,-x*z-x*v+x+y*t-y*z*w+t+z*w-s,-y*z*v+y*z-y*v+z*v,x*w+x*r+y*u*r+y+w*u-w*v*r-w*r-v-2,-y*p+y*w+y*u+y*r+2*u*v+u-v^2*r,x*y-x-y*t+2*y*u-p*w*u+p-w*v+u*v+r,x*u*v+y^2-y*z-y*w*u-y*u^2+y*u*s-p*u*v-u^2*v-v^2+v,x^2*w-x*w^2-x*v+2*x-y*w+y*v*r-t*w*u+t-w+u-s,x*y*w+x*u*v+y*p*w-y*w^2+y*v+2*y-t*u*v-w*u*v-u^2+u*s-v^2,x*w+y*t*w+y*v-z*w*u+z-w*v*s+v^2+1,x*v^2+y*z*w-y*w*v+y*v*s-z*u*v-u*v^2-v^2*s+v*s,x*t+x*p-x*w-x*u+y*u*r+y-t*r+p*v*r-z*w*r-z+v-1,y*t-y*w+p*w*u+p*v+z*u-z*v*r,x*y-x+y*p-y*w+y*u-t*v-t-p^2*w+p*w^2+p*v+p-z*w+z*u-w,x*z*u+y^2-y*t*u-y*p*u+y*u*s-y*v-p^2*v+p*w*v+p*v*s-z*u^2-2*z*v,-t*p*w-t*v+p-z*w+z*v*r-u,-x*t*v+t^2*v+t*w+t*u-t*s-p*z*w+z*w^2-z*w*s+2*z*v+z-1,-y*t*v+t*z*v-p*z*v+z*w*v-z*u*v+z*u,-x^2*r+x*w*r+3*x-w*r*s+u^2*r+2*u-s,-x*y*r-x*u+y*w*r+2*y-p*u+p*v*r+w*u+u*s-v*r*s+2*v,-x*y*r-x*u+y-t*u+t*v*r-p*w-p*r+w^2-w*u+w*r-w*s+u^2+u*s+v,-y^2*r-2*y*u-p*v-z*u+z*v*r+w*v-u*v,-x*w-x*r-t*w-t*r-w*u-w*s+u*v*r+v*r*s,-y*w-y*r-t*v+p*w*u+p*v-u,-x*v+t*w*u+t*v-z*w-z*r+w^2*s-w*v-w*s^2+u*v+2*v*s-s,-y*v+z*w*u+w*v*s-v^2,-x*y*r-x*p+y*p*r+2*y-t*p-t*r+p*z*r+z-1,-x^2*p-2*x*y+x*p^2+x*z-y*t+y*p-y*u+y*s+t*p*u+p-z*r,x*y-x-y^2*r-y*w+t*p*w-t*z-2*t+p*z+u,-x*y*p-y^2-y*v+t*p*v+p*z*s-p*u-z^2-z,-y*t-y*r-2*t*z-t-p+z^2*r+w,-x*t*z-x*p+y*t^2-y*t*s-2*y+t*p*z+t*z*u+p^2-p*w+z^2-z,-x*t*z-y*z+t^2*z+t^2+t*p+t*z*w-t*s+z^2+v-1,-x*z^2-y*z*s+t*z^2+t*z*v+p*z-p*v+z^2*s-z*s,x*t*r-x*u*r-t*w*r-2*t+p*u*r+p-w+2*u,x*p-x*u+y*t*r+y+t*u-p^2+p*z*r+p*w+p*u-z*w*r-u^2+u*s-v*r*s+v,-y*u*r-y+t*z*r+t*r+z-u*v*r-v+1,y*p-y*u+t*v-p*w*u+z^2*r-z*w+z*s-2*u*v-v*s,x*t-x*w+t^2-t*w-t*u-t*s-p*w+p*v*r+z*r*s-z+w^2-w*v*r-u*r-1,y*t-y*w+t*z+p^2*w+p*z-p*w^2+p*v+p-z*w+z*s-w*v-u*v-u-v*s,t*p*w+2*t*z+t+p*v-z*u+z*s-w-v^2*r-v*s,t*v*s+p*z*w-p*w*v+p*v*s+2*z^2-z*w*s-z*u*s+z*s^2-2*v^2-v*s^2,x^2*r-x*p*r-3*x-t^2*r-2*t+p*r*s+s,x*y*r+x*p+y*u*r+t*p-t*z*r+p*u+p*s-z*r*s,x*t+x*r-y*p*r+y*w*r-t^2+t*p+t*u-t*s-p^2+p*w+p*s-z*u*r-z-1,x*z+y*v*r+y*s-t*p*u-t*z-p^2*s+p*z+p*v+p*s^2-z*u-2*z*s,x*t+x*r-t*p+t*w-t*s-p*r-z*w*r+z*r*s-2*z-2,y*t+y*r-t*p*w+p-z*w+z*u,t*z+t*v+2*t-p*z+z*w-z*v*r+r,-t*p*v-p*z*s+z^2+z,-x*p*r-x+p*r*s+u^2*r+2*u-r*s^2+3*s,-t*p*r+t*r*s-2*t-p+w*u*r+w-u*r*s+2*u,-y*p*r-y-p*z*r-p*u-p*s+z*r*s-2*z+u*v*r+v,x*w*r+x-t^2*r-2*t-w*r*s+r*s^2-3*s,y*w*r+y-t*z*r-t*s-p*r+p*s-z-w*s+u*v*r+u*s+v-1,-t*z*r+t*w-z+w*v*r+w*r+w*s-v*r*s+2*v+1,-p*v-z^2*r+z*w-z*s+v^2*r+v*s</Equations>
            <GBasisLen>51</GBasisLen>
            <HilbertPolynomial>3/2s^2 + 23/2s + 1</HilbertPolynomial>
            <Polynomials>
				62
				
				6
				1    0 2 0 0 0 0 1 0 0 0 
				-1    1 1 0 0 0 0 0 0 0 0 
				1    0 1 0 1 0 0 0 0 0 0 
				1    1 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 1 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 1 
				
				4
				1    1 1 0 0 0 0 0 0 0 1 
				1    0 2 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 1 
				
				10
				-1    2 1 0 0 0 0 0 0 0 0 
				1    1 1 0 1 0 0 0 0 0 0 
				1    1 1 0 0 0 0 0 0 1 0 
				-1    0 1 0 1 0 0 0 0 0 1 
				1    2 0 0 0 0 0 0 0 0 0 
				2    0 2 0 0 0 0 0 0 0 0 
				-1    1 0 0 0 1 0 0 0 0 0 
				-1    1 0 0 0 0 0 0 0 0 1 
				1    0 0 0 1 0 0 0 0 0 1 
				-2    0 0 0 0 0 0 0 0 0 0 
				
				8
				-1    1 2 0 0 0 0 0 0 0 0 
				1    1 1 1 0 0 0 0 0 0 0 
				-1    0 2 0 0 1 0 0 0 0 0 
				1    1 1 0 0 0 1 0 0 0 0 
				1    0 2 0 0 0 0 0 1 0 0 
				-1    0 1 0 0 0 1 0 0 0 1 
				-1    0 1 0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 1 
				
				4
				-1    0 1 0 1 0 0 0 0 1 0 
				-1    1 0 0 1 0 0 0 0 0 0 
				-1    0 0 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				6
				-1    0 1 0 0 0 1 0 0 1 0 
				-1    0 1 0 1 0 0 0 0 0 0 
				-1    0 1 0 0 1 0 0 0 0 0 
				1    0 0 1 0 1 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 1 0 
				1    0 1 0 0 0 0 0 0 0 1 
				
				8
				-1    0 1 1 1 0 0 0 0 0 0 
				-1    1 0 1 0 0 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 0 0 
				-1    1 0 0 0 0 1 0 0 0 0 
				1    0 1 0 0 0 0 0 0 1 0 
				1    1 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 1 0 
				
				4
				-1    0 1 1 0 0 1 0 0 0 0 
				1    0 1 1 0 0 0 0 0 0 0 
				-1    0 1 0 0 0 1 0 0 0 0 
				1    0 0 1 0 0 1 0 0 0 0 
				
				9
				1    0 1 0 0 1 0 1 0 0 0 
				-1    0 0 0 1 0 1 1 0 0 0 
				1    1 0 0 1 0 0 0 0 0 0 
				1    0 0 0 1 1 0 0 0 0 0 
				1    1 0 0 0 0 0 1 0 0 0 
				-1    0 0 0 1 0 0 1 0 0 0 
				1    0 1 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 1 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 
				
				7
				-1    0 0 0 0 0 2 1 0 0 0 
				1    0 1 0 1 0 0 0 0 0 0 
				1    0 1 0 0 1 0 0 0 0 0 
				2    0 0 0 0 1 1 0 0 0 0 
				1    0 1 0 0 0 0 1 0 0 0 
				-1    0 1 0 0 0 0 0 0 0 1 
				1    0 0 0 0 1 0 0 0 0 0 
				
				9
				-1    0 0 0 1 1 0 0 0 0 1 
				1    1 1 0 0 0 0 0 0 0 0 
				2    0 1 0 0 1 0 0 0 0 0 
				-1    0 0 0 1 0 1 0 0 0 0 
				1    0 0 0 0 1 1 0 0 0 0 
				-1    0 1 0 0 0 0 0 0 1 0 
				-1    1 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 0 0 1 
				
				10
				-1    0 1 0 1 1 0 0 0 0 0 
				-1    0 1 0 0 2 0 0 0 0 0 
				1    1 0 0 0 1 1 0 0 0 0 
				-1    0 0 0 0 2 1 0 0 0 0 
				1    0 1 0 0 1 0 0 1 0 0 
				-1    0 0 0 0 1 1 0 0 0 1 
				1    0 2 0 0 0 0 0 0 0 0 
				-1    0 1 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 2 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 
				
				11
				1    2 0 0 1 0 0 0 0 0 0 
				-1    1 0 0 2 0 0 0 0 0 0 
				1    0 1 0 0 0 1 1 0 0 0 
				-1    0 0 0 1 1 0 0 0 1 0 
				-1    0 1 0 1 0 0 0 0 0 0 
				-1    1 0 0 0 0 1 0 0 0 0 
				2    1 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 1 0 
				
				11
				1    1 1 0 1 0 0 0 0 0 0 
				-1    0 1 0 2 0 0 0 0 0 0 
				1    1 0 0 0 1 1 0 0 0 0 
				-1    0 0 0 1 1 1 0 0 0 0 
				-1    0 0 0 0 1 1 0 0 1 0 
				1    0 1 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 2 0 0 0 0 0 
				1    0 1 0 0 0 1 0 0 0 0 
				-1    0 0 0 0 0 2 0 0 0 0 
				1    0 0 0 0 1 0 0 1 0 0 
				2    0 1 0 0 0 0 0 0 0 0 
				
				8
				-1    0 0 1 1 1 0 0 0 0 0 
				-1    0 0 0 1 0 1 0 1 0 0 
				1    0 1 0 1 0 0 0 0 1 0 
				1    1 0 0 1 0 0 0 0 0 0 
				1    0 1 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 2 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 
				
				8
				1    0 1 1 1 0 0 0 0 0 0 
				-1    0 1 0 1 0 1 0 0 0 0 
				-1    0 0 1 0 1 1 0 0 0 0 
				1    1 0 0 0 0 2 0 0 0 0 
				-1    0 0 0 0 1 2 0 0 0 0 
				1    0 1 0 0 0 1 0 1 0 0 
				-1    0 0 0 0 0 2 0 1 0 0 
				1    0 0 0 0 0 1 0 1 0 0 
				
				12
				-1    0 0 1 1 0 0 1 0 0 0 
				1    0 1 0 0 1 0 1 0 0 0 
				1    0 0 0 0 0 1 1 0 0 1 
				-1    1 0 0 1 0 0 0 0 0 0 
				-1    1 0 0 0 1 0 0 0 0 0 
				1    1 0 0 0 0 0 0 0 1 0 
				-1    0 0 0 0 0 0 1 0 1 0 
				1    1 0 0 0 0 0 0 0 0 1 
				1    0 1 0 0 0 0 0 0 0 0 
				-1    0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				6
				-1    0 0 1 0 0 1 1 0 0 0 
				1    0 0 0 1 1 0 0 0 0 1 
				-1    0 1 0 1 0 0 0 0 0 0 
				1    0 0 1 0 1 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 1 0 0 0 1 
				
				14
				1    0 0 0 2 0 0 0 0 0 1 
				-1    0 0 0 1 0 0 0 0 0 2 
				1    1 1 0 0 0 0 0 0 0 0 
				-1    0 1 0 1 0 0 0 0 0 0 
				-1    0 0 1 1 0 0 0 0 0 0 
				1    0 1 0 0 1 0 0 0 0 0 
				1    0 0 1 0 1 0 0 0 0 0 
				-1    0 0 0 0 0 1 0 0 1 0 
				1    0 1 0 0 0 0 0 0 0 1 
				1    0 0 0 0 0 1 0 0 0 1 
				-1    1 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 1 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 1 
				
				11
				1    1 0 1 0 1 0 0 0 0 0 
				-1    0 0 1 0 2 0 0 0 0 0 
				1    0 1 0 0 1 0 0 1 0 0 
				-1    0 1 0 0 1 0 0 0 1 0 
				-1    0 1 0 0 1 0 0 0 0 1 
				1    0 0 0 1 0 1 0 0 0 1 
				1    0 0 0 0 0 1 0 1 0 1 
				-1    0 0 0 0 0 1 0 0 0 2 
				1    0 2 0 0 0 0 0 0 0 0 
				-1    0 1 0 0 0 1 0 0 0 0 
				-2    0 0 1 0 0 1 0 0 0 0 
				
				6
				1    0 0 1 0 0 1 1 0 0 0 
				-1    0 0 0 1 0 0 0 0 1 1 
				-1    0 0 1 1 0 0 0 0 0 0 
				-1    0 0 0 0 0 1 0 0 1 0 
				-1    0 0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 1 
				
				11
				1    0 0 1 2 0 0 0 0 0 0 
				-1    0 0 1 1 0 0 0 1 0 0 
				-1    1 0 0 0 0 1 0 0 1 0 
				1    0 0 0 0 0 1 0 0 2 0 
				-1    0 0 1 1 0 0 0 0 0 1 
				2    0 0 1 0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 0 1 0 
				1    0 0 0 0 1 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 1 1 0 
				1    0 0 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				6
				1    0 0 1 1 0 1 0 0 0 0 
				-1    0 0 1 0 1 1 0 0 0 0 
				-1    0 1 0 0 0 1 0 0 1 0 
				1    0 0 1 0 0 1 0 0 1 0 
				-1    0 0 1 0 0 1 0 0 0 1 
				1    0 0 1 0 1 0 0 0 0 0 
				
				7
				-1    2 0 0 0 0 0 1 0 0 0 
				1    1 0 0 1 0 0 1 0 0 0 
				1    0 0 0 0 2 0 1 0 0 0 
				-1    0 0 0 1 0 0 1 1 0 0 
				3    1 0 0 0 0 0 0 0 0 0 
				2    0 0 0 0 1 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 1 0 0 
				
				10
				-1    1 1 0 0 0 0 1 0 0 0 
				1    0 1 0 1 0 0 1 0 0 0 
				-1    0 0 0 0 0 1 1 1 0 0 
				1    0 0 0 0 0 1 1 0 0 1 
				-1    1 0 0 0 1 0 0 0 0 0 
				1    0 0 0 1 1 0 0 0 0 0 
				1    0 0 0 0 1 0 0 1 0 0 
				-1    0 0 0 0 1 0 0 0 0 1 
				2    0 1 0 0 0 0 0 0 0 0 
				2    0 0 0 0 0 1 0 0 0 0 
				
				14
				-1    1 1 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 1 0 1 0 
				1    0 0 0 2 0 0 0 0 0 0 
				-1    1 0 0 0 1 0 0 0 0 0 
				-1    0 0 0 1 1 0 0 0 0 0 
				1    0 0 0 0 2 0 0 0 0 0 
				1    0 0 0 1 0 0 1 0 0 0 
				-1    0 0 0 1 0 0 0 1 0 0 
				1    0 0 0 0 1 0 0 1 0 0 
				-1    0 0 0 0 1 0 0 0 1 0 
				-1    0 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 1 0 0 1 
				1    0 1 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 
				
				7
				-1    0 2 0 0 0 0 1 0 0 0 
				1    0 0 1 0 0 1 1 0 0 0 
				-2    0 1 0 0 1 0 0 0 0 0 
				-1    0 0 1 0 1 0 0 0 0 0 
				1    0 0 0 1 0 1 0 0 0 0 
				-1    0 0 0 0 1 1 0 0 0 0 
				-1    0 0 0 0 0 1 0 0 0 1 
				
				8
				1    0 0 0 0 1 1 1 0 0 0 
				1    0 0 0 0 0 1 1 1 0 0 
				-1    1 0 0 1 0 0 0 0 0 0 
				-1    0 0 0 1 1 0 0 0 0 0 
				-1    1 0 0 0 0 0 1 0 0 0 
				-1    0 0 0 1 0 0 0 1 0 0 
				-1    0 0 0 1 0 0 0 0 1 0 
				-1    0 0 0 0 0 0 1 0 1 0 
				
				6
				1    0 0 0 1 1 0 0 0 0 1 
				-1    0 1 0 1 0 0 0 0 0 0 
				-1    0 1 0 0 0 0 1 0 0 0 
				-1    0 0 0 0 0 1 0 0 1 0 
				1    0 0 0 0 0 1 0 0 0 1 
				-1    0 0 0 0 1 0 0 0 0 0 
				
				11
				1    0 0 0 2 0 0 0 1 0 0 
				-1    0 0 0 1 0 0 0 2 0 0 
				1    0 0 0 1 1 0 0 0 1 0 
				-1    0 0 1 1 0 0 0 0 0 0 
				-1    1 0 0 0 0 1 0 0 0 0 
				-1    0 0 0 1 0 1 0 0 0 0 
				1    0 0 0 0 1 1 0 0 0 0 
				-1    0 0 1 0 0 0 1 0 0 0 
				2    0 0 0 0 0 1 0 1 0 0 
				1    0 0 0 0 0 1 0 0 1 0 
				-1    0 0 0 0 0 0 0 1 0 0 
				
				4
				1    0 0 1 1 1 0 0 0 0 0 
				1    0 0 0 1 0 1 0 1 0 0 
				-1    0 1 0 0 0 1 0 0 0 0 
				-1    0 0 0 0 0 2 0 0 0 0 
				
				9
				-1    1 1 0 0 0 0 1 0 0 0 
				1    0 1 0 0 0 0 1 0 0 1 
				1    0 0 1 0 0 0 1 0 0 1 
				-1    0 0 0 0 0 0 1 0 1 0 
				-1    1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 1 1 
				2    0 1 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				11
				-1    2 0 0 0 0 0 0 0 0 1 
				1    0 0 0 0 1 0 0 0 1 1 
				1    1 0 0 0 0 0 0 0 0 2 
				-2    1 1 0 0 0 0 0 0 0 0 
				1    1 0 1 0 0 0 0 0 0 0 
				-1    0 1 0 0 1 0 0 0 0 0 
				-1    0 0 1 0 0 0 1 0 0 0 
				1    0 1 0 0 0 0 0 1 0 0 
				-1    0 1 0 0 0 0 0 0 1 0 
				1    0 1 0 0 0 0 0 0 0 1 
				1    0 0 0 0 0 0 0 0 0 1 
				
				9
				-1    0 2 0 0 0 0 1 0 0 0 
				1    0 0 0 1 0 0 0 0 1 1 
				1    1 1 0 0 0 0 0 0 0 0 
				-1    0 1 0 1 0 0 0 0 0 0 
				-1    0 0 1 0 0 0 0 0 1 0 
				1    0 0 1 0 0 0 0 0 0 1 
				-1    1 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 1 0 
				
				8
				-1    1 1 0 0 0 0 0 0 0 1 
				1    0 0 1 0 0 0 0 1 0 1 
				1    0 0 0 0 0 1 0 0 1 1 
				-1    0 2 0 0 0 0 0 0 0 0 
				-1    0 0 2 0 0 0 0 0 0 0 
				-1    0 1 0 0 0 1 0 0 0 0 
				-1    0 0 0 0 1 0 0 0 0 1 
				-1    0 0 1 0 0 0 0 0 0 0 
				
				7
				1    0 0 2 0 0 0 1 0 0 0 
				-1    0 1 0 0 0 0 1 0 0 0 
				-1    0 1 0 0 0 0 0 0 1 0 
				-2    0 0 1 0 0 0 0 0 1 0 
				1    0 0 0 1 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 0 0 1 
				
				11
				-1    1 0 1 0 0 0 0 0 1 0 
				1    0 0 1 0 1 0 0 0 1 0 
				-1    0 1 0 0 0 0 0 1 1 0 
				1    0 1 0 0 0 0 0 0 2 0 
				1    0 0 1 0 0 0 0 0 1 1 
				1    0 0 2 0 0 0 0 0 0 0 
				-1    1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 1 0 0 0 0 0 1 
				1    0 0 0 0 0 0 0 0 0 2 
				-2    0 1 0 0 0 0 0 0 0 0 
				-1    0 0 1 0 0 0 0 0 0 0 
				
				10
				-1    1 0 1 0 0 0 0 0 1 0 
				1    0 0 1 1 0 0 0 0 1 0 
				1    0 0 1 0 0 0 0 0 2 0 
				-1    0 1 1 0 0 0 0 0 0 0 
				1    0 0 2 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 1 1 0 
				1    0 0 0 0 0 0 0 0 2 0 
				1    0 0 0 0 0 0 0 0 1 1 
				1    0 0 0 0 0 1 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				8
				-1    1 0 2 0 0 0 0 0 0 0 
				-1    0 1 1 0 0 0 0 1 0 0 
				1    0 0 2 0 0 0 0 1 0 0 
				1    0 0 2 0 0 0 0 0 1 0 
				1    0 0 1 0 0 1 0 0 1 0 
				-1    0 0 1 0 0 0 0 1 0 0 
				1    0 0 1 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 1 0 0 0 1 
				
				8
				-1    1 0 0 0 1 0 1 0 0 0 
				1    1 0 0 0 0 0 1 0 1 0 
				-1    0 0 0 1 0 0 1 0 1 0 
				1    0 0 0 0 1 0 1 0 0 1 
				-1    0 0 0 1 0 0 0 0 0 0 
				2    0 0 0 0 1 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 1 
				
				14
				-1    0 0 1 1 0 0 1 0 0 0 
				-1    0 0 0 0 0 1 1 1 0 0 
				1    0 1 0 0 0 0 1 0 1 0 
				1    0 0 1 0 0 0 1 0 0 1 
				-1    1 0 0 0 1 0 0 0 0 0 
				-1    0 0 0 0 2 0 0 0 0 0 
				1    0 0 0 0 1 0 0 1 0 0 
				1    0 0 0 0 1 0 0 0 1 0 
				1    1 0 0 0 0 0 0 0 0 1 
				1    0 0 0 1 0 0 0 0 0 1 
				1    0 0 0 0 1 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 2 
				1    0 1 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 
				
				8
				-1    0 1 0 0 1 0 1 0 0 0 
				-1    0 0 0 0 1 1 1 0 0 0 
				1    0 0 1 0 0 0 1 0 1 0 
				1    0 0 0 0 0 0 1 0 1 0 
				-1    0 1 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 
				
				9
				1    0 0 2 0 0 0 1 0 0 0 
				-1    0 0 0 1 1 0 0 0 0 1 
				-1    0 0 1 1 0 0 0 0 0 0 
				-1    0 1 0 0 1 0 0 0 0 0 
				-2    0 0 0 0 1 1 0 0 0 0 
				1    0 0 1 0 0 0 0 1 0 0 
				-1    0 0 0 0 0 1 0 1 0 0 
				1    0 0 0 0 0 1 0 0 1 0 
				1    0 1 0 0 0 0 0 0 0 1 
				
				14
				-1    0 0 0 1 0 1 1 0 0 0 
				1    0 0 1 0 0 0 1 1 0 0 
				1    0 0 0 0 0 1 1 0 0 1 
				-1    1 0 0 1 0 0 0 0 0 0 
				1    0 0 0 2 0 0 0 0 0 0 
				-1    0 0 0 0 1 0 1 0 0 0 
				1    1 0 0 0 0 0 0 0 1 0 
				-1    0 0 0 1 0 0 0 0 1 0 
				-1    0 0 0 0 1 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 1 1 0 
				1    0 0 0 0 0 0 0 0 2 0 
				-1    0 0 0 1 0 0 0 0 0 1 
				-1    0 0 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				14
				-1    0 0 0 2 0 0 0 0 0 1 
				1    0 0 0 1 0 0 0 0 0 2 
				-1    0 1 0 1 0 0 0 0 0 0 
				-1    0 0 1 1 0 0 0 0 0 0 
				-1    0 0 0 1 0 1 0 0 0 0 
				-1    0 0 0 0 1 1 0 0 0 0 
				1    0 0 1 0 0 0 0 1 0 0 
				-1    0 0 0 0 0 1 0 1 0 0 
				1    0 1 0 0 0 0 0 0 1 0 
				1    0 0 1 0 0 0 0 0 1 0 
				1    0 0 1 0 0 0 0 0 0 1 
				1    0 0 0 0 0 1 0 0 0 1 
				-1    0 0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 1 
				
				9
				-1    0 0 0 0 0 2 1 0 0 0 
				1    0 0 0 1 0 0 0 0 1 1 
				-1    0 0 1 0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 0 1 0 0 
				-1    0 0 0 0 0 1 0 1 0 0 
				2    0 0 1 0 0 0 0 0 1 0 
				1    0 0 0 0 0 1 0 0 0 1 
				-1    0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 1 0 
				
				10
				-1    0 0 1 1 0 0 0 1 0 0 
				-1    0 0 1 0 1 0 0 1 0 0 
				1    0 0 1 0 0 0 0 2 0 0 
				-1    0 0 0 0 0 1 0 2 0 0 
				1    0 0 0 0 0 1 0 1 1 0 
				1    0 0 1 1 0 0 0 0 0 1 
				-1    0 0 0 1 0 1 0 0 0 1 
				1    0 0 0 0 0 1 0 1 0 1 
				2    0 0 2 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 2 0 0 0 0 
				
				7
				1    2 0 0 0 0 0 1 0 0 0 
				-1    0 0 0 0 0 0 1 0 2 0 
				-1    1 0 0 0 0 0 1 0 0 1 
				1    0 0 0 0 0 0 1 1 0 1 
				-3    1 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 
				-2    0 0 0 0 0 0 0 0 1 0 
				
				8
				1    1 1 0 0 0 0 1 0 0 0 
				1    0 1 0 0 1 0 1 0 0 0 
				-1    0 0 1 0 0 0 1 1 0 0 
				-1    0 0 1 0 0 0 1 0 1 0 
				1    1 0 0 0 0 0 0 0 0 1 
				1    0 0 0 0 1 0 0 0 0 1 
				1    0 0 0 0 0 0 0 1 0 1 
				1    0 0 0 0 0 0 0 0 1 1 
				
				14
				1    0 1 0 1 0 0 1 0 0 0 
				-1    0 0 1 0 1 0 1 0 0 0 
				-1    0 1 0 0 0 0 1 0 0 1 
				1    1 0 0 0 0 0 1 0 0 0 
				1    1 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 1 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 1 1 0 
				-1    0 0 0 0 0 0 0 0 2 0 
				1    0 0 0 1 0 0 0 0 0 1 
				1    0 0 0 0 0 0 0 1 0 1 
				1    0 0 0 0 0 0 0 0 1 1 
				-1    0 0 0 0 0 0 0 0 0 2 
				-1    0 0 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				11
				1    0 1 0 0 0 1 1 0 0 0 
				1    0 0 0 0 0 0 0 2 0 1 
				-1    0 0 0 0 1 0 0 0 1 1 
				-1    0 0 0 0 0 0 0 1 0 2 
				1    1 0 1 0 0 0 0 0 0 0 
				-1    0 0 1 0 1 0 0 0 0 0 
				1    0 1 0 0 0 0 0 1 0 0 
				-2    0 0 1 0 0 0 0 1 0 0 
				-1    0 0 1 0 0 0 0 0 1 0 
				1    0 0 1 0 0 0 0 0 0 1 
				1    0 0 0 0 0 1 0 0 0 1 
				
				10
				-1    0 0 1 1 0 0 1 0 0 0 
				1    0 0 1 0 0 0 1 1 0 0 
				1    1 0 0 0 0 0 1 0 0 0 
				1    1 0 0 0 0 0 0 0 1 0 
				1    0 0 0 1 0 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 1 1 0 
				-1    0 0 0 0 0 0 1 0 0 1 
				-1    0 0 0 0 0 0 0 0 1 1 
				-2    0 0 1 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 
				
				6
				-1    0 0 0 1 0 0 0 0 1 1 
				-1    0 0 1 1 0 0 0 0 0 0 
				1    0 0 1 0 1 0 0 0 0 0 
				1    0 1 0 0 0 0 1 0 0 0 
				1    0 1 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 1 
				
				7
				-1    0 0 1 0 0 1 1 0 0 0 
				1    0 0 1 1 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 1 0 
				1    0 0 0 0 0 1 0 0 1 0 
				-1    0 0 1 0 0 0 0 0 0 1 
				1    0 0 0 0 0 0 1 0 0 0 
				2    0 0 0 0 0 0 0 0 1 0 
				
				4
				-1    0 0 1 0 0 0 0 1 0 1 
				-1    0 0 0 0 0 1 0 0 1 1 
				1    0 0 2 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 
				
				7
				1    0 0 0 0 2 0 1 0 0 0 
				-1    0 0 0 0 0 0 1 2 0 0 
				-1    1 0 0 0 0 0 1 0 0 1 
				1    0 0 0 0 0 0 1 1 0 1 
				-1    1 0 0 0 0 0 0 0 0 0 
				2    0 0 0 0 1 0 0 0 0 0 
				3    0 0 0 0 0 0 0 1 0 0 
				
				8
				1    0 0 0 1 1 0 1 0 0 0 
				-1    0 0 0 0 1 0 1 1 0 0 
				1    0 0 0 0 0 0 1 1 1 0 
				-1    0 0 0 0 0 0 1 0 1 1 
				1    0 0 0 1 0 0 0 0 0 0 
				2    0 0 0 0 1 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 0 0 1 
				
				9
				1    0 0 0 0 1 1 1 0 0 0 
				1    0 0 1 0 0 0 1 1 0 0 
				-1    0 1 0 0 0 0 1 0 0 1 
				-1    0 0 1 0 0 0 1 0 0 1 
				-1    0 0 0 0 1 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 1 0 1 
				-1    0 1 0 0 0 0 0 0 0 0 
				-2    0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 
				
				7
				1    1 0 0 1 0 0 1 0 0 0 
				-1    0 0 0 1 0 0 1 1 0 0 
				1    0 0 0 0 0 0 1 2 0 0 
				-1    0 0 0 0 0 0 1 0 2 0 
				1    1 0 0 0 0 0 0 0 0 0 
				-3    0 0 0 0 0 0 0 1 0 0 
				-2    0 0 0 0 0 0 0 0 1 0 
				
				12
				1    0 1 0 1 0 0 1 0 0 0 
				1    0 0 0 0 1 1 1 0 0 0 
				-1    0 0 1 0 0 0 1 0 1 0 
				-1    0 0 0 1 0 0 0 1 0 0 
				1    0 0 0 0 1 0 0 1 0 0 
				-1    0 0 0 0 0 0 0 1 1 0 
				-1    0 0 0 0 0 0 1 0 0 1 
				1    0 0 0 0 0 0 0 1 0 1 
				1    0 1 0 0 0 0 0 0 0 0 
				-1    0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 
				
				9
				1    0 0 0 1 0 1 1 0 0 0 
				-1    0 0 0 0 0 1 1 1 0 0 
				-1    0 0 1 0 0 0 1 0 1 0 
				1    0 0 0 1 0 0 1 0 0 0 
				1    0 0 0 1 0 0 0 1 0 0 
				1    0 0 0 1 0 0 0 0 1 0 
				-1    0 0 1 0 0 0 0 0 0 0 
				2    0 0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 
				
				6
				-1    0 0 2 0 0 0 1 0 0 0 
				1    0 0 0 0 0 2 1 0 0 0 
				1    0 0 1 1 0 0 0 0 0 0 
				-1    0 0 1 0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 1 0 0 
				-1    0 0 0 0 0 1 0 0 0 1 
				</Polynomials>
        </Example>
        <Example>
            <ID>hunecke</ID>
            <Name>Hunecke</Name>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, hunecke, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>
            -w^5+5*w*u*x*y*z-u^5-x^5-y^5-z^5,w^3*u*z+w*u^3*x+w*y*z^3+u*x^3*y+x*y^3*z,w^2*u*x^2+w^2*y^2*z+w*u^2*z^2+u^2*x*y^2+x^2*y*z^2,w^2*u^3*y*z+w^2*u*x*z^3-w*u^2*x^4-2*w*u*x^2*y^2*z-w*y^4*z^2+u^5*x*y+x*y*z^5,w^4*u^2*x+2*w^2*u*x*y*z^2-w*u^5*z-w*u*x^2*y^3-w*y^5*z-u^3*x^2*y*z+x*y^2*z^4,-w^6*u-w^4*y*z^2+3*w^2*u^2*x*y*z-w*u^6-w*u*y^5+w*x^3*y^2*z-u^4*x^2*y+u*x*y^2*z^3,-w^5*u*x-w^3*x*y*z^2+w^2*u^4*z+2*w*u^2*x^2*y*z-w*u*y^3*z^2-u*x*y^5+x^4*y^2*z,-w^3*u^2*x*y+w^2*u*z^4-w*u^2*x^3*z-3*w*u*x*y^2*z^2+u^5*y*z+u*x^2*y^4+y^6*z+y*z^6</Equations>
            <GBasisLen>9</GBasisLen>
            <HilbertPolynomial>5/2s^3 - 5/2s^2 - 5s + 24</HilbertPolynomial>
            <Polynomials>
				8
				
				6
				-1    5 0 0 0 0 
				-1    0 5 0 0 0 
				-1    0 0 5 0 0 
				-1    0 0 0 5 0 
				5    1 1 1 1 1 
				-1    0 0 0 0 5 
				
				5
				1    1 3 1 0 0 
				1    0 1 3 1 0 
				1    3 1 0 0 1 
				1    0 0 1 3 1 
				1    1 0 0 1 3 
				
				5
				1    2 1 2 0 0 
				1    0 2 1 2 0 
				1    2 0 0 2 1 
				1    1 2 0 0 2 
				1    0 0 2 1 2 
				
				7
				1    1 1 5 0 0 
				-1    0 4 2 1 0 
				-2    2 2 1 1 1 
				1    1 0 3 2 1 
				-1    4 0 0 1 2 
				1    0 1 1 2 3 
				1    1 1 0 0 5 
				
				7
				1    1 2 4 0 0 
				-1    0 5 1 1 0 
				-1    2 3 0 1 1 
				2    1 1 2 2 1 
				1    1 0 0 4 2 
				-1    2 1 1 0 3 
				-1    0 0 1 1 5 
				
				8
				1    3 2 1 1 0 
				-1    0 1 2 4 0 
				1    1 2 3 0 1 
				-1    0 5 0 1 1 
				-1    0 0 0 6 1 
				3    1 1 1 2 2 
				-1    2 1 0 0 4 
				-1    0 0 0 1 6 
				
				7
				1    4 2 1 0 0 
				-1    1 1 2 3 0 
				-1    1 5 0 0 1 
				-1    0 3 2 1 1 
				-1    1 0 0 5 1 
				2    2 1 1 1 2 
				1    0 0 1 2 4 
				
				8
				1    0 6 1 0 0 
				1    0 1 6 0 0 
				1    2 4 0 0 1 
				-3    1 2 2 1 1 
				1    0 0 4 2 1 
				-1    3 0 1 1 2 
				-1    1 1 0 3 2 
				1    0 1 1 0 5 
				</Polynomials>
        </Example>
        <Example>
            <ID>i1</ID>
            <Name>I1</Name>
            <Description>\textbf{Title}: a sparse system, known as benchmark i1</Description>
            <References>H. Hong and V. Stahl: `Safe Starting Regions by Fixed Points and Tightening', Computing 53(3-4): 322-335, 1995.
            \\ R.E. Moore and S.T. Jones. Safe Starting Regions for Iterative Methods. SIAM J. Numer. Anal., 14(6):1051-1065, 1977.
            \\ Jan Verschelde. Homotopy Continuation Methods for solving Polynomial Systems. PhD thesis, Katholike Univ. Leuven, May 1996.</References>
            <Notes>The system is deficient w.r.t. the face normals\\   (1,1,0,0, 0,0,0,0, 0,0,0,0)\\   (0,0,1,1, 1,1,1,1, 0,0,0,0)\\   (0,0,2,2, 2,2,2,2, -2,0,1,1)\\   (0,0,2,2, 2,2,0,0, -2,0,1,1)\\   (0,0,2,2, 0,0,2,2, -2,0,1,1)\\   (0,0,0,0, 2,2,2,2, -2,0,1,1)</Notes>
            <Variables>x[1..12]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, i1, with_12_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_12_vars</TestEnvironment>
            <Equations>
            100000000*x[1]-18324757*x[3]*x[4]*x[9]-25428722,-16275449*x[1]*x[10]*x[6]+100000000*x[2]-37842197,-16955071*x[1]*x[10]*x[2]+100000000*x[3]-27162577,-7792658*x[1]*x[6]*x[7]+50000000*x[4]-9903957,-2493865*x[3]*x[6]*x[7]+12500000*x[5]-5520841,-18922793*x[10]*x[5]*x[8]+100000000*x[6]-14654113,-21180484*x[2]*x[5]*x[8]+100000000*x[7]-42937161,-8540604*x[1]*x[6]*x[7]+50000000*x[8]-3528219,-9806370*x[10]*x[6]*x[8]+50000000*x[9]-17252453,-10733272*x[1]*x[4]*x[8]+50000000*x[10]-21325551</Equations>
            <GBasisLen>118</GBasisLen>
            <HilbertPolynomial>33s^2 - 40s + 19</HilbertPolynomial>
            <Polynomials>
				10
				
				3
				-18324757    0 0 1 1 0 0 0 0 1 0 0 0 
				100000000    1 0 0 0 0 0 0 0 0 0 0 0 
				-25428722    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				-16275449    1 0 0 0 0 1 0 0 0 1 0 0 
				100000000    0 1 0 0 0 0 0 0 0 0 0 0 
				-37842197    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				-16955071    1 1 0 0 0 0 0 0 0 1 0 0 
				100000000    0 0 1 0 0 0 0 0 0 0 0 0 
				-27162577    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				-7792658    1 0 0 0 0 1 1 0 0 0 0 0 
				50000000    0 0 0 1 0 0 0 0 0 0 0 0 
				-9903957    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				-2493865    0 0 1 0 0 1 1 0 0 0 0 0 
				12500000    0 0 0 0 1 0 0 0 0 0 0 0 
				-5520841    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				-18922793    0 0 0 0 1 0 0 1 0 1 0 0 
				100000000    0 0 0 0 0 1 0 0 0 0 0 0 
				-14654113    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				-21180484    0 1 0 0 1 0 0 1 0 0 0 0 
				100000000    0 0 0 0 0 0 1 0 0 0 0 0 
				-42937161    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				-8540604    1 0 0 0 0 1 1 0 0 0 0 0 
				50000000    0 0 0 0 0 0 0 1 0 0 0 0 
				-3528219    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				-9806370    0 0 0 0 0 1 0 1 0 1 0 0 
				50000000    0 0 0 0 0 0 0 0 1 0 0 0 
				-17252453    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				-10733272    1 0 0 1 0 0 0 1 0 0 0 0 
				50000000    0 0 0 0 0 0 0 0 0 1 0 0 
				-21325551    0 0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>ilias12</ID>
            <Name>Ilias12</Name>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, ilias12, with_8_vars, hard_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>
            x-y+2*z-2*w,-4*u^2+8*u*v-4*u*s+8*u-4*v^2-4*v*r+8*v+r*s-4,6*u*x+6*u*y-28*u*z+12*u*w+4*u+2*x*v-x*r-2*x+2*v*y+4*v*z+4*v*w-12*v-y*r-2*y+8*r*z-2*r*w-4*r-4*z-4*w+12,-6*u*x-6*u*y-12*u*z+8*u*w+16*u-2*x*v+x*r+2*x-2*v*y-4*v*z+16*v*w-8*v+y*r+2*y+2*r*z+2*r*w-6*r+4*z-16*w+8,2*u*x+2*u*y-16*u*z+4*u*w+8*u+6*x*v-x*s-2*x+6*v*y-8*v*z+12*v*w-16*v-y*s-2*y-2*z*s+16*z-2*s*w+6*s-4*w-8,-2*u*x-2*u*y-4*u*z-4*u*w+12*u-6*x*v+x*s+2*x-6*v*y-12*v*z+28*v*w-4*v+y*s+2*y+2*z*s+4*z-8*s*w+4*s+4*w-12,x*z+x*w-2*x+y*z+y*w-2*y+2*z^2-6*z*w+2*w^2+2,u^3*x^2-1,v^3*y^2-1,r^3*z^2-1,s^3*w^2-1</Equations>
            <GBasisLen>-</GBasisLen>
            <HilbertPolynomial>-</HilbertPolynomial>
            <Polynomials>
				11
				
				4
				1    1 0 0 0 0 0 0 0 
				-1    0 1 0 0 0 0 0 0 
				2    0 0 1 0 0 0 0 0 
				-2    0 0 0 1 0 0 0 0 
				
				9
				-4    0 0 0 0 2 0 0 0 
				8    0 0 0 0 1 1 0 0 
				-4    0 0 0 0 0 2 0 0 
				-4    0 0 0 0 0 1 1 0 
				-4    0 0 0 0 1 0 0 1 
				1    0 0 0 0 0 0 1 1 
				8    0 0 0 0 1 0 0 0 
				8    0 0 0 0 0 1 0 0 
				-4    0 0 0 0 0 0 0 0 
				
				20
				6    1 0 0 0 1 0 0 0 
				6    0 1 0 0 1 0 0 0 
				-28    0 0 1 0 1 0 0 0 
				12    0 0 0 1 1 0 0 0 
				2    1 0 0 0 0 1 0 0 
				2    0 1 0 0 0 1 0 0 
				4    0 0 1 0 0 1 0 0 
				4    0 0 0 1 0 1 0 0 
				-1    1 0 0 0 0 0 1 0 
				-1    0 1 0 0 0 0 1 0 
				8    0 0 1 0 0 0 1 0 
				-2    0 0 0 1 0 0 1 0 
				-2    1 0 0 0 0 0 0 0 
				-2    0 1 0 0 0 0 0 0 
				-4    0 0 1 0 0 0 0 0 
				-4    0 0 0 1 0 0 0 0 
				4    0 0 0 0 1 0 0 0 
				-12    0 0 0 0 0 1 0 0 
				-4    0 0 0 0 0 0 1 0 
				12    0 0 0 0 0 0 0 0 
				
				20
				-6    1 0 0 0 1 0 0 0 
				-6    0 1 0 0 1 0 0 0 
				-12    0 0 1 0 1 0 0 0 
				8    0 0 0 1 1 0 0 0 
				-2    1 0 0 0 0 1 0 0 
				-2    0 1 0 0 0 1 0 0 
				-4    0 0 1 0 0 1 0 0 
				16    0 0 0 1 0 1 0 0 
				1    1 0 0 0 0 0 1 0 
				1    0 1 0 0 0 0 1 0 
				2    0 0 1 0 0 0 1 0 
				2    0 0 0 1 0 0 1 0 
				2    1 0 0 0 0 0 0 0 
				2    0 1 0 0 0 0 0 0 
				4    0 0 1 0 0 0 0 0 
				-16    0 0 0 1 0 0 0 0 
				16    0 0 0 0 1 0 0 0 
				-8    0 0 0 0 0 1 0 0 
				-6    0 0 0 0 0 0 1 0 
				8    0 0 0 0 0 0 0 0 
				
				20
				2    1 0 0 0 1 0 0 0 
				2    0 1 0 0 1 0 0 0 
				-16    0 0 1 0 1 0 0 0 
				4    0 0 0 1 1 0 0 0 
				6    1 0 0 0 0 1 0 0 
				6    0 1 0 0 0 1 0 0 
				-8    0 0 1 0 0 1 0 0 
				12    0 0 0 1 0 1 0 0 
				-1    1 0 0 0 0 0 0 1 
				-1    0 1 0 0 0 0 0 1 
				-2    0 0 1 0 0 0 0 1 
				-2    0 0 0 1 0 0 0 1 
				-2    1 0 0 0 0 0 0 0 
				-2    0 1 0 0 0 0 0 0 
				16    0 0 1 0 0 0 0 0 
				-4    0 0 0 1 0 0 0 0 
				8    0 0 0 0 1 0 0 0 
				-16    0 0 0 0 0 1 0 0 
				6    0 0 0 0 0 0 0 1 
				-8    0 0 0 0 0 0 0 0 
				
				20
				-2    1 0 0 0 1 0 0 0 
				-2    0 1 0 0 1 0 0 0 
				-4    0 0 1 0 1 0 0 0 
				-4    0 0 0 1 1 0 0 0 
				-6    1 0 0 0 0 1 0 0 
				-6    0 1 0 0 0 1 0 0 
				-12    0 0 1 0 0 1 0 0 
				28    0 0 0 1 0 1 0 0 
				1    1 0 0 0 0 0 0 1 
				1    0 1 0 0 0 0 0 1 
				2    0 0 1 0 0 0 0 1 
				-8    0 0 0 1 0 0 0 1 
				2    1 0 0 0 0 0 0 0 
				2    0 1 0 0 0 0 0 0 
				4    0 0 1 0 0 0 0 0 
				4    0 0 0 1 0 0 0 0 
				12    0 0 0 0 1 0 0 0 
				-4    0 0 0 0 0 1 0 0 
				4    0 0 0 0 0 0 0 1 
				-12    0 0 0 0 0 0 0 0 
				
				10
				1    1 0 1 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 
				2    0 0 2 0 0 0 0 0 
				1    1 0 0 1 0 0 0 0 
				1    0 1 0 1 0 0 0 0 
				-6    0 0 1 1 0 0 0 0 
				2    0 0 0 2 0 0 0 0 
				-2    1 0 0 0 0 0 0 0 
				-2    0 1 0 0 0 0 0 0 
				2    0 0 0 0 0 0 0 0 
				
				2
				1    2 0 0 0 3 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				2
				1    0 2 0 0 0 3 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				2
				1    0 0 2 0 0 0 3 0 
				-1    0 0 0 0 0 0 0 0 
				
				2
				1    0 0 0 2 0 0 0 3 
				-1    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>ilias_k_2</ID>
            <Name>Ilias_k_2</Name>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, ilias_k_2, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>
           2*s*u-2*s-4*u*r+u*v^2-2*u*v+u,-8*x*u*r+2*x*u*v^2+4*u*r*w-u*v^2*w+u*v*w-2*u*y+2*v*w-4*y,-x^2*u+x*u*w-x*w+2*x-u*z-2*z+w^2-w,-r*z*v-r*w*y+v*y^2-2,r^3*z^2-1,s^3*x^2-1,-4*r*z+r*w^2+z*v^2-v*w*y+y^2,u-2</Equations>
            <GBasisLen>125</GBasisLen>
            <HilbertPolynomial>144</HilbertPolynomial>
            <Polynomials>
				8
				
				6
				1    0 0 0 0 1 2 0 0 
				-2    0 0 0 0 1 1 0 0 
				-4    0 0 0 0 1 0 1 0 
				2    0 0 0 0 1 0 0 1 
				1    0 0 0 0 1 0 0 0 
				-2    0 0 0 0 0 0 0 1 
				
				8
				2    1 0 0 0 1 2 0 0 
				-1    0 0 0 1 1 2 0 0 
				1    0 0 0 1 1 1 0 0 
				-8    1 0 0 0 1 0 1 0 
				4    0 0 0 1 1 0 1 0 
				-2    0 1 0 0 1 0 0 0 
				2    0 0 0 1 0 1 0 0 
				-4    0 1 0 0 0 0 0 0 
				
				8
				-1    2 0 0 0 1 0 0 0 
				1    1 0 0 1 1 0 0 0 
				-1    1 0 0 1 0 0 0 0 
				1    0 0 0 2 0 0 0 0 
				-1    0 0 1 0 1 0 0 0 
				2    1 0 0 0 0 0 0 0 
				-2    0 0 1 0 0 0 0 0 
				-1    0 0 0 1 0 0 0 0 
				
				4
				1    0 2 0 0 0 1 0 0 
				-1    0 1 0 1 0 0 1 0 
				-1    0 0 1 0 0 1 1 0 
				-2    0 0 0 0 0 0 0 0 
				
				2
				1    0 0 2 0 0 0 3 0 
				-1    0 0 0 0 0 0 0 0 
				
				2
				1    2 0 0 0 0 0 0 3 
				-1    0 0 0 0 0 0 0 0 
				
				5
				-1    0 1 0 1 0 1 0 0 
				1    0 0 1 0 0 2 0 0 
				1    0 0 0 2 0 0 1 0 
				1    0 2 0 0 0 0 0 0 
				-4    0 0 1 0 0 0 1 0 
				
				2
				1    0 0 0 0 1 0 0 0 
				-2    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>ilias_k_3</ID>
            <Name>Ilias_k_3</Name>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, ilias_k_3, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>
            2*s*u-2*s-4*u*r+u*v^2-2*u*v+u,-8*x*u*r+2*x*u*v^2+4*u*r*w-u*v^2*w+u*v*w-2*u*y+2*v*w-4*y,-x^2*u+x*u*w-x*w+2*x-u*z-2*z+w^2-w,-r*z*v-r*w*y+v*y^2-2,r^3*z^2-1,s^3*x^2-1,-4*r*z+r*w^2+z*v^2-v*w*y+y^2,u-3</Equations>
            <GBasisLen>140</GBasisLen>
            <HilbertPolynomial>168</HilbertPolynomial>
            <Polynomials>
				8
				
				6
				1    0 0 0 0 1 2 0 0 
				-2    0 0 0 0 1 1 0 0 
				-4    0 0 0 0 1 0 1 0 
				2    0 0 0 0 1 0 0 1 
				1    0 0 0 0 1 0 0 0 
				-2    0 0 0 0 0 0 0 1 
				
				8
				2    1 0 0 0 1 2 0 0 
				-1    0 0 0 1 1 2 0 0 
				1    0 0 0 1 1 1 0 0 
				-8    1 0 0 0 1 0 1 0 
				4    0 0 0 1 1 0 1 0 
				-2    0 1 0 0 1 0 0 0 
				2    0 0 0 1 0 1 0 0 
				-4    0 1 0 0 0 0 0 0 
				
				8
				-1    2 0 0 0 1 0 0 0 
				1    1 0 0 1 1 0 0 0 
				-1    1 0 0 1 0 0 0 0 
				1    0 0 0 2 0 0 0 0 
				-1    0 0 1 0 1 0 0 0 
				2    1 0 0 0 0 0 0 0 
				-2    0 0 1 0 0 0 0 0 
				-1    0 0 0 1 0 0 0 0 
				
				4
				1    0 2 0 0 0 1 0 0 
				-1    0 1 0 1 0 0 1 0 
				-1    0 0 1 0 0 1 1 0 
				-2    0 0 0 0 0 0 0 0 
				
				2
				1    0 0 2 0 0 0 3 0 
				-1    0 0 0 0 0 0 0 0 
				
				2
				1    2 0 0 0 0 0 0 3 
				-1    0 0 0 0 0 0 0 0 
				
				5
				-1    0 1 0 1 0 1 0 0 
				1    0 0 1 0 0 2 0 0 
				1    0 0 0 2 0 0 1 0 
				1    0 2 0 0 0 0 0 0 
				-4    0 0 1 0 0 0 1 0 
				
				2
				1    0 0 0 0 1 0 0 0 
				-3    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>jcf26</ID>
            <Name>Jcf26</Name>
            <Variables>x[1..34]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, jcf26, with_34_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_34_vars</TestEnvironment>
            <Equations>
            2500*x[20]+2771,2500*x[21]+5809,500*x[22]+1009,625*x[23]+1562,10000*x[24]+31361,625*x[25]+1143,5000*x[14]+5113,10000*x[13]-5203,5000*x[12]+463,x[11]-1,2000*x[17]-2747,16000*x[16]+719,1000*x[15]-1799,625*x[19]+1134,10000*x[18]-18203,10000*x[5]+25081,10000*x[4]+9141,1250*x[3]+247,8000*x[2]+2661,10000*x[1]+25071,5000*x[8]-723,20000*x[7]+18129,2500000*x[6]-1471347,2500*x[10]+4891,2500*x[9]-1421,2*(-x[11]^2*x[5]+2*x[11]*x[5]*x[27]+x[20]^2*x[1]-x[20]^2*x[5]+x[21]^2*x[5]-x[25]^2*x[1]-x[1]^2*x[5]+x[1]*x[5]^2),2*(x[11]^2*x[2]*x[8]-x[11]^2*x[4]*x[6]-2*x[11]*x[2]*x[8]*x[27]+2*x[11]*x[4]*x[6]*x[27]-x[12]^2*x[1]*x[8]+2*x[12]*x[1]*x[8]*x[28]+x[14]^2*x[1]*x[6]-2*x[14]*x[1]*x[6]*x[26]+2*x[14]*x[1]*x[8]*x[26]-2*x[14]*x[1]*x[8]*x[28]-2*x[14]*x[2]*x[8]*x[26]+2*x[14]*x[2]*x[8]*x[27]+2*x[14]*x[4]*x[6]*x[26]-2*x[14]*x[4]*x[6]*x[27]-2*x[14]*x[10]*x[29]*x[33]+2*x[14]*x[10]*x[29]*x[34]+2*x[14]*x[10]*x[30]*x[32]-2*x[14]*x[10]*x[30]*x[34]-2*x[14]*x[10]*x[31]*x[32]+2*x[14]*x[10]*x[31]*x[33]-x[15]^2*x[1]*x[8]+2*x[15]*x[1]*x[8]*x[31]+x[17]^2*x[1]*x[6]-2*x[17]*x[1]*x[6]*x[29]+2*x[17]*x[1]*x[8]*x[29]-2*x[17]*x[1]*x[8]*x[31]-2*x[17]*x[2]*x[8]*x[29]+2*x[17]*x[2]*x[8]*x[30]+2*x[17]*x[4]*x[6]*x[29]-2*x[17]*x[4]*x[6]*x[30]+2*x[17]*x[10]*x[26]*x[33]-2*x[17]*x[10]*x[26]*x[34]-2*x[17]*x[10]*x[27]*x[32]+2*x[17]*x[10]*x[27]*x[34]+2*x[17]*x[10]*x[28]*x[32]-2*x[17]*x[10]*x[28]*x[33]+x[19]^2*x[1]*x[6]-2*x[19]*x[1]*x[6]*x[32]+2*x[19]*x[1]*x[8]*x[32]-2*x[19]*x[1]*x[8]*x[34]-2*x[19]*x[2]*x[8]*x[32]+2*x[19]*x[2]*x[8]*x[33]+2*x[19]*x[4]*x[6]*x[32]-2*x[19]*x[4]*x[6]*x[33]-2*x[19]*x[10]*x[26]*x[30]+2*x[19]*x[10]*x[26]*x[31]+2*x[19]*x[10]*x[27]*x[29]-2*x[19]*x[10]*x[27]*x[31]-2*x[19]*x[10]*x[28]*x[29]+2*x[19]*x[10]*x[28]*x[30]+x[20]^2*x[1]*x[6]-x[20]^2*x[1]*x[8]+x[20]^2*x[2]*x[8]-x[20]^2*x[4]*x[6]-x[21]^2*x[2]*x[8]+x[21]^2*x[4]*x[6]+x[22]^2*x[1]*x[8]-x[24]^2*x[1]*x[6]+x[1]^2*x[2]*x[8]-x[1]^2*x[4]*x[6]-x[1]*x[2]^2*x[8]+x[1]*x[4]^2*x[6]-x[1]*x[6]^2*x[8]+x[1]*x[6]*x[8]^2+x[1]*x[6]*x[10]^2+2*x[10]*x[26]*x[30]*x[34]-2*x[10]*x[26]*x[31]*x[33]-2*x[10]*x[27]*x[29]*x[34]+2*x[10]*x[27]*x[31]*x[32]+2*x[10]*x[28]*x[29]*x[33]-2*x[10]*x[28]*x[30]*x[32]),2*(x[11]^2*x[2]*x[7]-x[11]^2*x[3]*x[6]-2*x[11]*x[2]*x[7]*x[27]+2*x[11]*x[3]*x[6]*x[27]-x[12]^2*x[1]*x[7]+2*x[12]*x[1]*x[7]*x[28]+x[13]^2*x[1]*x[6]-2*x[13]*x[1]*x[6]*x[26]+2*x[13]*x[1]*x[7]*x[26]-2*x[13]*x[1]*x[7]*x[28]-2*x[13]*x[2]*x[7]*x[26]+2*x[13]*x[2]*x[7]*x[27]+2*x[13]*x[3]*x[6]*x[26]-2*x[13]*x[3]*x[6]*x[27]-2*x[13]*x[9]*x[29]*x[33]+2*x[13]*x[9]*x[29]*x[34]+2*x[13]*x[9]*x[30]*x[32]-2*x[13]*x[9]*x[30]*x[34]-2*x[13]*x[9]*x[31]*x[32]+2*x[13]*x[9]*x[31]*x[33]-x[15]^2*x[1]*x[7]+2*x[15]*x[1]*x[7]*x[31]+x[16]^2*x[1]*x[6]-2*x[16]*x[1]*x[6]*x[29]+2*x[16]*x[1]*x[7]*x[29]-2*x[16]*x[1]*x[7]*x[31]-2*x[16]*x[2]*x[7]*x[29]+2*x[16]*x[2]*x[7]*x[30]+2*x[16]*x[3]*x[6]*x[29]-2*x[16]*x[3]*x[6]*x[30]+2*x[16]*x[9]*x[26]*x[33]-2*x[16]*x[9]*x[26]*x[34]-2*x[16]*x[9]*x[27]*x[32]+2*x[16]*x[9]*x[27]*x[34]+2*x[16]*x[9]*x[28]*x[32]-2*x[16]*x[9]*x[28]*x[33]+x[18]^2*x[1]*x[6]-2*x[18]*x[1]*x[6]*x[32]+2*x[18]*x[1]*x[7]*x[32]-2*x[18]*x[1]*x[7]*x[34]-2*x[18]*x[2]*x[7]*x[32]+2*x[18]*x[2]*x[7]*x[33]+2*x[18]*x[3]*x[6]*x[32]-2*x[18]*x[3]*x[6]*x[33]-2*x[18]*x[9]*x[26]*x[30]+2*x[18]*x[9]*x[26]*x[31]+2*x[18]*x[9]*x[27]*x[29]-2*x[18]*x[9]*x[27]*x[31]-2*x[18]*x[9]*x[28]*x[29]+2*x[18]*x[9]*x[28]*x[30]+x[20]^2*x[1]*x[6]-x[20]^2*x[1]*x[7]+x[20]^2*x[2]*x[7]-x[20]^2*x[3]*x[6]-x[21]^2*x[2]*x[7]+x[21]^2*x[3]*x[6]+x[22]^2*x[1]*x[7]-x[23]^2*x[1]*x[6]+x[1]^2*x[2]*x[7]-x[1]^2*x[3]*x[6]-x[1]*x[2]^2*x[7]+x[1]*x[3]^2*x[6]-x[1]*x[6]^2*x[7]+x[1]*x[6]*x[7]^2+x[1]*x[6]*x[9]^2+2*x[9]*x[26]*x[30]*x[34]-2*x[9]*x[26]*x[31]*x[33]-2*x[9]*x[27]*x[29]*x[34]+2*x[9]*x[27]*x[31]*x[32]+2*x[9]*x[28]*x[29]*x[33]-2*x[9]*x[28]*x[30]*x[32]),x[11]^2-2*x[11]*x[27]+x[12]^2-2*x[12]*x[28]+x[15]^2-2*x[15]*x[31]-x[21]^2-x[22]^2+x[1]^2-2*x[1]*x[2]+x[2]^2+x[6]^2+2*x[27]*x[28]+2*x[30]*x[31]+2*x[33]*x[34],x[12]^2-2*x[12]*x[28]+x[15]^2-2*x[15]*x[31]-x[20]^2-x[22]^2+x[2]^2+x[6]^2+2*x[26]*x[28]+2*x[29]*x[31]+2*x[32]*x[34],x[11]^2-2*x[11]*x[27]-x[20]^2-x[21]^2+x[1]^2+2*x[26]*x[27]+2*x[29]*x[30]+2*x[32]*x[33],x[12]^2-2*x[12]*x[28]+x[15]^2-2*x[15]*x[31]-x[22]^2+x[28]^2+x[31]^2+x[34]^2,x[11]^2-2*x[11]*x[27]-x[21]^2+x[27]^2+x[30]^2+x[33]^2,-x[20]^2+x[26]^2+x[29]^2+x[32]^2</Equations>
            <GBasisLen>79</GBasisLen>
            <HilbertPolynomial>40</HilbertPolynomial>
            <Polynomials>
				34
				
				2
				2500    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2771    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				2500    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
				5809    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				500    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
				1009    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				625    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
				1562    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				10000    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
				31361    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				625    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				1143    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				5000    0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				5113    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				10000    0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-5203    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				5000    0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				463    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				1    0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				2000    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2747    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				16000    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				719    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				1000    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1799    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				625    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1134    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				10000    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-18203    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				10000    0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				25081    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				10000    0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				9141    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				1250    0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				247    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				8000    0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2661    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				10000    1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				25071    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				5000    0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-723    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				20000    0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				18129    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				2500000    0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1471347    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				2500    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				4891    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				2
				2500    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1421    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				8
				-2    2 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 
				4    0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				
				71
				-2    2 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    2 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 1 0 1 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    0 1 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 
				-4    1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
				4    0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
				4    1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
				-4    0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
				4    0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				-4    0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				-4    0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				4    0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				4    1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
				-4    1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
				-4    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
				4    0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
				4    1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
				-4    0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 
				-4    0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
				4    0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
				4    1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
				-4    1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 
				-4    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
				4    0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
				4    1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
				-4    0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 
				-4    0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
				4    0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 
				-4    1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 
				4    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 
				
				71
				-2    2 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    2 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 1 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    0 1 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 
				2    1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 
				-4    1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
				4    0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
				4    1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
				-4    0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
				4    0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				-4    0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				-4    0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				4    0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				4    1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
				-4    1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
				-4    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
				4    0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
				4    1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
				-4    0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
				4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 
				-4    0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
				4    0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 
				4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
				4    1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
				-4    1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
				4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 
				-4    1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
				4    0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
				4    1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
				-4    0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 
				4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 
				4    0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 
				4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 
				-4    0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
				4    0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
				4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 
				4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 
				4    0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 
				-4    1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
				4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 
				4    0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 
				-4    0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 
				4    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 
				
				15
				1    2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
				2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
				2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 
				2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
				
				11
				1    0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
				2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
				2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 
				2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 
				
				8
				1    2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 
				2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 
				2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
				
				8
				1    0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 
				
				6
				1    0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 
				
				4
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>katsura10</ID>
            <Name>Katsura10</Name>
            <Description>\textbf{Title}: Katsura $n$, a problem of magnetism in physics.</Description>
            <Variables>x[1..11]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, katsura10, with_11_vars</TagsList>
            <TestEnvironment>rings_with_11_vars</TestEnvironment>
            <Equations>
            x[1]^2-x[1]+2*x[2]^2+2*x[11]^2+2*x[3]^2+2*x[4]^2+2*x[5]^2+2*x[6]^2+2*x[7]^2+2*x[8]^2+2*x[9]^2+2*x[10]^2,2*x[1]*x[2]+2*x[2]*x[3]-x[2]+2*x[11]*x[10]+2*x[3]*x[4]+2*x[4]*x[5]+2*x[5]*x[6]+2*x[6]*x[7]+2*x[7]*x[8]+2*x[8]*x[9]+2*x[9]*x[10],2*x[1]*x[3]+x[2]^2+2*x[2]*x[4]+2*x[11]*x[9]+2*x[3]*x[5]-x[3]+2*x[4]*x[6]+2*x[5]*x[7]+2*x[6]*x[8]+2*x[7]*x[9]+2*x[8]*x[10],2*x[1]*x[4]+2*x[2]*x[3]+2*x[2]*x[5]+2*x[11]*x[8]+2*x[3]*x[6]+2*x[4]*x[7]-x[4]+2*x[5]*x[8]+2*x[6]*x[9]+2*x[7]*x[10],2*x[1]*x[5]+2*x[2]*x[4]+2*x[2]*x[6]+2*x[11]*x[7]+x[3]^2+2*x[3]*x[7]+2*x[4]*x[8]+2*x[5]*x[9]-x[5]+2*x[6]*x[10],2*x[1]*x[6]+2*x[2]*x[5]+2*x[2]*x[7]+2*x[11]*x[6]+2*x[3]*x[4]+2*x[3]*x[8]+2*x[4]*x[9]+2*x[5]*x[10]-x[6],2*x[1]*x[7]+2*x[2]*x[6]+2*x[2]*x[8]+2*x[11]*x[5]+2*x[3]*x[5]+2*x[3]*x[9]+x[4]^2+2*x[4]*x[10]-x[7],2*x[1]*x[8]+2*x[2]*x[7]+2*x[2]*x[9]+2*x[11]*x[4]+2*x[3]*x[6]+2*x[3]*x[10]+2*x[4]*x[5]-x[8],2*x[1]*x[9]+2*x[2]*x[8]+2*x[2]*x[10]+2*x[11]*x[3]+2*x[3]*x[7]+2*x[4]*x[6]+x[5]^2-x[9],2*x[1]*x[10]+2*x[2]*x[11]+2*x[2]*x[9]+2*x[3]*x[8]+2*x[4]*x[7]+2*x[5]*x[6]-x[10],x[1]+2*x[2]+2*x[11]+2*x[3]+2*x[4]+2*x[5]+2*x[6]+2*x[7]+2*x[8]+2*x[9]+2*x[10]-1</Equations>
            <GBasisLen>537</GBasisLen>
            <HilbertPolynomial>1024</HilbertPolynomial>
            <Polynomials>
				11
				
				12
				1    2 0 0 0 0 0 0 0 0 0 0 
				2    0 2 0 0 0 0 0 0 0 0 0 
				2    0 0 2 0 0 0 0 0 0 0 0 
				2    0 0 0 2 0 0 0 0 0 0 0 
				2    0 0 0 0 2 0 0 0 0 0 0 
				2    0 0 0 0 0 2 0 0 0 0 0 
				2    0 0 0 0 0 0 2 0 0 0 0 
				2    0 0 0 0 0 0 0 2 0 0 0 
				2    0 0 0 0 0 0 0 0 2 0 0 
				2    0 0 0 0 0 0 0 0 0 2 0 
				2    0 0 0 0 0 0 0 0 0 0 2 
				-1    1 0 0 0 0 0 0 0 0 0 0 
				
				11
				2    1 1 0 0 0 0 0 0 0 0 0 
				2    0 1 1 0 0 0 0 0 0 0 0 
				2    0 0 1 1 0 0 0 0 0 0 0 
				2    0 0 0 1 1 0 0 0 0 0 0 
				2    0 0 0 0 1 1 0 0 0 0 0 
				2    0 0 0 0 0 1 1 0 0 0 0 
				2    0 0 0 0 0 0 1 1 0 0 0 
				2    0 0 0 0 0 0 0 1 1 0 0 
				2    0 0 0 0 0 0 0 0 1 1 0 
				2    0 0 0 0 0 0 0 0 0 1 1 
				-1    0 1 0 0 0 0 0 0 0 0 0 
				
				11
				1    0 2 0 0 0 0 0 0 0 0 0 
				2    1 0 1 0 0 0 0 0 0 0 0 
				2    0 1 0 1 0 0 0 0 0 0 0 
				2    0 0 1 0 1 0 0 0 0 0 0 
				2    0 0 0 1 0 1 0 0 0 0 0 
				2    0 0 0 0 1 0 1 0 0 0 0 
				2    0 0 0 0 0 1 0 1 0 0 0 
				2    0 0 0 0 0 0 1 0 1 0 0 
				2    0 0 0 0 0 0 0 1 0 1 0 
				2    0 0 0 0 0 0 0 0 1 0 1 
				-1    0 0 1 0 0 0 0 0 0 0 0 
				
				10
				2    0 1 1 0 0 0 0 0 0 0 0 
				2    1 0 0 1 0 0 0 0 0 0 0 
				2    0 1 0 0 1 0 0 0 0 0 0 
				2    0 0 1 0 0 1 0 0 0 0 0 
				2    0 0 0 1 0 0 1 0 0 0 0 
				2    0 0 0 0 1 0 0 1 0 0 0 
				2    0 0 0 0 0 1 0 0 1 0 0 
				2    0 0 0 0 0 0 1 0 0 1 0 
				2    0 0 0 0 0 0 0 1 0 0 1 
				-1    0 0 0 1 0 0 0 0 0 0 0 
				
				10
				1    0 0 2 0 0 0 0 0 0 0 0 
				2    0 1 0 1 0 0 0 0 0 0 0 
				2    1 0 0 0 1 0 0 0 0 0 0 
				2    0 1 0 0 0 1 0 0 0 0 0 
				2    0 0 1 0 0 0 1 0 0 0 0 
				2    0 0 0 1 0 0 0 1 0 0 0 
				2    0 0 0 0 1 0 0 0 1 0 0 
				2    0 0 0 0 0 1 0 0 0 1 0 
				2    0 0 0 0 0 0 1 0 0 0 1 
				-1    0 0 0 0 1 0 0 0 0 0 0 
				
				9
				2    0 0 1 1 0 0 0 0 0 0 0 
				2    0 1 0 0 1 0 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 0 
				2    0 1 0 0 0 0 1 0 0 0 0 
				2    0 0 1 0 0 0 0 1 0 0 0 
				2    0 0 0 1 0 0 0 0 1 0 0 
				2    0 0 0 0 1 0 0 0 0 1 0 
				2    0 0 0 0 0 1 0 0 0 0 1 
				-1    0 0 0 0 0 1 0 0 0 0 0 
				
				9
				1    0 0 0 2 0 0 0 0 0 0 0 
				2    0 0 1 0 1 0 0 0 0 0 0 
				2    0 1 0 0 0 1 0 0 0 0 0 
				2    1 0 0 0 0 0 1 0 0 0 0 
				2    0 1 0 0 0 0 0 1 0 0 0 
				2    0 0 1 0 0 0 0 0 1 0 0 
				2    0 0 0 1 0 0 0 0 0 1 0 
				2    0 0 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 1 0 0 0 0 
				
				8
				2    0 0 0 1 1 0 0 0 0 0 0 
				2    0 0 1 0 0 1 0 0 0 0 0 
				2    0 1 0 0 0 0 1 0 0 0 0 
				2    1 0 0 0 0 0 0 1 0 0 0 
				2    0 1 0 0 0 0 0 0 1 0 0 
				2    0 0 1 0 0 0 0 0 0 1 0 
				2    0 0 0 1 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 1 0 0 0 
				
				8
				1    0 0 0 0 2 0 0 0 0 0 0 
				2    0 0 0 1 0 1 0 0 0 0 0 
				2    0 0 1 0 0 0 1 0 0 0 0 
				2    0 1 0 0 0 0 0 1 0 0 0 
				2    1 0 0 0 0 0 0 0 1 0 0 
				2    0 1 0 0 0 0 0 0 0 1 0 
				2    0 0 1 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 1 0 0 
				
				7
				2    0 0 0 0 1 1 0 0 0 0 0 
				2    0 0 0 1 0 0 1 0 0 0 0 
				2    0 0 1 0 0 0 0 1 0 0 0 
				2    0 1 0 0 0 0 0 0 1 0 0 
				2    1 0 0 0 0 0 0 0 0 1 0 
				2    0 1 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 1 0 
				
				12
				1    1 0 0 0 0 0 0 0 0 0 0 
				2    0 1 0 0 0 0 0 0 0 0 0 
				2    0 0 1 0 0 0 0 0 0 0 0 
				2    0 0 0 1 0 0 0 0 0 0 0 
				2    0 0 0 0 1 0 0 0 0 0 0 
				2    0 0 0 0 0 1 0 0 0 0 0 
				2    0 0 0 0 0 0 1 0 0 0 0 
				2    0 0 0 0 0 0 0 1 0 0 0 
				2    0 0 0 0 0 0 0 0 1 0 0 
				2    0 0 0 0 0 0 0 0 0 1 0 
				2    0 0 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>katsura6</ID>
            <Name>Katsura6</Name>
            <Description>\textbf{Title}: Katsura $n$, a problem of magnetism in physics.</Description>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, katsura6, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>
            x^2-x+2*y^2+2*z^2+2*w^2+2*u^2+2*v^2+2*r^2,2*x*y+2*y*z-y+2*z*w+2*w*u+2*u*v+2*v*r,2*x*z+y^2+2*y*w+2*z*u-z+2*w*v+2*u*r,2*x*w+2*y*z+2*y*u+2*z*v+2*w*r-w,2*x*u+2*y*w+2*y*v+z^2+2*z*r-u,2*x*v+2*y*u+2*y*r+2*z*w-v,x+2*y+2*z+2*w+2*u+2*v+2*r-1</Equations>
            <GBasisLen>41</GBasisLen>
            <HilbertPolynomial>64</HilbertPolynomial>
            <Polynomials>
				7
				
				8
				1    2 0 0 0 0 0 0 
				2    0 2 0 0 0 0 0 
				2    0 0 2 0 0 0 0 
				2    0 0 0 2 0 0 0 
				2    0 0 0 0 2 0 0 
				2    0 0 0 0 0 2 0 
				2    0 0 0 0 0 0 2 
				-1    1 0 0 0 0 0 0 
				
				7
				2    1 1 0 0 0 0 0 
				2    0 1 1 0 0 0 0 
				2    0 0 1 1 0 0 0 
				2    0 0 0 1 1 0 0 
				2    0 0 0 0 1 1 0 
				2    0 0 0 0 0 1 1 
				-1    0 1 0 0 0 0 0 
				
				7
				1    0 2 0 0 0 0 0 
				2    1 0 1 0 0 0 0 
				2    0 1 0 1 0 0 0 
				2    0 0 1 0 1 0 0 
				2    0 0 0 1 0 1 0 
				2    0 0 0 0 1 0 1 
				-1    0 0 1 0 0 0 0 
				
				6
				2    0 1 1 0 0 0 0 
				2    1 0 0 1 0 0 0 
				2    0 1 0 0 1 0 0 
				2    0 0 1 0 0 1 0 
				2    0 0 0 1 0 0 1 
				-1    0 0 0 1 0 0 0 
				
				6
				1    0 0 2 0 0 0 0 
				2    0 1 0 1 0 0 0 
				2    1 0 0 0 1 0 0 
				2    0 1 0 0 0 1 0 
				2    0 0 1 0 0 0 1 
				-1    0 0 0 0 1 0 0 
				
				5
				2    0 0 1 1 0 0 0 
				2    0 1 0 0 1 0 0 
				2    1 0 0 0 0 1 0 
				2    0 1 0 0 0 0 1 
				-1    0 0 0 0 0 1 0 
				
				8
				1    1 0 0 0 0 0 0 
				2    0 1 0 0 0 0 0 
				2    0 0 1 0 0 0 0 
				2    0 0 0 1 0 0 0 
				2    0 0 0 0 1 0 0 
				2    0 0 0 0 0 1 0 
				2    0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>katsura7</ID>
            <Name>Katsura7</Name>
            <Description>\textbf{Title}: Katsura $n$, a problem of magnetism in physics.</Description>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, katsura7, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>
            x^2-x+2*y^2+2*z^2+2*w^2+2*u^2+2*v^2+2*r^2+2*s^2,2*x*y+2*y*z-y+2*z*w+2*w*u+2*u*v+2*v*r+2*r*s,2*x*z+y^2+2*y*w+2*z*u-z+2*w*v+2*u*r+2*v*s,2*x*w+2*y*z+2*y*u+2*z*v+2*w*r-w+2*u*s,2*x*u+2*y*w+2*y*v+z^2+2*z*r+2*w*s-u,2*x*v+2*y*u+2*y*r+2*z*w+2*z*s-v,2*x*r+2*y*v+2*y*s+2*z*u+w^2-r,x+2*y+2*z+2*w+2*u+2*v+2*r+2*s-1</Equations>
            <GBasisLen>74</GBasisLen>
            <HilbertPolynomial>128</HilbertPolynomial>
            <Polynomials>
				8
				
				9
				1    2 0 0 0 0 0 0 0 
				2    0 2 0 0 0 0 0 0 
				2    0 0 2 0 0 0 0 0 
				2    0 0 0 2 0 0 0 0 
				2    0 0 0 0 2 0 0 0 
				2    0 0 0 0 0 2 0 0 
				2    0 0 0 0 0 0 2 0 
				2    0 0 0 0 0 0 0 2 
				-1    1 0 0 0 0 0 0 0 
				
				8
				2    1 1 0 0 0 0 0 0 
				2    0 1 1 0 0 0 0 0 
				2    0 0 1 1 0 0 0 0 
				2    0 0 0 1 1 0 0 0 
				2    0 0 0 0 1 1 0 0 
				2    0 0 0 0 0 1 1 0 
				2    0 0 0 0 0 0 1 1 
				-1    0 1 0 0 0 0 0 0 
				
				8
				1    0 2 0 0 0 0 0 0 
				2    1 0 1 0 0 0 0 0 
				2    0 1 0 1 0 0 0 0 
				2    0 0 1 0 1 0 0 0 
				2    0 0 0 1 0 1 0 0 
				2    0 0 0 0 1 0 1 0 
				2    0 0 0 0 0 1 0 1 
				-1    0 0 1 0 0 0 0 0 
				
				7
				2    0 1 1 0 0 0 0 0 
				2    1 0 0 1 0 0 0 0 
				2    0 1 0 0 1 0 0 0 
				2    0 0 1 0 0 1 0 0 
				2    0 0 0 1 0 0 1 0 
				2    0 0 0 0 1 0 0 1 
				-1    0 0 0 1 0 0 0 0 
				
				7
				1    0 0 2 0 0 0 0 0 
				2    0 1 0 1 0 0 0 0 
				2    1 0 0 0 1 0 0 0 
				2    0 1 0 0 0 1 0 0 
				2    0 0 1 0 0 0 1 0 
				2    0 0 0 1 0 0 0 1 
				-1    0 0 0 0 1 0 0 0 
				
				6
				2    0 0 1 1 0 0 0 0 
				2    0 1 0 0 1 0 0 0 
				2    1 0 0 0 0 1 0 0 
				2    0 1 0 0 0 0 1 0 
				2    0 0 1 0 0 0 0 1 
				-1    0 0 0 0 0 1 0 0 
				
				6
				1    0 0 0 2 0 0 0 0 
				2    0 0 1 0 1 0 0 0 
				2    0 1 0 0 0 1 0 0 
				2    1 0 0 0 0 0 1 0 
				2    0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 1 0 
				
				9
				1    1 0 0 0 0 0 0 0 
				2    0 1 0 0 0 0 0 0 
				2    0 0 1 0 0 0 0 0 
				2    0 0 0 1 0 0 0 0 
				2    0 0 0 0 1 0 0 0 
				2    0 0 0 0 0 1 0 0 
				2    0 0 0 0 0 0 1 0 
				2    0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>katsura8</ID>
            <Name>Katsura8</Name>
            <Description>\textbf{Title}: Katsura $n$, a problem of magnetism in physics.</Description>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, katsura8, with_9_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>
            x^2-x+2*y^2+2*z^2+2*w^2+2*u^2+2*v^2+2*r^2+2*s^2+2*t^2,2*x*y+2*y*z-y+2*z*w+2*w*u+2*u*v+2*v*r+2*r*s+2*s*t,2*x*z+y^2+2*y*w+2*z*u-z+2*w*v+2*u*r+2*v*s+2*r*t,2*x*w+2*y*z+2*y*u+2*z*v+2*w*r-w+2*u*s+2*v*t,2*x*u+2*y*w+2*y*v+z^2+2*z*r+2*w*s+2*u*t-u,2*x*v+2*y*u+2*y*r+2*z*w+2*z*s+2*w*t-v,2*x*r+2*y*v+2*y*s+2*z*u+2*z*t+w^2-r,2*x*s+2*y*r+2*y*t+2*z*v+2*w*u-s,x+2*y+2*z+2*w+2*u+2*v+2*r+2*s+2*t-1</Equations>
            <GBasisLen>143</GBasisLen>
            <HilbertPolynomial>256</HilbertPolynomial>
            <Polynomials>
				9
				
				10
				1    2 0 0 0 0 0 0 0 0 
				2    0 2 0 0 0 0 0 0 0 
				2    0 0 2 0 0 0 0 0 0 
				2    0 0 0 2 0 0 0 0 0 
				2    0 0 0 0 2 0 0 0 0 
				2    0 0 0 0 0 2 0 0 0 
				2    0 0 0 0 0 0 2 0 0 
				2    0 0 0 0 0 0 0 2 0 
				2    0 0 0 0 0 0 0 0 2 
				-1    1 0 0 0 0 0 0 0 0 
				
				9
				2    1 1 0 0 0 0 0 0 0 
				2    0 1 1 0 0 0 0 0 0 
				2    0 0 1 1 0 0 0 0 0 
				2    0 0 0 1 1 0 0 0 0 
				2    0 0 0 0 1 1 0 0 0 
				2    0 0 0 0 0 1 1 0 0 
				2    0 0 0 0 0 0 1 1 0 
				2    0 0 0 0 0 0 0 1 1 
				-1    0 1 0 0 0 0 0 0 0 
				
				9
				1    0 2 0 0 0 0 0 0 0 
				2    1 0 1 0 0 0 0 0 0 
				2    0 1 0 1 0 0 0 0 0 
				2    0 0 1 0 1 0 0 0 0 
				2    0 0 0 1 0 1 0 0 0 
				2    0 0 0 0 1 0 1 0 0 
				2    0 0 0 0 0 1 0 1 0 
				2    0 0 0 0 0 0 1 0 1 
				-1    0 0 1 0 0 0 0 0 0 
				
				8
				2    0 1 1 0 0 0 0 0 0 
				2    1 0 0 1 0 0 0 0 0 
				2    0 1 0 0 1 0 0 0 0 
				2    0 0 1 0 0 1 0 0 0 
				2    0 0 0 1 0 0 1 0 0 
				2    0 0 0 0 1 0 0 1 0 
				2    0 0 0 0 0 1 0 0 1 
				-1    0 0 0 1 0 0 0 0 0 
				
				8
				1    0 0 2 0 0 0 0 0 0 
				2    0 1 0 1 0 0 0 0 0 
				2    1 0 0 0 1 0 0 0 0 
				2    0 1 0 0 0 1 0 0 0 
				2    0 0 1 0 0 0 1 0 0 
				2    0 0 0 1 0 0 0 1 0 
				2    0 0 0 0 1 0 0 0 1 
				-1    0 0 0 0 1 0 0 0 0 
				
				7
				2    0 0 1 1 0 0 0 0 0 
				2    0 1 0 0 1 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 
				2    0 1 0 0 0 0 1 0 0 
				2    0 0 1 0 0 0 0 1 0 
				2    0 0 0 1 0 0 0 0 1 
				-1    0 0 0 0 0 1 0 0 0 
				
				7
				1    0 0 0 2 0 0 0 0 0 
				2    0 0 1 0 1 0 0 0 0 
				2    0 1 0 0 0 1 0 0 0 
				2    1 0 0 0 0 0 1 0 0 
				2    0 1 0 0 0 0 0 1 0 
				2    0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 1 0 0 
				
				6
				2    0 0 0 1 1 0 0 0 0 
				2    0 0 1 0 0 1 0 0 0 
				2    0 1 0 0 0 0 1 0 0 
				2    1 0 0 0 0 0 0 1 0 
				2    0 1 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 1 0 
				
				10
				1    1 0 0 0 0 0 0 0 0 
				2    0 1 0 0 0 0 0 0 0 
				2    0 0 1 0 0 0 0 0 0 
				2    0 0 0 1 0 0 0 0 0 
				2    0 0 0 0 1 0 0 0 0 
				2    0 0 0 0 0 1 0 0 0 
				2    0 0 0 0 0 0 1 0 0 
				2    0 0 0 0 0 0 0 1 0 
				2    0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>katsura9</ID>
            <Name>Katsura9</Name>
            <Description>\textbf{Title}: Katsura $n$, a problem of magnetism in physics.</Description>
            <Variables>x,y,z,w,u,v,r,s,t,p</Variables>
            <TagsList>DevRevLex, DegLex, Lex, katsura9, with_10_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_10_vars</TestEnvironment>
            <Equations>
            x^2-x+2*y^2+2*z^2+2*w^2+2*u^2+2*v^2+2*r^2+2*s^2+2*t^2+2*p^2,2*x*y+2*y*z-y+2*z*w+2*w*u+2*u*v+2*v*r+2*r*s+2*s*t+2*t*p,2*x*z+y^2+2*y*w+2*z*u-z+2*w*v+2*u*r+2*v*s+2*r*t+2*s*p,2*x*w+2*y*z+2*y*u+2*z*v+2*w*r-w+2*u*s+2*v*t+2*r*p,2*x*u+2*y*w+2*y*v+z^2+2*z*r+2*w*s+2*u*t-u+2*v*p,2*x*v+2*y*u+2*y*r+2*z*w+2*z*s+2*w*t+2*u*p-v,2*x*r+2*y*v+2*y*s+2*z*u+2*z*t+w^2+2*w*p-r,2*x*s+2*y*r+2*y*t+2*z*v+2*z*p+2*w*u-s,2*x*t+2*y*s+2*y*p+2*z*r+2*w*v+u^2-t,x+2*y+2*z+2*w+2*u+2*v+2*r+2*s+2*t+2*p-1</Equations>
            <GBasisLen>272</GBasisLen>
            <HilbertPolynomial>512</HilbertPolynomial>
            <Polynomials>
				10
				
				11
				1    2 0 0 0 0 0 0 0 0 0 
				2    0 2 0 0 0 0 0 0 0 0 
				2    0 0 2 0 0 0 0 0 0 0 
				2    0 0 0 2 0 0 0 0 0 0 
				2    0 0 0 0 2 0 0 0 0 0 
				2    0 0 0 0 0 2 0 0 0 0 
				2    0 0 0 0 0 0 2 0 0 0 
				2    0 0 0 0 0 0 0 2 0 0 
				2    0 0 0 0 0 0 0 0 2 0 
				2    0 0 0 0 0 0 0 0 0 2 
				-1    1 0 0 0 0 0 0 0 0 0 
				
				10
				2    1 1 0 0 0 0 0 0 0 0 
				2    0 1 1 0 0 0 0 0 0 0 
				2    0 0 1 1 0 0 0 0 0 0 
				2    0 0 0 1 1 0 0 0 0 0 
				2    0 0 0 0 1 1 0 0 0 0 
				2    0 0 0 0 0 1 1 0 0 0 
				2    0 0 0 0 0 0 1 1 0 0 
				2    0 0 0 0 0 0 0 1 1 0 
				2    0 0 0 0 0 0 0 0 1 1 
				-1    0 1 0 0 0 0 0 0 0 0 
				
				10
				1    0 2 0 0 0 0 0 0 0 0 
				2    1 0 1 0 0 0 0 0 0 0 
				2    0 1 0 1 0 0 0 0 0 0 
				2    0 0 1 0 1 0 0 0 0 0 
				2    0 0 0 1 0 1 0 0 0 0 
				2    0 0 0 0 1 0 1 0 0 0 
				2    0 0 0 0 0 1 0 1 0 0 
				2    0 0 0 0 0 0 1 0 1 0 
				2    0 0 0 0 0 0 0 1 0 1 
				-1    0 0 1 0 0 0 0 0 0 0 
				
				9
				2    0 1 1 0 0 0 0 0 0 0 
				2    1 0 0 1 0 0 0 0 0 0 
				2    0 1 0 0 1 0 0 0 0 0 
				2    0 0 1 0 0 1 0 0 0 0 
				2    0 0 0 1 0 0 1 0 0 0 
				2    0 0 0 0 1 0 0 1 0 0 
				2    0 0 0 0 0 1 0 0 1 0 
				2    0 0 0 0 0 0 1 0 0 1 
				-1    0 0 0 1 0 0 0 0 0 0 
				
				9
				1    0 0 2 0 0 0 0 0 0 0 
				2    0 1 0 1 0 0 0 0 0 0 
				2    1 0 0 0 1 0 0 0 0 0 
				2    0 1 0 0 0 1 0 0 0 0 
				2    0 0 1 0 0 0 1 0 0 0 
				2    0 0 0 1 0 0 0 1 0 0 
				2    0 0 0 0 1 0 0 0 1 0 
				2    0 0 0 0 0 1 0 0 0 1 
				-1    0 0 0 0 1 0 0 0 0 0 
				
				8
				2    0 0 1 1 0 0 0 0 0 0 
				2    0 1 0 0 1 0 0 0 0 0 
				2    1 0 0 0 0 1 0 0 0 0 
				2    0 1 0 0 0 0 1 0 0 0 
				2    0 0 1 0 0 0 0 1 0 0 
				2    0 0 0 1 0 0 0 0 1 0 
				2    0 0 0 0 1 0 0 0 0 1 
				-1    0 0 0 0 0 1 0 0 0 0 
				
				8
				1    0 0 0 2 0 0 0 0 0 0 
				2    0 0 1 0 1 0 0 0 0 0 
				2    0 1 0 0 0 1 0 0 0 0 
				2    1 0 0 0 0 0 1 0 0 0 
				2    0 1 0 0 0 0 0 1 0 0 
				2    0 0 1 0 0 0 0 0 1 0 
				2    0 0 0 1 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 1 0 0 0 
				
				7
				2    0 0 0 1 1 0 0 0 0 0 
				2    0 0 1 0 0 1 0 0 0 0 
				2    0 1 0 0 0 0 1 0 0 0 
				2    1 0 0 0 0 0 0 1 0 0 
				2    0 1 0 0 0 0 0 0 1 0 
				2    0 0 1 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 1 0 0 
				
				7
				1    0 0 0 0 2 0 0 0 0 0 
				2    0 0 0 1 0 1 0 0 0 0 
				2    0 0 1 0 0 0 1 0 0 0 
				2    0 1 0 0 0 0 0 1 0 0 
				2    1 0 0 0 0 0 0 0 1 0 
				2    0 1 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 1 0 
				
				11
				1    1 0 0 0 0 0 0 0 0 0 
				2    0 1 0 0 0 0 0 0 0 0 
				2    0 0 1 0 0 0 0 0 0 0 
				2    0 0 0 1 0 0 0 0 0 0 
				2    0 0 0 0 1 0 0 0 0 0 
				2    0 0 0 0 0 1 0 0 0 0 
				2    0 0 0 0 0 0 1 0 0 0 
				2    0 0 0 0 0 0 0 1 0 0 
				2    0 0 0 0 0 0 0 0 1 0 
				2    0 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>kin1</ID>
            <Name>Kin1</Name>
            <Description>\textbf{Title}: kinematics problem</Description>
            <References>P. Van Hentenryck, D. McAllester and D. Kapur: `Solving Polynomial Systems Using a Branch and Prune Approach', SIAM J. Numerical Analysis, Vol. 34, No. 2, pp 797-827, 1997.
            \\ H. Hong and V. Stahl: `Safe Starting Regions by Fixed Points and Tightening' Computing 53(3-4): 322-335.</References>
            <Variables>x[1..12]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, kin1, with_12_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_12_vars</TestEnvironment>
            <Equations>
            x[1]^2+x[7]^2-1,x[2]^2+x[8]^2-1,x[3]^2+x[9]^2-1,x[4]^2+x[10]^2-1,x[5]^2+x[11]^2-1,x[6]^2+x[12]^2-1,10000*x[2]*x[6]+10000*x[3]*x[6]+10000*x[4]*x[6]+10000*x[5]*x[8]*x[12]-10000*x[5]*x[9]*x[12]-10000*x[5]*x[10]*x[12]-4077,2000*x[1]*x[2]*x[11]+2000*x[1]*x[3]*x[11]+2000*x[1]*x[4]*x[11]+2000*x[5]*x[7]-3823,10000*x[8]*x[11]+10000*x[9]*x[11]+10000*x[10]*x[11]-19791,3750*x[1]*x[2]+2500*x[1]*x[3]+1250*x[1]*x[4]-5077,7500*x[2]*x[7]+5000*x[3]*x[7]+2500*x[4]*x[7]-4293,30000*x[8]+20000*x[9]+10000*x[10]-39701</Equations>
            <GBasisLen>88</GBasisLen>
            <HilbertPolynomial>48</HilbertPolynomial>
            <Polynomials>
				12
				
				3
				1    2 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 2 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    0 2 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 2 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    0 0 2 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 2 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    0 0 0 2 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 2 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    0 0 0 0 2 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 2 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				3
				1    0 0 0 0 0 2 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 2 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 
				
				7
				10000    0 0 0 0 1 0 0 1 0 0 0 1 
				-10000    0 0 0 0 1 0 0 0 1 0 0 1 
				-10000    0 0 0 0 1 0 0 0 0 1 0 1 
				10000    0 1 0 0 0 1 0 0 0 0 0 0 
				10000    0 0 1 0 0 1 0 0 0 0 0 0 
				10000    0 0 0 1 0 1 0 0 0 0 0 0 
				-4077    0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				2000    1 1 0 0 0 0 0 0 0 0 1 0 
				2000    1 0 1 0 0 0 0 0 0 0 1 0 
				2000    1 0 0 1 0 0 0 0 0 0 1 0 
				2000    0 0 0 0 1 0 1 0 0 0 0 0 
				-3823    0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				10000    0 0 0 0 0 0 0 1 0 0 1 0 
				10000    0 0 0 0 0 0 0 0 1 0 1 0 
				10000    0 0 0 0 0 0 0 0 0 1 1 0 
				-19791    0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				3750    1 1 0 0 0 0 0 0 0 0 0 0 
				2500    1 0 1 0 0 0 0 0 0 0 0 0 
				1250    1 0 0 1 0 0 0 0 0 0 0 0 
				-5077    0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				7500    0 1 0 0 0 0 1 0 0 0 0 0 
				5000    0 0 1 0 0 0 1 0 0 0 0 0 
				2500    0 0 0 1 0 0 1 0 0 0 0 0 
				-4293    0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				30000    0 0 0 0 0 0 0 1 0 0 0 0 
				20000    0 0 0 0 0 0 0 0 1 0 0 0 
				10000    0 0 0 0 0 0 0 0 0 1 0 0 
				-39701    0 0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>kinema</ID>
            <Name>Kinema</Name>
            <Description>\textbf{Title}: Robot kinematics problem</Description>
            <References>Bellido, A.M.:' Construction de fonctions d'iteration pour le calcul simultane des solutions d'equations et de systemes d'equations algebriques', These 1992, Universite Paul Sabatier, Toulouse.
            \\ Anne-Mercedes Bellido: 'Construction of iteration functions for the simultaneous computation of the solutions of equations and algebraic systems'. Numerical Algorithms Vo. 6, Nos 3-4.</References>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, kinema, with_9_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>
            x^2-12*x+y^2+z^2-68,w^2+u^2-12*u+v^2-68,r^2+s^2-24*s+t^2-12*t+100,x*w-6*x+y*u+z*v-6*u-52,x*r-6*x+y*s+z*t-12*s-6*t+64,w*r+u*s-6*u+v*t-12*s-6*t+32,2*y+2*z-w-u-2*v-r-t+18,x+y+2*z+2*w+2*v-2*r+s-t-38,x+z-2*w+u-v+2*r-2*s+8</Equations>
            <GBasisLen>39</GBasisLen>
            <HilbertPolynomial>40</HilbertPolynomial>
            <Polynomials>
				9
				
				5
				1    2 0 0 0 0 0 0 0 0 
				1    0 2 0 0 0 0 0 0 0 
				1    0 0 2 0 0 0 0 0 0 
				-12    1 0 0 0 0 0 0 0 0 
				-68    0 0 0 0 0 0 0 0 0 
				
				5
				1    0 0 0 2 0 0 0 0 0 
				1    0 0 0 0 2 0 0 0 0 
				1    0 0 0 0 0 2 0 0 0 
				-12    0 0 0 0 1 0 0 0 0 
				-68    0 0 0 0 0 0 0 0 0 
				
				6
				1    0 0 0 0 0 0 2 0 0 
				1    0 0 0 0 0 0 0 2 0 
				1    0 0 0 0 0 0 0 0 2 
				-24    0 0 0 0 0 0 0 1 0 
				-12    0 0 0 0 0 0 0 0 1 
				100    0 0 0 0 0 0 0 0 0 
				
				6
				1    1 0 0 1 0 0 0 0 0 
				1    0 1 0 0 1 0 0 0 0 
				1    0 0 1 0 0 1 0 0 0 
				-6    1 0 0 0 0 0 0 0 0 
				-6    0 0 0 0 1 0 0 0 0 
				-52    0 0 0 0 0 0 0 0 0 
				
				7
				1    1 0 0 0 0 0 1 0 0 
				1    0 1 0 0 0 0 0 1 0 
				1    0 0 1 0 0 0 0 0 1 
				-6    1 0 0 0 0 0 0 0 0 
				-12    0 0 0 0 0 0 0 1 0 
				-6    0 0 0 0 0 0 0 0 1 
				64    0 0 0 0 0 0 0 0 0 
				
				7
				1    0 0 0 1 0 0 1 0 0 
				1    0 0 0 0 1 0 0 1 0 
				1    0 0 0 0 0 1 0 0 1 
				-6    0 0 0 0 1 0 0 0 0 
				-12    0 0 0 0 0 0 0 1 0 
				-6    0 0 0 0 0 0 0 0 1 
				32    0 0 0 0 0 0 0 0 0 
				
				8
				2    0 1 0 0 0 0 0 0 0 
				2    0 0 1 0 0 0 0 0 0 
				-1    0 0 0 1 0 0 0 0 0 
				-1    0 0 0 0 1 0 0 0 0 
				-2    0 0 0 0 0 1 0 0 0 
				-1    0 0 0 0 0 0 1 0 0 
				-1    0 0 0 0 0 0 0 0 1 
				18    0 0 0 0 0 0 0 0 0 
				
				9
				1    1 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 
				2    0 0 1 0 0 0 0 0 0 
				2    0 0 0 1 0 0 0 0 0 
				2    0 0 0 0 0 1 0 0 0 
				-2    0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 0 1 
				-38    0 0 0 0 0 0 0 0 0 
				
				8
				1    1 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 
				-2    0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 
				-1    0 0 0 0 0 1 0 0 0 
				2    0 0 0 0 0 0 1 0 0 
				-2    0 0 0 0 0 0 0 1 0 
				8    0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>kotsireas</ID>
            <Name>Kotsireas</Name>
            <Description>\textbf{Title}: problem of Kotsireas in celestial mechanics</Description>
            <References>Karin Gatermann: 'Polynomial systems with symmetry', talk presented at 'Solving Systems of Equations', September 14-18, 1998.</References>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, kotsireas, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>
            y*x-y*w-x*u+u*w-2*v+2,y*x+y*w-2*y*v-x*u-2*x-u*w+2*u*v+2*w,y^2-2*y*u-2*y+u^2-2*u+r+1,y^3*x^2-1,u^3*w^2-1,r^3*v^2-1</Equations>
            <GBasisLen>70</GBasisLen>
            <HilbertPolynomial>108s - 257</HilbertPolynomial>
            <Polynomials>
				6
				
				6
				1    1 1 0 0 0 0 0 
				-1    0 1 0 1 0 0 0 
				-1    1 0 0 0 1 0 0 
				1    0 0 0 1 1 0 0 
				-2    0 0 0 0 0 1 0 
				2    0 0 0 0 0 0 0 
				
				8
				1    1 1 0 0 0 0 0 
				1    0 1 0 1 0 0 0 
				-1    1 0 0 0 1 0 0 
				-1    0 0 0 1 1 0 0 
				-2    0 1 0 0 0 1 0 
				2    0 0 0 0 1 1 0 
				-2    1 0 0 0 0 0 0 
				2    0 0 0 1 0 0 0 
				
				7
				1    0 2 0 0 0 0 0 
				-2    0 1 0 0 1 0 0 
				1    0 0 0 0 2 0 0 
				-2    0 1 0 0 0 0 0 
				-2    0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 1 
				1    0 0 0 0 0 0 0 
				
				2
				1    2 3 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 
				
				2
				1    0 0 0 2 3 0 0 
				-1    0 0 0 0 0 0 0 
				
				2
				1    0 0 0 0 0 2 3 
				-1    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>ku10</ID>
            <Name>Ku10</Name>
            <Description>\textbf{Title}: 10-dimensional system of Ku</Description>
            <References>M.C. Steenkamp. `Die numeriese oplos van stelsels polinoomvergelykings'. Technical report, Nasionale Navorsingsinstituut vir Wiskundige Wetenskappe, Pretoria, 19</References>
            <Variables>x,y,z,w,u,v,r,s,t,p</Variables>
            <TagsList>DevRevLex, DegLex, Lex, ku10, with_10_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_10_vars</TestEnvironment>
            <Equations>
            5*x*y+5*x+3*y+55,7*y*z+9*y+9*z+19,3*z*w+6*z+5*w-4,6*w*u+6*w+7*u+118,u*v+3*u+9*v+27,6*v*r+7*v+r+72,9*r*s+7*r+s+35,2*(2*s*t+2*s+3*t+8),8*p*t+3*p+4*t-51,3*x*p-6*x+p+5</Equations>
            <GBasisLen>10</GBasisLen>
            <HilbertPolynomial>2</HilbertPolynomial>
            <Polynomials>
				10
				
				4
				5    1 1 0 0 0 0 0 0 0 0 
				5    1 0 0 0 0 0 0 0 0 0 
				3    0 1 0 0 0 0 0 0 0 0 
				55    0 0 0 0 0 0 0 0 0 0 
				
				4
				7    0 1 1 0 0 0 0 0 0 0 
				9    0 1 0 0 0 0 0 0 0 0 
				9    0 0 1 0 0 0 0 0 0 0 
				19    0 0 0 0 0 0 0 0 0 0 
				
				4
				3    0 0 1 1 0 0 0 0 0 0 
				6    0 0 1 0 0 0 0 0 0 0 
				5    0 0 0 1 0 0 0 0 0 0 
				-4    0 0 0 0 0 0 0 0 0 0 
				
				4
				6    0 0 0 1 1 0 0 0 0 0 
				6    0 0 0 1 0 0 0 0 0 0 
				7    0 0 0 0 1 0 0 0 0 0 
				118    0 0 0 0 0 0 0 0 0 0 
				
				4
				1    0 0 0 0 1 1 0 0 0 0 
				3    0 0 0 0 1 0 0 0 0 0 
				9    0 0 0 0 0 1 0 0 0 0 
				27    0 0 0 0 0 0 0 0 0 0 
				
				4
				6    0 0 0 0 0 1 1 0 0 0 
				7    0 0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 
				72    0 0 0 0 0 0 0 0 0 0 
				
				4
				9    0 0 0 0 0 0 1 1 0 0 
				7    0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 
				35    0 0 0 0 0 0 0 0 0 0 
				
				4
				4    0 0 0 0 0 0 0 1 1 0 
				4    0 0 0 0 0 0 0 1 0 0 
				6    0 0 0 0 0 0 0 0 1 0 
				16    0 0 0 0 0 0 0 0 0 0 
				
				4
				8    0 0 0 0 0 0 0 0 1 1 
				4    0 0 0 0 0 0 0 0 1 0 
				3    0 0 0 0 0 0 0 0 0 1 
				-51    0 0 0 0 0 0 0 0 0 0 
				
				4
				3    1 0 0 0 0 0 0 0 0 1 
				-6    1 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 1 
				5    0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>lanconelli</ID>
            <Name>Lanconelli</Name>
            <Variables>x[1..11]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, lanconelli, with_11_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_11_vars</TestEnvironment>
            <Equations>
            x[1]+x[2]+x[3]+x[4]+x[5]+x[6]+x[7]+x[8]-1,-x[1]^2*x[9]-2*x[1]*x[2]*x[9]-x[1]*x[3]*x[9]-x[1]*x[4]*x[9]-x[1]*x[5]*x[9]-x[1]*x[6]*x[9]+x[1]-x[2]^2*x[9]-x[2]*x[3]*x[9]-x[2]*x[4]*x[9]-x[2]*x[5]*x[9]-x[2]*x[6]*x[9]+x[2]-x[3]*x[5]*x[9]-x[3]*x[6]*x[9]-x[4]*x[5]*x[9]-x[4]*x[6]*x[9],-x[1]^2*x[10]+x[1]^2-x[1]*x[2]*x[10]+2*x[1]*x[2]-x[1]*x[3]*x[10]-x[1]*x[4]*x[10]-x[1]*x[5]*x[10]+x[1]*x[5]+x[1]*x[6]+x[2]^2-x[2]*x[5]*x[10]+x[2]*x[5]+x[2]*x[6]-x[3]*x[5]*x[10]-x[4]*x[5]*x[10],x[1]+x[3]+x[5]+x[7]-x[11]</Equations>
            <GBasisLen>6</GBasisLen>
            <HilbertPolynomial>1/630s^7 + 1/40s^6 + 8/45s^5 + 3/4s^4 + 359/180s^3 + 129/40s^2 + 1187/420s + 1</HilbertPolynomial>
            <Polynomials>
				4
				
				9
				1    1 0 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 
				
				17
				-1    2 0 0 0 0 0 0 0 1 0 0 
				-2    1 1 0 0 0 0 0 0 1 0 0 
				-1    0 2 0 0 0 0 0 0 1 0 0 
				-1    1 0 1 0 0 0 0 0 1 0 0 
				-1    0 1 1 0 0 0 0 0 1 0 0 
				-1    1 0 0 1 0 0 0 0 1 0 0 
				-1    0 1 0 1 0 0 0 0 1 0 0 
				-1    1 0 0 0 1 0 0 0 1 0 0 
				-1    0 1 0 0 1 0 0 0 1 0 0 
				-1    0 0 1 0 1 0 0 0 1 0 0 
				-1    0 0 0 1 1 0 0 0 1 0 0 
				-1    1 0 0 0 0 1 0 0 1 0 0 
				-1    0 1 0 0 0 1 0 0 1 0 0 
				-1    0 0 1 0 0 1 0 0 1 0 0 
				-1    0 0 0 1 0 1 0 0 1 0 0 
				1    1 0 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 0 0 
				
				15
				-1    2 0 0 0 0 0 0 0 0 1 0 
				-1    1 1 0 0 0 0 0 0 0 1 0 
				-1    1 0 1 0 0 0 0 0 0 1 0 
				-1    1 0 0 1 0 0 0 0 0 1 0 
				-1    1 0 0 0 1 0 0 0 0 1 0 
				-1    0 1 0 0 1 0 0 0 0 1 0 
				-1    0 0 1 0 1 0 0 0 0 1 0 
				-1    0 0 0 1 1 0 0 0 0 1 0 
				1    2 0 0 0 0 0 0 0 0 0 0 
				2    1 1 0 0 0 0 0 0 0 0 0 
				1    0 2 0 0 0 0 0 0 0 0 0 
				1    1 0 0 0 1 0 0 0 0 0 0 
				1    0 1 0 0 1 0 0 0 0 0 0 
				1    1 0 0 0 0 1 0 0 0 0 0 
				1    0 1 0 0 0 1 0 0 0 0 0 
				
				5
				1    1 0 0 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 1 
				</Polynomials>
        </Example>
        <Example>
            <ID>lichtblau</ID>
            <Name>Lichtblau</Name>
            <Variables>x,y,z</Variables>
            <TagsList>DevRevLex, DegLex, Lex, lichtblau, with_3_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_3_vars</TestEnvironment>
            <Equations>
            y-110*x^2+495*x^3-1320*x^4+2772*x^5-5082*x^6+7590*x^7-8085*x^8+5555*x^9-2189*x^10+374*x^11,z-22*x+110*x^2-330*x^3+1848*x^5-3696*x^6+3300*x^7-1650*x^8+550*x^9-88*x^10-22*x^11</Equations>
            <GBasisLen>16</GBasisLen>
            <HilbertPolynomial>11s + 1</HilbertPolynomial>
            <Polynomials>
				2
				
				11
				374    11 0 0 
				-2189    10 0 0 
				5555    9 0 0 
				-8085    8 0 0 
				7590    7 0 0 
				-5082    6 0 0 
				2772    5 0 0 
				-1320    4 0 0 
				495    3 0 0 
				-110    2 0 0 
				1    0 1 0 
				
				11
				-22    11 0 0 
				-88    10 0 0 
				550    9 0 0 
				-1650    8 0 0 
				3300    7 0 0 
				-3696    6 0 0 
				1848    5 0 0 
				-330    3 0 0 
				110    2 0 0 
				-22    1 0 0 
				1    0 0 1 
				</Polynomials>
        </Example>
        <Example>
            <ID>liu</ID>
            <Name>Liu</Name>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, liu, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>y*z-y*w-x*v+u*v,z*w-z*x-y*v+u*v,w*x-y*w-z*v+u*v,x*y-z*x-w*v+u*v</Equations>
            <GBasisLen>12</GBasisLen>
            <HilbertPolynomial>8s^2 - 8s + 8</HilbertPolynomial>
            <Polynomials>
				4
				
				4
				1    0 1 1 0 0 0 
				-1    0 1 0 1 0 0 
				-1    1 0 0 0 0 1 
				1    0 0 0 0 1 1 
				
				4
				-1    1 0 1 0 0 0 
				1    0 0 1 1 0 0 
				-1    0 1 0 0 0 1 
				1    0 0 0 0 1 1 
				
				4
				1    1 0 0 1 0 0 
				-1    0 1 0 1 0 0 
				-1    0 0 1 0 0 1 
				1    0 0 0 0 1 1 
				
				4
				1    1 1 0 0 0 0 
				-1    1 0 1 0 0 0 
				-1    0 0 0 1 0 1 
				1    0 0 0 0 1 1 
				</Polynomials>
        </Example>
        <Example>
            <ID>lorentz</ID>
            <Name>Lorentz</Name>
            <Description>\textbf{Title}: Equilibrium points of a 4-dimensional Lorentz attractor</Description>
            <References>Tien-Yien Li : 'Solving polynomial systems', The Mathematical Intelligencer 9(3):33-39, 19</References>
            <Variables>x,y,z,w</Variables>
            <TagsList>DevRevLex, DegLex, Lex, lorentz, with_4_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_4_vars</TestEnvironment>
            <Equations>x*y-x*z-w+1,-x+y*z-y*w+1,-x*z-y+z*w+1,x*w-y*w-z+1</Equations>
            <GBasisLen>12</GBasisLen>
            <HilbertPolynomial>11</HilbertPolynomial>
            <Polynomials>
				4
				
				4
				1    1 1 0 0 
				-1    1 0 1 0 
				-1    0 0 0 1 
				1    0 0 0 0 
				
				4
				1    0 1 1 0 
				-1    0 1 0 1 
				-1    1 0 0 0 
				1    0 0 0 0 
				
				4
				-1    1 0 1 0 
				1    0 0 1 1 
				-1    0 1 0 0 
				1    0 0 0 0 
				
				4
				1    1 0 0 1 
				-1    0 1 0 1 
				-1    0 0 1 0 
				1    0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>matrix</ID>
            <Name>Matrix</Name>
            <Variables>x[1..16]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, matrix, with_16_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_16_vars</TestEnvironment>
            <Equations>x[4]*x[13]+x[8]*x[14]+x[12]*x[15]+x[16]^2,x[3]*x[13]+x[7]*x[14]+x[11]*x[15]+x[15]*x[16],x[2]*x[13]+x[6]*x[14]+x[10]*x[15]+x[14]*x[16],x[1]*x[13]+x[5]*x[14]+x[9]*x[15]+x[13]*x[16],x[4]*x[9]+x[8]*x[10]+x[11]*x[12]+x[12]*x[16],x[3]*x[9]+x[7]*x[10]+x[11]^2+x[12]*x[15],x[2]*x[9]+x[6]*x[10]+x[10]*x[11]+x[12]*x[14],x[1]*x[9]+x[5]*x[10]+x[9]*x[11]+x[12]*x[13],x[4]*x[5]+x[6]*x[8]+x[7]*x[12]+x[8]*x[16],x[3]*x[5]+x[6]*x[7]+x[7]*x[11]+x[8]*x[15],x[2]*x[5]+x[6]^2+x[7]*x[10]+x[8]*x[14],x[1]*x[5]+x[5]*x[6]+x[7]*x[9]+x[8]*x[13],x[1]*x[4]+x[2]*x[8]+x[3]*x[12]+x[4]*x[16],x[1]*x[3]+x[2]*x[7]+x[3]*x[11]+x[4]*x[15],x[1]*x[2]+x[2]*x[6]+x[3]*x[10]+x[4]*x[14],x[1]^2+x[2]*x[5]+x[3]*x[9]+x[4]*x[13]</Equations>
            <GBasisLen>161</GBasisLen>
            <HilbertPolynomial>1/1440s^8 + 1/72s^7 + 8/45s^6 + 113/144s^5 + 3259/1440s^4 + 617/144s^3 + 607/120s^2 + 41/12s + 3</HilbertPolynomial>
            <Polynomials>
				16
				
				4
				1    0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 
				
				4
				1    0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
				
				4
				1    0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 
				
				4
				1    1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
				
				4
				1    0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 
				
				4
				1    0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 
				
				4
				1    0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 
				
				4
				1    1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 
				
				4
				1    0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
				
				4
				1    0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 
				
				4
				1    0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 
				
				4
				1    1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 
				
				4
				1    1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 
				
				4
				1    1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 
				
				4
				1    1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 
				
				4
				1    2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>morgenstern</ID>
            <Name>Morgenstern</Name>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, morgenstern, with_9_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>w*x-y*z,-u*y+v*x-v+y,w^2-r^2+z^2,-s^2+u^2-2*u+v^2+1,-t^2+w^2-2*w*v+u^2-2*u*z+v^2+z^2</Equations>
            <GBasisLen>27</GBasisLen>
            <HilbertPolynomial>4/3s^4 + 20/3s^2 + 0s + 2</HilbertPolynomial>
            <Polynomials>
				5
				
				2
				-1    0 1 1 0 0 0 0 0 0 
				1    1 0 0 1 0 0 0 0 0 
				
				4
				-1    0 1 0 0 1 0 0 0 0 
				1    1 0 0 0 0 1 0 0 0 
				1    0 1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 1 0 0 0 
				
				3
				1    0 0 2 0 0 0 0 0 0 
				1    0 0 0 2 0 0 0 0 0 
				-1    0 0 0 0 0 0 2 0 0 
				
				5
				1    0 0 0 0 2 0 0 0 0 
				1    0 0 0 0 0 2 0 0 0 
				-1    0 0 0 0 0 0 0 2 0 
				-2    0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 0 0 0 
				
				7
				1    0 0 2 0 0 0 0 0 0 
				1    0 0 0 2 0 0 0 0 0 
				-2    0 0 1 0 1 0 0 0 0 
				1    0 0 0 0 2 0 0 0 0 
				-2    0 0 0 1 0 1 0 0 0 
				1    0 0 0 0 0 2 0 0 0 
				-1    0 0 0 0 0 0 0 0 2 
				</Polynomials>
        </Example>
        <Example>
            <ID>noon5</ID>
            <Name>Noon5</Name>
            <Description>\textbf{Title}: A neural network modeled by an adaptive Lotka-Volterra system, $n=3$</Description>
            <References>\begin{itemize} \item Karin Gatermann. 'Symbolic solution of polynomial equation systems with symmetry', Proceedings of ISSAC-90, pp 112-119, ACM New York, 1990.\item V. W. Noonburg. 'A neural network modeled by an adaptive Lotka-Volterra system', SIAM J. Appl. Math., Vol. 49, No. 6, 1779-1792, 1989.\item Jan Verschelde and Ann Haegemans. `The GBQ-Algorithm for constructing start systems of homotopies for polynomial systems, SIAM J. Numer. Anal., Vol. 30, No. 2, pp 583-594, 1993. \end{itemize}</References>
            <Notes>The coefficients have been chosen so that full permutation symmetry was obtained. The parameter $c = 1$</Notes>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, noon5, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>10*x*y^2+10*x*z^2+10*x*w^2+10*x*u^2-11*x+10,10*x^2*y+10*y*z^2+10*y*w^2+10*y*u^2-11*y+10,10*x^2*z+10*y^2*z+10*z*w^2+10*z*u^2-11*z+10,10*x^2*w+10*y^2*w+10*z^2*w+10*w*u^2-11*w+10,10*x^2*u+10*y^2*u+10*z^2*u+10*w^2*u-11*u+10</Equations>
            <GBasisLen>72</GBasisLen>
            <HilbertPolynomial>233</HilbertPolynomial>
            <Polynomials>
				5
				
				6
				10    1 2 0 0 0 
				10    1 0 2 0 0 
				10    1 0 0 2 0 
				10    1 0 0 0 2 
				-11    1 0 0 0 0 
				10    0 0 0 0 0 
				
				6
				10    2 1 0 0 0 
				10    0 1 2 0 0 
				10    0 1 0 2 0 
				10    0 1 0 0 2 
				-11    0 1 0 0 0 
				10    0 0 0 0 0 
				
				6
				10    2 0 1 0 0 
				10    0 2 1 0 0 
				10    0 0 1 2 0 
				10    0 0 1 0 2 
				-11    0 0 1 0 0 
				10    0 0 0 0 0 
				
				6
				10    2 0 0 1 0 
				10    0 2 0 1 0 
				10    0 0 2 1 0 
				10    0 0 0 1 2 
				-11    0 0 0 1 0 
				10    0 0 0 0 0 
				
				6
				10    2 0 0 0 1 
				10    0 2 0 0 1 
				10    0 0 2 0 1 
				10    0 0 0 2 1 
				-11    0 0 0 0 1 
				10    0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>noon6</ID>
            <Name>Noon6</Name>
            <Description>\textbf{Title}: A neural network modeled by an adaptive Lotka-Volterra system, $n=3$</Description>
            <References>\begin{itemize} \item Karin Gatermann. 'Symbolic solution of polynomial equation systems with symmetry', Proceedings of ISSAC-90, pp 112-119, ACM New York, 1990.\item V. W. Noonburg. 'A neural network modeled by an adaptive Lotka-Volterra system', SIAM J. Appl. Math., Vol. 49, No. 6, 1779-1792, 1989.\item Jan Verschelde and Ann Haegemans. `The GBQ-Algorithm for constructing start systems of homotopies for polynomial systems, SIAM J. Numer. Anal., Vol. 30, No. 2, pp 583-594, 1993. \end{itemize}</References>
            <Notes>The coefficients have been chosen so that full permutation symmetry was obtained. The parameter $c = 1$</Notes>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, noon6, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>10*x*y^2+10*x*z^2+10*x*w^2+10*x*u^2+10*x*v^2-11*x+10,10*x^2*y+10*y*z^2+10*y*w^2+10*y*u^2+10*y*v^2-11*y+10,10*x^2*z+10*y^2*z+10*z*w^2+10*z*u^2+10*z*v^2-11*z+10,10*x^2*w+10*y^2*w+10*z^2*w+10*w*u^2+10*w*v^2-11*w+10,10*x^2*u+10*y^2*u+10*z^2*u+10*w^2*u+10*u*v^2-11*u+10,10*x^2*v+10*y^2*v+10*z^2*v+10*w^2*v+10*u^2*v-11*v+10</Equations>
            <GBasisLen>187</GBasisLen>
            <HilbertPolynomial>717</HilbertPolynomial>
            <Polynomials>
				6
				
				7
				10    1 2 0 0 0 0 
				10    1 0 2 0 0 0 
				10    1 0 0 2 0 0 
				10    1 0 0 0 2 0 
				10    1 0 0 0 0 2 
				-11    1 0 0 0 0 0 
				10    0 0 0 0 0 0 
				
				7
				10    2 1 0 0 0 0 
				10    0 1 2 0 0 0 
				10    0 1 0 2 0 0 
				10    0 1 0 0 2 0 
				10    0 1 0 0 0 2 
				-11    0 1 0 0 0 0 
				10    0 0 0 0 0 0 
				
				7
				10    2 0 1 0 0 0 
				10    0 2 1 0 0 0 
				10    0 0 1 2 0 0 
				10    0 0 1 0 2 0 
				10    0 0 1 0 0 2 
				-11    0 0 1 0 0 0 
				10    0 0 0 0 0 0 
				
				7
				10    2 0 0 1 0 0 
				10    0 2 0 1 0 0 
				10    0 0 2 1 0 0 
				10    0 0 0 1 2 0 
				10    0 0 0 1 0 2 
				-11    0 0 0 1 0 0 
				10    0 0 0 0 0 0 
				
				7
				10    2 0 0 0 1 0 
				10    0 2 0 0 1 0 
				10    0 0 2 0 1 0 
				10    0 0 0 2 1 0 
				10    0 0 0 0 1 2 
				-11    0 0 0 0 1 0 
				10    0 0 0 0 0 0 
				
				7
				10    2 0 0 0 0 1 
				10    0 2 0 0 0 1 
				10    0 0 2 0 0 1 
				10    0 0 0 2 0 1 
				10    0 0 0 0 2 1 
				-11    0 0 0 0 0 1 
				10    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>noon7</ID>
            <Name>Noon7</Name>
            <Description>\textbf{Title}: A neural network modeled by an adaptive Lotka-Volterra system, $n=3$</Description>
            <References>\begin{itemize} \item Karin Gatermann. 'Symbolic solution of polynomial equation systems with symmetry', Proceedings of ISSAC-90, pp 112-119, ACM New York, 1990.\item V. W. Noonburg. 'A neural network modeled by an adaptive Lotka-Volterra system', SIAM J. Appl. Math., Vol. 49, No. 6, 1779-1792, 1989.\item Jan Verschelde and Ann Haegemans. `The GBQ-Algorithm for constructing start systems of homotopies for polynomial systems, SIAM J. Numer. Anal., Vol. 30, No. 2, pp 583-594, 1993. \end{itemize}</References>
            <Notes>The coefficients have been chosen so that full permutation symmetry was obtained. The parameter c = 1</Notes>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, noon7, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>10*x*y^2+10*x*z^2+10*x*w^2+10*x*u^2+10*x*v^2+10*x*r^2-11*x+10,10*x^2*y+10*y*z^2+10*y*w^2+10*y*u^2+10*y*v^2+10*y*r^2-11*y+10,10*x^2*z+10*y^2*z+10*z*w^2+10*z*u^2+10*z*v^2+10*z*r^2-11*z+10,10*x^2*w+10*y^2*w+10*z^2*w+10*w*u^2+10*w*v^2+10*w*r^2-11*w+10,10*x^2*u+10*y^2*u+10*z^2*u+10*w^2*u+10*u*v^2+10*u*r^2-11*u+10,10*x^2*v+10*y^2*v+10*z^2*v+10*w^2*v+10*u^2*v+10*v*r^2-11*v+10,10*x^2*r+10*y^2*r+10*z^2*r+10*w^2*r+10*u^2*r+10*v^2*r-11*r+10</Equations>
            <GBasisLen>495</GBasisLen>
            <HilbertPolynomial>2173</HilbertPolynomial>
            <Polynomials>
				7
				
				8
				10    1 2 0 0 0 0 0 
				10    1 0 2 0 0 0 0 
				10    1 0 0 2 0 0 0 
				10    1 0 0 0 2 0 0 
				10    1 0 0 0 0 2 0 
				10    1 0 0 0 0 0 2 
				-11    1 0 0 0 0 0 0 
				10    0 0 0 0 0 0 0 
				
				8
				10    2 1 0 0 0 0 0 
				10    0 1 2 0 0 0 0 
				10    0 1 0 2 0 0 0 
				10    0 1 0 0 2 0 0 
				10    0 1 0 0 0 2 0 
				10    0 1 0 0 0 0 2 
				-11    0 1 0 0 0 0 0 
				10    0 0 0 0 0 0 0 
				
				8
				10    2 0 1 0 0 0 0 
				10    0 2 1 0 0 0 0 
				10    0 0 1 2 0 0 0 
				10    0 0 1 0 2 0 0 
				10    0 0 1 0 0 2 0 
				10    0 0 1 0 0 0 2 
				-11    0 0 1 0 0 0 0 
				10    0 0 0 0 0 0 0 
				
				8
				10    2 0 0 1 0 0 0 
				10    0 2 0 1 0 0 0 
				10    0 0 2 1 0 0 0 
				10    0 0 0 1 2 0 0 
				10    0 0 0 1 0 2 0 
				10    0 0 0 1 0 0 2 
				-11    0 0 0 1 0 0 0 
				10    0 0 0 0 0 0 0 
				
				8
				10    2 0 0 0 1 0 0 
				10    0 2 0 0 1 0 0 
				10    0 0 2 0 1 0 0 
				10    0 0 0 2 1 0 0 
				10    0 0 0 0 1 2 0 
				10    0 0 0 0 1 0 2 
				-11    0 0 0 0 1 0 0 
				10    0 0 0 0 0 0 0 
				
				8
				10    2 0 0 0 0 1 0 
				10    0 2 0 0 0 1 0 
				10    0 0 2 0 0 1 0 
				10    0 0 0 2 0 1 0 
				10    0 0 0 0 2 1 0 
				10    0 0 0 0 0 1 2 
				-11    0 0 0 0 0 1 0 
				10    0 0 0 0 0 0 0 
				
				8
				10    2 0 0 0 0 0 1 
				10    0 2 0 0 0 0 1 
				10    0 0 2 0 0 0 1 
				10    0 0 0 2 0 0 1 
				10    0 0 0 0 2 0 1 
				10    0 0 0 0 0 2 1 
				-11    0 0 0 0 0 0 1 
				10    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>noon8</ID>
            <Name>Noon8</Name>
            <Description>\textbf{Title}: A neural network modeled by an adaptive Lotka-Volterra system, $n=3$</Description>
            <References>\begin{itemize} \item Karin Gatermann. 'Symbolic solution of polynomial equation systems with symmetry', Proceedings of ISSAC-90, pp 112-119, ACM New York, 1990.\item V. W. Noonburg. 'A neural network modeled by an adaptive Lotka-Volterra system', SIAM J. Appl. Math., Vol. 49, No. 6, 1779-1792, 1989.\item Jan Verschelde and Ann Haegemans. `The GBQ-Algorithm for constructing start systems of homotopies for polynomial systems, SIAM J. Numer. Anal., Vol. 30, No. 2, pp 583-594, 1993. \end{itemize}</References>
            <Notes>The coefficients have been chosen so that full permutation symmetry was obtained. The parameter $c = 1$</Notes>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, noon8, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>10*x*y^2+10*x*z^2+10*x*w^2+10*x*u^2+10*x*v^2+10*x*r^2+10*x*s^2-11*x+10,10*x^2*y+10*y*z^2+10*y*w^2+10*y*u^2+10*y*v^2+10*y*r^2+10*y*s^2-11*y+10,10*x^2*z+10*y^2*z+10*z*w^2+10*z*u^2+10*z*v^2+10*z*r^2+10*z*s^2-11*z+10,10*x^2*w+10*y^2*w+10*z^2*w+10*w*u^2+10*w*v^2+10*w*r^2+10*w*s^2-11*w+10,10*x^2*u+10*y^2*u+10*z^2*u+10*w^2*u+10*u*v^2+10*u*r^2+10*u*s^2-11*u+10,10*x^2*v+10*y^2*v+10*z^2*v+10*w^2*v+10*u^2*v+10*v*r^2+10*v*s^2-11*v+10,10*x^2*r+10*y^2*r+10*z^2*r+10*w^2*r+10*u^2*r+10*v^2*r+10*r*s^2-11*r+10,10*x^2*s+10*y^2*s+10*z^2*s+10*w^2*s+10*u^2*s+10*v^2*s+10*r^2*s-11*s+10</Equations>
            <GBasisLen>1338</GBasisLen>
            <HilbertPolynomial>6545</HilbertPolynomial>
            <Polynomials>
				8
				
				9
				10    1 2 0 0 0 0 0 0 
				10    1 0 2 0 0 0 0 0 
				10    1 0 0 2 0 0 0 0 
				10    1 0 0 0 2 0 0 0 
				10    1 0 0 0 0 2 0 0 
				10    1 0 0 0 0 0 2 0 
				10    1 0 0 0 0 0 0 2 
				-11    1 0 0 0 0 0 0 0 
				10    0 0 0 0 0 0 0 0 
				
				9
				10    2 1 0 0 0 0 0 0 
				10    0 1 2 0 0 0 0 0 
				10    0 1 0 2 0 0 0 0 
				10    0 1 0 0 2 0 0 0 
				10    0 1 0 0 0 2 0 0 
				10    0 1 0 0 0 0 2 0 
				10    0 1 0 0 0 0 0 2 
				-11    0 1 0 0 0 0 0 0 
				10    0 0 0 0 0 0 0 0 
				
				9
				10    2 0 1 0 0 0 0 0 
				10    0 2 1 0 0 0 0 0 
				10    0 0 1 2 0 0 0 0 
				10    0 0 1 0 2 0 0 0 
				10    0 0 1 0 0 2 0 0 
				10    0 0 1 0 0 0 2 0 
				10    0 0 1 0 0 0 0 2 
				-11    0 0 1 0 0 0 0 0 
				10    0 0 0 0 0 0 0 0 
				
				9
				10    2 0 0 1 0 0 0 0 
				10    0 2 0 1 0 0 0 0 
				10    0 0 2 1 0 0 0 0 
				10    0 0 0 1 2 0 0 0 
				10    0 0 0 1 0 2 0 0 
				10    0 0 0 1 0 0 2 0 
				10    0 0 0 1 0 0 0 2 
				-11    0 0 0 1 0 0 0 0 
				10    0 0 0 0 0 0 0 0 
				
				9
				10    2 0 0 0 1 0 0 0 
				10    0 2 0 0 1 0 0 0 
				10    0 0 2 0 1 0 0 0 
				10    0 0 0 2 1 0 0 0 
				10    0 0 0 0 1 2 0 0 
				10    0 0 0 0 1 0 2 0 
				10    0 0 0 0 1 0 0 2 
				-11    0 0 0 0 1 0 0 0 
				10    0 0 0 0 0 0 0 0 
				
				9
				10    2 0 0 0 0 1 0 0 
				10    0 2 0 0 0 1 0 0 
				10    0 0 2 0 0 1 0 0 
				10    0 0 0 2 0 1 0 0 
				10    0 0 0 0 2 1 0 0 
				10    0 0 0 0 0 1 2 0 
				10    0 0 0 0 0 1 0 2 
				-11    0 0 0 0 0 1 0 0 
				10    0 0 0 0 0 0 0 0 
				
				9
				10    2 0 0 0 0 0 1 0 
				10    0 2 0 0 0 0 1 0 
				10    0 0 2 0 0 0 1 0 
				10    0 0 0 2 0 0 1 0 
				10    0 0 0 0 2 0 1 0 
				10    0 0 0 0 0 2 1 0 
				10    0 0 0 0 0 0 1 2 
				-11    0 0 0 0 0 0 1 0 
				10    0 0 0 0 0 0 0 0 
				
				9
				10    2 0 0 0 0 0 0 1 
				10    0 2 0 0 0 0 0 1 
				10    0 0 2 0 0 0 0 1 
				10    0 0 0 2 0 0 0 1 
				10    0 0 0 0 2 0 0 1 
				10    0 0 0 0 0 2 0 1 
				10    0 0 0 0 0 0 2 1 
				-11    0 0 0 0 0 0 0 1 
				10    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>noon9</ID>
            <Name>Noon9</Name>
            <Description>\textbf{Title}: A neural network modeled by an adaptive Lotka-Volterra system, n=3</Description>
            <References>Karin Gatermann: 'Symbolic solution of polynomial equation systems with symmetry', Proceedings of ISSAC-90, pp 112-119, ACM New York, 1990.\\ V. W. Noonburg: 'A neural network modeled by an adaptive Lotka-Volterra system',\\ SIAM J. Appl. Math., Vol. 49, No. 6, 1779-1792, 1989.\\ Jan Verschelde and Ann Haegemans: `The GBQ-Algorithm for constructing start systems of homotopies for polynomial systems, SIAM J. Numer. Anal., Vol. 30, No. 2, pp 583-594, 1993.</References>
            <Notes>The coefficients have been chosen so that full permutation symmetry was obtained. The parameter c = 1</Notes>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, noon9, with_9_vars, hard_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>10*x*y^2+10*x*z^2+10*x*w^2+10*x*u^2+10*x*v^2+10*x*r^2+10*x*s^2+10*x*t^2-11*x+10,10*x^2*y+10*y*z^2+10*y*w^2+10*y*u^2+10*y*v^2+10*y*r^2+10*y*s^2+10*y*t^2-11*y+10,10*x^2*z+10*y^2*z+10*z*w^2+10*z*u^2+10*z*v^2+10*z*r^2+10*z*s^2+10*z*t^2-11*z+10,10*x^2*w+10*y^2*w+10*z^2*w+10*w*u^2+10*w*v^2+10*w*r^2+10*w*s^2+10*w*t^2-11*w+10,10*x^2*u+10*y^2*u+10*z^2*u+10*w^2*u+10*u*v^2+10*u*r^2+10*u*s^2+10*u*t^2-11*u+10,10*x^2*v+10*y^2*v+10*z^2*v+10*w^2*v+10*u^2*v+10*v*r^2+10*v*s^2+10*v*t^2-11*v+10,10*x^2*r+10*y^2*r+10*z^2*r+10*w^2*r+10*u^2*r+10*v^2*r+10*r*s^2+10*r*t^2-11*r+10,10*x^2*s+10*y^2*s+10*z^2*s+10*w^2*s+10*u^2*s+10*v^2*s+10*r^2*s+10*s*t^2-11*s+10,10*x^2*t+10*y^2*t+10*z^2*t+10*w^2*t+10*u^2*t+10*v^2*t+10*r^2*t+10*s^2*t-11*t+10</Equations>
            <GBasisLen>-</GBasisLen>
            <HilbertPolynomial>-</HilbertPolynomial>
            <Polynomials>
				9
				
				10
				10    1 2 0 0 0 0 0 0 0 
				10    1 0 2 0 0 0 0 0 0 
				10    1 0 0 2 0 0 0 0 0 
				10    1 0 0 0 2 0 0 0 0 
				10    1 0 0 0 0 2 0 0 0 
				10    1 0 0 0 0 0 2 0 0 
				10    1 0 0 0 0 0 0 2 0 
				10    1 0 0 0 0 0 0 0 2 
				-11    1 0 0 0 0 0 0 0 0 
				10    0 0 0 0 0 0 0 0 0 
				
				10
				10    2 1 0 0 0 0 0 0 0 
				10    0 1 2 0 0 0 0 0 0 
				10    0 1 0 2 0 0 0 0 0 
				10    0 1 0 0 2 0 0 0 0 
				10    0 1 0 0 0 2 0 0 0 
				10    0 1 0 0 0 0 2 0 0 
				10    0 1 0 0 0 0 0 2 0 
				10    0 1 0 0 0 0 0 0 2 
				-11    0 1 0 0 0 0 0 0 0 
				10    0 0 0 0 0 0 0 0 0 
				
				10
				10    2 0 1 0 0 0 0 0 0 
				10    0 2 1 0 0 0 0 0 0 
				10    0 0 1 2 0 0 0 0 0 
				10    0 0 1 0 2 0 0 0 0 
				10    0 0 1 0 0 2 0 0 0 
				10    0 0 1 0 0 0 2 0 0 
				10    0 0 1 0 0 0 0 2 0 
				10    0 0 1 0 0 0 0 0 2 
				-11    0 0 1 0 0 0 0 0 0 
				10    0 0 0 0 0 0 0 0 0 
				
				10
				10    2 0 0 1 0 0 0 0 0 
				10    0 2 0 1 0 0 0 0 0 
				10    0 0 2 1 0 0 0 0 0 
				10    0 0 0 1 2 0 0 0 0 
				10    0 0 0 1 0 2 0 0 0 
				10    0 0 0 1 0 0 2 0 0 
				10    0 0 0 1 0 0 0 2 0 
				10    0 0 0 1 0 0 0 0 2 
				-11    0 0 0 1 0 0 0 0 0 
				10    0 0 0 0 0 0 0 0 0 
				
				10
				10    2 0 0 0 1 0 0 0 0 
				10    0 2 0 0 1 0 0 0 0 
				10    0 0 2 0 1 0 0 0 0 
				10    0 0 0 2 1 0 0 0 0 
				10    0 0 0 0 1 2 0 0 0 
				10    0 0 0 0 1 0 2 0 0 
				10    0 0 0 0 1 0 0 2 0 
				10    0 0 0 0 1 0 0 0 2 
				-11    0 0 0 0 1 0 0 0 0 
				10    0 0 0 0 0 0 0 0 0 
				
				10
				10    2 0 0 0 0 1 0 0 0 
				10    0 2 0 0 0 1 0 0 0 
				10    0 0 2 0 0 1 0 0 0 
				10    0 0 0 2 0 1 0 0 0 
				10    0 0 0 0 2 1 0 0 0 
				10    0 0 0 0 0 1 2 0 0 
				10    0 0 0 0 0 1 0 2 0 
				10    0 0 0 0 0 1 0 0 2 
				-11    0 0 0 0 0 1 0 0 0 
				10    0 0 0 0 0 0 0 0 0 
				
				10
				10    2 0 0 0 0 0 1 0 0 
				10    0 2 0 0 0 0 1 0 0 
				10    0 0 2 0 0 0 1 0 0 
				10    0 0 0 2 0 0 1 0 0 
				10    0 0 0 0 2 0 1 0 0 
				10    0 0 0 0 0 2 1 0 0 
				10    0 0 0 0 0 0 1 2 0 
				10    0 0 0 0 0 0 1 0 2 
				-11    0 0 0 0 0 0 1 0 0 
				10    0 0 0 0 0 0 0 0 0 
				
				10
				10    2 0 0 0 0 0 0 1 0 
				10    0 2 0 0 0 0 0 1 0 
				10    0 0 2 0 0 0 0 1 0 
				10    0 0 0 2 0 0 0 1 0 
				10    0 0 0 0 2 0 0 1 0 
				10    0 0 0 0 0 2 0 1 0 
				10    0 0 0 0 0 0 2 1 0 
				10    0 0 0 0 0 0 0 1 2 
				-11    0 0 0 0 0 0 0 1 0 
				10    0 0 0 0 0 0 0 0 0 
				
				10
				10    2 0 0 0 0 0 0 0 1 
				10    0 2 0 0 0 0 0 0 1 
				10    0 0 2 0 0 0 0 0 1 
				10    0 0 0 2 0 0 0 0 1 
				10    0 0 0 0 2 0 0 0 1 
				10    0 0 0 0 0 2 0 0 1 
				10    0 0 0 0 0 0 2 0 1 
				10    0 0 0 0 0 0 0 2 1 
				-11    0 0 0 0 0 0 0 0 1 
				10    0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>puma</ID>
            <Name>Puma</Name>
            <Description>\textbf{Title}: Hand position and orientation of PUMA robot</Description>
            <References>A. Morgan and V. Shapiro. `Box-Bisection for solving second-degree systems and the problem of clustering', ACM Transactions on Mathematical Software, Vol. 13, No. 2, pp. 152-167, 1987.</References>
            <Notes>The system can be easily reduced to a lower dimensional one, by eliminating x1 or x2 by the last equation. It is not a hard problem to solve, but a very good test example for algorithms that verify whether the mixed volume is zero or not. Every fine mixed subdivision will have only one mixed cell. More precisely, there are 6336 different configurations, which all yield a mixed cell with mixed volume</Notes>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, puma, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>x^2+y^2-1,z^2+w^2-1,u^2+v^2-1,r^2+s^2-1,4731*x*z-123800*x-357800*y*z-1637*y-933800*w+1000000*r-357100,4476*x*z+5276*x+15246*y*z-1549*y-13468*w-12044,357800*x+4731*y+1000000*v*s,-7623*x+2238*y+3461</Equations>
            <GBasisLen>16</GBasisLen>
            <HilbertPolynomial>16</HilbertPolynomial>
            <Polynomials>
				8
				
				3
				1    2 0 0 0 0 0 0 0 
				1    0 2 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				3
				1    0 0 2 0 0 0 0 0 
				1    0 0 0 2 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				3
				1    0 0 0 0 2 0 0 0 
				1    0 0 0 0 0 2 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				3
				1    0 0 0 0 0 0 2 0 
				1    0 0 0 0 0 0 0 2 
				-1    0 0 0 0 0 0 0 0 
				
				7
				4731    1 0 1 0 0 0 0 0 
				-357800    0 1 1 0 0 0 0 0 
				-123800    1 0 0 0 0 0 0 0 
				-1637    0 1 0 0 0 0 0 0 
				-933800    0 0 0 1 0 0 0 0 
				1000000    0 0 0 0 0 0 1 0 
				-357100    0 0 0 0 0 0 0 0 
				
				6
				4476    1 0 1 0 0 0 0 0 
				15246    0 1 1 0 0 0 0 0 
				5276    1 0 0 0 0 0 0 0 
				-1549    0 1 0 0 0 0 0 0 
				-13468    0 0 0 1 0 0 0 0 
				-12044    0 0 0 0 0 0 0 0 
				
				3
				1000000    0 0 0 0 0 1 0 1 
				357800    1 0 0 0 0 0 0 0 
				4731    0 1 0 0 0 0 0 0 
				
				3
				-7623    1 0 0 0 0 0 0 0 
				2238    0 1 0 0 0 0 0 0 
				3461    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>quadfor2</ID>
            <Name>Quadfor2</Name>
            <Description>\textbf{Title}: Gaussian quadrature formula with 2 knots and 2 weights over [-1,+1].</Description>
            <References>Jan Verschelde and Karin Gatermann: `Symmetric Newton Polytopes for Solving Sparse Polynomial Systems', Adv. Appl. Math., 16(1): 95-127</References>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, quadfor2, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>x+y-1,x*w+y*u,3*x*w^2+3*y*u^2-2,x*w^3+y*u^3</Equations>
            <GBasisLen>4</GBasisLen>
            <HilbertPolynomial>2s + 1</HilbertPolynomial>
            <Polynomials>
				4
				
				3
				1    1 0 0 0 0 
				1    0 1 0 0 0 
				-1    0 0 0 0 0 
				
				2
				1    1 0 0 1 0 
				1    0 1 0 0 1 
				
				3
				3    1 0 0 2 0 
				3    0 1 0 0 2 
				-2    0 0 0 0 0 
				
				2
				1    1 0 0 3 0 
				1    0 1 0 0 3 
				</Polynomials>
        </Example>
        <Example>
            <ID>quadgrid</ID>
            <Name>Quadgrid</Name>
            <Description>\textbf{Title}: interpolating quadrature formula for function defined on a grid</Description>
            <References>Wim Sweldens: `The construction and application of wavelets in numerical analysis', PhD thesis, K.U.Leuven, 1994.</References>
            <Notes>The general formulation of this problem is the following: 3 \-\-         i</Notes>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, quadgrid, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>v+y+z+w-1,25000000000000*x*v+25000000000000*x*y+25000000000000*x*z+25000000000000*x*w+12500000000000*y+25000000000000*z+37500000000000*w-15849364905389,25000000000000*x^2*v+25000000000000*x^2*y+25000000000000*x^2*z+25000000000000*x^2*w+25000000000000*x*y+50000000000000*x*z+75000000000000*x*w+6250000000000*y+25000000000000*z+112500000000000*w-10048094716167,25000000000000*x^3*v+25000000000000*x^3*y+25000000000000*x^3*z+25000000000000*x^3*w+37500000000000*x^2*y+75000000000000*x^2*z+112500000000000*x^2*w+18750000000000*x*y+75000000000000*x*z+168750000000000*x*w+3125000000000*y+25000000000000*z+84375000000000*w-3277288919759,3125000000000*x^4*v+3125000000000*x^4*y+3125000000000*x^4*z+3125000000000*x^4*w+6250000000000*x^3*y+12500000000000*x^3*z+18750000000000*x^3*w+4687500000000*x^2*y+18750000000000*x^2*z+42187500000000*x^2*w+1562500000000*x*y+12500000000000*x*z+42187500000000*x*w+195312500000*y+3125000000000*z+15820312500000*w+944354151583</Equations>
            <GBasisLen>8</GBasisLen>
            <HilbertPolynomial>5s - 0</HilbertPolynomial>
            <Polynomials>
				5
				
				5
				1    0 1 0 0 0 0 
				1    0 0 1 0 0 0 
				1    0 0 0 1 0 0 
				1    0 0 0 0 0 1 
				-1    0 0 0 0 0 0 
				
				8
				25000000000000    1 1 0 0 0 0 
				25000000000000    1 0 1 0 0 0 
				25000000000000    1 0 0 1 0 0 
				25000000000000    1 0 0 0 0 1 
				12500000000000    0 1 0 0 0 0 
				25000000000000    0 0 1 0 0 0 
				37500000000000    0 0 0 1 0 0 
				-15849364905389    0 0 0 0 0 0 
				
				11
				25000000000000    2 1 0 0 0 0 
				25000000000000    2 0 1 0 0 0 
				25000000000000    2 0 0 1 0 0 
				25000000000000    2 0 0 0 0 1 
				25000000000000    1 1 0 0 0 0 
				50000000000000    1 0 1 0 0 0 
				75000000000000    1 0 0 1 0 0 
				6250000000000    0 1 0 0 0 0 
				25000000000000    0 0 1 0 0 0 
				112500000000000    0 0 0 1 0 0 
				-10048094716167    0 0 0 0 0 0 
				
				14
				25000000000000    3 1 0 0 0 0 
				25000000000000    3 0 1 0 0 0 
				25000000000000    3 0 0 1 0 0 
				25000000000000    3 0 0 0 0 1 
				37500000000000    2 1 0 0 0 0 
				75000000000000    2 0 1 0 0 0 
				112500000000000    2 0 0 1 0 0 
				18750000000000    1 1 0 0 0 0 
				75000000000000    1 0 1 0 0 0 
				168750000000000    1 0 0 1 0 0 
				3125000000000    0 1 0 0 0 0 
				25000000000000    0 0 1 0 0 0 
				84375000000000    0 0 0 1 0 0 
				-3277288919759    0 0 0 0 0 0 
				
				17
				3125000000000    4 1 0 0 0 0 
				3125000000000    4 0 1 0 0 0 
				3125000000000    4 0 0 1 0 0 
				3125000000000    4 0 0 0 0 1 
				6250000000000    3 1 0 0 0 0 
				12500000000000    3 0 1 0 0 0 
				18750000000000    3 0 0 1 0 0 
				4687500000000    2 1 0 0 0 0 
				18750000000000    2 0 1 0 0 0 
				42187500000000    2 0 0 1 0 0 
				1562500000000    1 1 0 0 0 0 
				12500000000000    1 0 1 0 0 0 
				42187500000000    1 0 0 1 0 0 
				195312500000    0 1 0 0 0 0 
				3125000000000    0 0 1 0 0 0 
				15820312500000    0 0 0 1 0 0 
				944354151583    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>rabmo</ID>
            <Name>Rabmo</Name>
            <Description>\textbf{Title}: Optimal multi-dimensional quadrature formulas</Description>
            <References>\begin{itemize} \item The system has been given by Rabinowitz (1977), and appears in the derivation of optimal multi-dimensional quadrature formulas.\item Ramon E. Moore. `Methods and applications of interval analysis', chapter 6, page 64, SIAM Philadelphia, 1979.\item Sandie T. Jones. `Locating safe starting regions for iterative methods: a heuristic algorithm', in Interval Mathematics 1980, pages 377-386, Academic Press 1980, Editor Karl L.E. Nickel, Proceedings of an International Symposium on Interval Mathematics, May 27-31.\end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, rabmo, with_9_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>x+z+u+2*r-1,3*x*y+3*z*w+6*u*v+6*r*s+6*r*t-2,5*x*y^2+5*z*w^2+10*u*v^2+10*r*s^2+10*r*t^2-2,7*x*y^3+7*z*w^3+14*u*v^3+14*r*s^3+14*r*t^3-2,9*x*y^4+9*z*w^4+18*u*v^4+18*r*s^4+18*r*t^4-2,9*u*v^2+18*r*s*t-1,25*u*v^4+50*r*s^2*t^2-1,15*u*v^3+15*r*s^2*t+15*r*s*t^2-1,21*u*v^4+21*r*s^3*t+21*r*s*t^3-1</Equations>
            <GBasisLen>20</GBasisLen>
            <HilbertPolynomial>16</HilbertPolynomial>
            <Polynomials>
				9
				
				5
				1    1 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 
				2    0 0 0 0 0 0 1 0 0 
				-1    0 0 0 0 0 0 0 0 0 
				
				6
				3    1 1 0 0 0 0 0 0 0 
				3    0 0 1 1 0 0 0 0 0 
				6    0 0 0 0 1 1 0 0 0 
				6    0 0 0 0 0 0 1 1 0 
				6    0 0 0 0 0 0 1 0 1 
				-2    0 0 0 0 0 0 0 0 0 
				
				6
				5    1 2 0 0 0 0 0 0 0 
				5    0 0 1 2 0 0 0 0 0 
				10    0 0 0 0 1 2 0 0 0 
				10    0 0 0 0 0 0 1 2 0 
				10    0 0 0 0 0 0 1 0 2 
				-2    0 0 0 0 0 0 0 0 0 
				
				6
				7    1 3 0 0 0 0 0 0 0 
				7    0 0 1 3 0 0 0 0 0 
				14    0 0 0 0 1 3 0 0 0 
				14    0 0 0 0 0 0 1 3 0 
				14    0 0 0 0 0 0 1 0 3 
				-2    0 0 0 0 0 0 0 0 0 
				
				6
				9    1 4 0 0 0 0 0 0 0 
				9    0 0 1 4 0 0 0 0 0 
				18    0 0 0 0 1 4 0 0 0 
				18    0 0 0 0 0 0 1 4 0 
				18    0 0 0 0 0 0 1 0 4 
				-2    0 0 0 0 0 0 0 0 0 
				
				3
				9    0 0 0 0 1 2 0 0 0 
				18    0 0 0 0 0 0 1 1 1 
				-1    0 0 0 0 0 0 0 0 0 
				
				3
				25    0 0 0 0 1 4 0 0 0 
				50    0 0 0 0 0 0 1 2 2 
				-1    0 0 0 0 0 0 0 0 0 
				
				4
				15    0 0 0 0 1 3 0 0 0 
				15    0 0 0 0 0 0 1 2 1 
				15    0 0 0 0 0 0 1 1 2 
				-1    0 0 0 0 0 0 0 0 0 
				
				4
				21    0 0 0 0 1 4 0 0 0 
				21    0 0 0 0 0 0 1 3 1 
				21    0 0 0 0 0 0 1 1 3 
				-1    0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>rbpl</ID>
            <Name>Rbpl</Name>
            <Description>\textbf{Title}: parallel robot, the so-called left-hand problem</Description>
            <References>\begin{itemize} \item B. Mourrain: 'The 40 generic positions of a parallel robot'. In: M. Bronstein, editor, ISSAC'93, ACM Press, pages 173-182, Kiev (Ukraine), 1993.\item Also available in the FRISCO test suite.\end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, rbpl, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>
            w^2+u^2+v^2-1,2*x^2*w+2*x^2*u+x^2+8*x*y*u+4*x*y+8*x*z*w+8*x*z*v+4*x*z-8*x*s*u-4*x*s-6*y^2*w+2*y^2*u+5*y^2+8*y*z*u+4*y*z+8*y*s*w-8*y*s*v-12*y*s-6*z^2*w+2*z^2*u+8*z^2*v+13*z^2+8*z*s*u+4*z*s+2*s^2*w+2*s^2*u+8*s^2*v+9*s^2,-150*x^2*w-50*x^2*u+143*x^2+200*x*y*w-300*x*y+200*x*z*w-300*x*z-200*x*s*u+200*x*s*v+100*x*s-150*y^2*w+150*y^2*u+243*y^2+200*y*z*u+200*y*z*v+300*y*z+200*y*s*w-300*y*s-150*z^2*w-50*z^2*u+200*z^2*v+343*z^2-200*z*s*w+300*z*s-150*s^2*w+150*s^2*u+200*s^2*v+443*s^2,-10*x^2*w-2*x^2*u+7*x^2-8*x*y*u+4*x*y+8*x*z*w-8*x*z*v-20*x*z-8*x*s*u+4*x*s-2*y^2*w-2*y^2*u-5*y^2+8*y*z*u-4*y*z+8*y*s*w+8*y*s*v-4*y*s-2*z^2*w-2*z^2*u+8*z^2*v+3*z^2-8*z*s*u+4*z*s-10*s^2*w-2*s^2*u+8*s^2*v+15*s^2,-24*x^2*w+36*x^2*u+72*x^2*v-59*x^2-144*x*y*w+48*x*y-144*x*s*v-144*x*s-24*y^2*w-108*y^2*u+72*y^2*v+13*y^2-144*y*z*v-144*y*z-24*z^2*w+36*z^2*u+72*z^2*v-59*z^2+144*z*s*w-48*z*s-24*s^2*w-108*s^2*u+72*s^2*v+13*s^2,2*(-x^2*w-x^2*u-x^2*v+2*x*y*w+2*x*y*u-4*x*y+2*x*z*w+2*x*z*v-4*x*z-2*x*s*u+2*x*s*v-3*y^2*w+y^2*u-y^2*v+4*y^2+2*y*z*u+2*y*z*v+2*y*s*w-2*y*s*v-4*y*s-3*z^2*w-z^2*u+z^2*v+4*z^2-2*z*s*w+2*z*s*u+4*z*s-s^2*w+s^2*u+s^2*v)</Equations>
            <GBasisLen>126</GBasisLen>
            <HilbertPolynomial>10/3s^3 + 37s^2 - 427/3s + 137</HilbertPolynomial>
            <Polynomials>
				6
				
				4
				1    0 0 0 2 0 0 0 0 
				1    0 0 0 0 2 0 0 0 
				1    0 0 0 0 0 2 0 0 
				-1    0 0 0 0 0 0 0 0 
				
				28
				2    2 0 0 1 0 0 0 0 
				-6    0 2 0 1 0 0 0 0 
				8    1 0 1 1 0 0 0 0 
				-6    0 0 2 1 0 0 0 0 
				2    2 0 0 0 1 0 0 0 
				8    1 1 0 0 1 0 0 0 
				2    0 2 0 0 1 0 0 0 
				8    0 1 1 0 1 0 0 0 
				2    0 0 2 0 1 0 0 0 
				8    1 0 1 0 0 1 0 0 
				8    0 0 2 0 0 1 0 0 
				8    0 1 0 1 0 0 0 1 
				-8    1 0 0 0 1 0 0 1 
				8    0 0 1 0 1 0 0 1 
				-8    0 1 0 0 0 1 0 1 
				2    0 0 0 1 0 0 0 2 
				2    0 0 0 0 1 0 0 2 
				8    0 0 0 0 0 1 0 2 
				1    2 0 0 0 0 0 0 0 
				4    1 1 0 0 0 0 0 0 
				5    0 2 0 0 0 0 0 0 
				4    1 0 1 0 0 0 0 0 
				4    0 1 1 0 0 0 0 0 
				13    0 0 2 0 0 0 0 0 
				-4    1 0 0 0 0 0 0 1 
				-12    0 1 0 0 0 0 0 1 
				4    0 0 1 0 0 0 0 1 
				9    0 0 0 0 0 0 0 2 
				
				28
				-150    2 0 0 1 0 0 0 0 
				200    1 1 0 1 0 0 0 0 
				-150    0 2 0 1 0 0 0 0 
				200    1 0 1 1 0 0 0 0 
				-150    0 0 2 1 0 0 0 0 
				-50    2 0 0 0 1 0 0 0 
				150    0 2 0 0 1 0 0 0 
				200    0 1 1 0 1 0 0 0 
				-50    0 0 2 0 1 0 0 0 
				200    0 1 1 0 0 1 0 0 
				200    0 0 2 0 0 1 0 0 
				200    0 1 0 1 0 0 0 1 
				-200    0 0 1 1 0 0 0 1 
				-200    1 0 0 0 1 0 0 1 
				200    1 0 0 0 0 1 0 1 
				-150    0 0 0 1 0 0 0 2 
				150    0 0 0 0 1 0 0 2 
				200    0 0 0 0 0 1 0 2 
				143    2 0 0 0 0 0 0 0 
				-300    1 1 0 0 0 0 0 0 
				243    0 2 0 0 0 0 0 0 
				-300    1 0 1 0 0 0 0 0 
				300    0 1 1 0 0 0 0 0 
				343    0 0 2 0 0 0 0 0 
				100    1 0 0 0 0 0 0 1 
				-300    0 1 0 0 0 0 0 1 
				300    0 0 1 0 0 0 0 1 
				443    0 0 0 0 0 0 0 2 
				
				28
				-10    2 0 0 1 0 0 0 0 
				-2    0 2 0 1 0 0 0 0 
				8    1 0 1 1 0 0 0 0 
				-2    0 0 2 1 0 0 0 0 
				-2    2 0 0 0 1 0 0 0 
				-8    1 1 0 0 1 0 0 0 
				-2    0 2 0 0 1 0 0 0 
				8    0 1 1 0 1 0 0 0 
				-2    0 0 2 0 1 0 0 0 
				-8    1 0 1 0 0 1 0 0 
				8    0 0 2 0 0 1 0 0 
				8    0 1 0 1 0 0 0 1 
				-8    1 0 0 0 1 0 0 1 
				-8    0 0 1 0 1 0 0 1 
				8    0 1 0 0 0 1 0 1 
				-10    0 0 0 1 0 0 0 2 
				-2    0 0 0 0 1 0 0 2 
				8    0 0 0 0 0 1 0 2 
				7    2 0 0 0 0 0 0 0 
				4    1 1 0 0 0 0 0 0 
				-5    0 2 0 0 0 0 0 0 
				-20    1 0 1 0 0 0 0 0 
				-4    0 1 1 0 0 0 0 0 
				3    0 0 2 0 0 0 0 0 
				4    1 0 0 0 0 0 0 1 
				-4    0 1 0 0 0 0 0 1 
				4    0 0 1 0 0 0 0 1 
				15    0 0 0 0 0 0 0 2 
				
				24
				-24    2 0 0 1 0 0 0 0 
				-144    1 1 0 1 0 0 0 0 
				-24    0 2 0 1 0 0 0 0 
				-24    0 0 2 1 0 0 0 0 
				36    2 0 0 0 1 0 0 0 
				-108    0 2 0 0 1 0 0 0 
				36    0 0 2 0 1 0 0 0 
				72    2 0 0 0 0 1 0 0 
				72    0 2 0 0 0 1 0 0 
				-144    0 1 1 0 0 1 0 0 
				72    0 0 2 0 0 1 0 0 
				144    0 0 1 1 0 0 0 1 
				-144    1 0 0 0 0 1 0 1 
				-24    0 0 0 1 0 0 0 2 
				-108    0 0 0 0 1 0 0 2 
				72    0 0 0 0 0 1 0 2 
				-59    2 0 0 0 0 0 0 0 
				48    1 1 0 0 0 0 0 0 
				13    0 2 0 0 0 0 0 0 
				-144    0 1 1 0 0 0 0 0 
				-59    0 0 2 0 0 0 0 0 
				-144    1 0 0 0 0 0 0 1 
				-48    0 0 1 0 0 0 0 1 
				13    0 0 0 0 0 0 0 2 
				
				30
				-2    2 0 0 1 0 0 0 0 
				4    1 1 0 1 0 0 0 0 
				-6    0 2 0 1 0 0 0 0 
				4    1 0 1 1 0 0 0 0 
				-6    0 0 2 1 0 0 0 0 
				-2    2 0 0 0 1 0 0 0 
				4    1 1 0 0 1 0 0 0 
				2    0 2 0 0 1 0 0 0 
				4    0 1 1 0 1 0 0 0 
				-2    0 0 2 0 1 0 0 0 
				-2    2 0 0 0 0 1 0 0 
				-2    0 2 0 0 0 1 0 0 
				4    1 0 1 0 0 1 0 0 
				4    0 1 1 0 0 1 0 0 
				2    0 0 2 0 0 1 0 0 
				4    0 1 0 1 0 0 0 1 
				-4    0 0 1 1 0 0 0 1 
				-4    1 0 0 0 1 0 0 1 
				4    0 0 1 0 1 0 0 1 
				4    1 0 0 0 0 1 0 1 
				-4    0 1 0 0 0 1 0 1 
				-2    0 0 0 1 0 0 0 2 
				2    0 0 0 0 1 0 0 2 
				2    0 0 0 0 0 1 0 2 
				-8    1 1 0 0 0 0 0 0 
				8    0 2 0 0 0 0 0 0 
				-8    1 0 1 0 0 0 0 0 
				8    0 0 2 0 0 0 0 0 
				-8    0 1 0 0 0 0 0 1 
				8    0 0 1 0 0 0 0 1 
				</Polynomials>
        </Example>
        <Example>
            <ID>rbpl24</ID>
            <Name>Rbpl24</Name>
            <Description>\textbf{Title}: parallel robot with 24 real solutions</Description>
            <References>From the FRISCO test suite.</References>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, rbpl24, with_9_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>
            62500*x^2+62500*w^2+62500*r^2-74529,625*y^2-1250*y+625*u^2+625*s^2-2624,12500*z^2+2500*z+12500*v^2-44975*v+12500*t^2-10982,400000*x*y-400000*y+400000*w*u+400000*r*s+178837,1000000*x*z+100000*z+1000000*w*v-1799000*v+1000000*r*t-805427,2000000*y*z-2000000*y+200000*z+2000000*u*v-3598000*v+2000000*s*t-1403,-113800000000000*x*u*t+206888400000000*x*u+113800000000000*x*v*s-206888400000000*x*v+2014260000000*x*s-2014260000000*x*t-362960716800000*x+113800000000000*y*w*t-206888400000000*y*w-113800000000000*y*v*r+206888400000000*y*v-2014260000000*y*r+2014260000000*y*t+38025201600000*y-113800000000000*z*w*s+206888400000000*z*w+113800000000000*z*u*r-206888400000000*z*u+2014260000000*z*r-2014260000000*z*s+292548849600000*z+61907200000000*w*s-61907200000000*w*t+11809567440000*w-61907200000000*u*r+61907200000000*u*t+1475978220000*u+61907200000000*v*r-61907200000000*v*s-825269402280000*v-1212982689600000*r-151600474800000*s+825859951200000*t-19295432410527,777600000000*x*u*t+1409011200000*x*u-777600000000*x*v*s-1409011200000*x*v+1065312000000*x*s-1065312000000*x*t+235685027200*x-777600000000*y*w*t-1409011200000*y*w+777600000000*y*v*r+1409011200000*y*v-1065312000000*y*r+1065312000000*y*t+398417510400*y+777600000000*z*w*s+1409011200000*z*w-777600000000*z*u*r-1409011200000*z*u+1065312000000*z*r-1065312000000*z*s+158626915200*z+805593600000*w*s-805593600000*w*t-311668424000*w-805593600000*u*r+805593600000*u*t-268090368000*u+805593600000*v*r-805593600000*v*s+72704002800*v+412221302400*r+354583756800*s+307085438400*t+282499646407,3200*y+1271</Equations>
            <GBasisLen>54</GBasisLen>
            <HilbertPolynomial>40</HilbertPolynomial>
            <Polynomials>
				9
				
				4
				62500    2 0 0 0 0 0 0 0 0 
				62500    0 0 0 2 0 0 0 0 0 
				62500    0 0 0 0 0 0 2 0 0 
				-74529    0 0 0 0 0 0 0 0 0 
				
				5
				625    0 2 0 0 0 0 0 0 0 
				625    0 0 0 0 2 0 0 0 0 
				625    0 0 0 0 0 0 0 2 0 
				-1250    0 1 0 0 0 0 0 0 0 
				-2624    0 0 0 0 0 0 0 0 0 
				
				6
				12500    0 0 2 0 0 0 0 0 0 
				12500    0 0 0 0 0 2 0 0 0 
				12500    0 0 0 0 0 0 0 0 2 
				2500    0 0 1 0 0 0 0 0 0 
				-44975    0 0 0 0 0 1 0 0 0 
				-10982    0 0 0 0 0 0 0 0 0 
				
				5
				400000    1 1 0 0 0 0 0 0 0 
				400000    0 0 0 1 1 0 0 0 0 
				400000    0 0 0 0 0 0 1 1 0 
				-400000    0 1 0 0 0 0 0 0 0 
				178837    0 0 0 0 0 0 0 0 0 
				
				6
				1000000    1 0 1 0 0 0 0 0 0 
				1000000    0 0 0 1 0 1 0 0 0 
				1000000    0 0 0 0 0 0 1 0 1 
				100000    0 0 1 0 0 0 0 0 0 
				-1799000    0 0 0 0 0 1 0 0 0 
				-805427    0 0 0 0 0 0 0 0 0 
				
				7
				2000000    0 1 1 0 0 0 0 0 0 
				2000000    0 0 0 0 1 1 0 0 0 
				2000000    0 0 0 0 0 0 0 1 1 
				-2000000    0 1 0 0 0 0 0 0 0 
				200000    0 0 1 0 0 0 0 0 0 
				-3598000    0 0 0 0 0 1 0 0 0 
				-1403    0 0 0 0 0 0 0 0 0 
				
				34
				113800000000000    0 0 1 0 1 0 1 0 0 
				-113800000000000    0 1 0 0 0 1 1 0 0 
				-113800000000000    0 0 1 1 0 0 0 1 0 
				113800000000000    1 0 0 0 0 1 0 1 0 
				113800000000000    0 1 0 1 0 0 0 0 1 
				-113800000000000    1 0 0 0 1 0 0 0 1 
				-206888400000000    0 1 0 1 0 0 0 0 0 
				206888400000000    0 0 1 1 0 0 0 0 0 
				206888400000000    1 0 0 0 1 0 0 0 0 
				-206888400000000    0 0 1 0 1 0 0 0 0 
				-206888400000000    1 0 0 0 0 1 0 0 0 
				206888400000000    0 1 0 0 0 1 0 0 0 
				-2014260000000    0 1 0 0 0 0 1 0 0 
				2014260000000    0 0 1 0 0 0 1 0 0 
				-61907200000000    0 0 0 0 1 0 1 0 0 
				61907200000000    0 0 0 0 0 1 1 0 0 
				2014260000000    1 0 0 0 0 0 0 1 0 
				-2014260000000    0 0 1 0 0 0 0 1 0 
				61907200000000    0 0 0 1 0 0 0 1 0 
				-61907200000000    0 0 0 0 0 1 0 1 0 
				-2014260000000    1 0 0 0 0 0 0 0 1 
				2014260000000    0 1 0 0 0 0 0 0 1 
				-61907200000000    0 0 0 1 0 0 0 0 1 
				61907200000000    0 0 0 0 1 0 0 0 1 
				-362960716800000    1 0 0 0 0 0 0 0 0 
				38025201600000    0 1 0 0 0 0 0 0 0 
				292548849600000    0 0 1 0 0 0 0 0 0 
				11809567440000    0 0 0 1 0 0 0 0 0 
				1475978220000    0 0 0 0 1 0 0 0 0 
				-825269402280000    0 0 0 0 0 1 0 0 0 
				-1212982689600000    0 0 0 0 0 0 1 0 0 
				-151600474800000    0 0 0 0 0 0 0 1 0 
				825859951200000    0 0 0 0 0 0 0 0 1 
				-19295432410527    0 0 0 0 0 0 0 0 0 
				
				34
				-777600000000    0 0 1 0 1 0 1 0 0 
				777600000000    0 1 0 0 0 1 1 0 0 
				777600000000    0 0 1 1 0 0 0 1 0 
				-777600000000    1 0 0 0 0 1 0 1 0 
				-777600000000    0 1 0 1 0 0 0 0 1 
				777600000000    1 0 0 0 1 0 0 0 1 
				-1409011200000    0 1 0 1 0 0 0 0 0 
				1409011200000    0 0 1 1 0 0 0 0 0 
				1409011200000    1 0 0 0 1 0 0 0 0 
				-1409011200000    0 0 1 0 1 0 0 0 0 
				-1409011200000    1 0 0 0 0 1 0 0 0 
				1409011200000    0 1 0 0 0 1 0 0 0 
				-1065312000000    0 1 0 0 0 0 1 0 0 
				1065312000000    0 0 1 0 0 0 1 0 0 
				-805593600000    0 0 0 0 1 0 1 0 0 
				805593600000    0 0 0 0 0 1 1 0 0 
				1065312000000    1 0 0 0 0 0 0 1 0 
				-1065312000000    0 0 1 0 0 0 0 1 0 
				805593600000    0 0 0 1 0 0 0 1 0 
				-805593600000    0 0 0 0 0 1 0 1 0 
				-1065312000000    1 0 0 0 0 0 0 0 1 
				1065312000000    0 1 0 0 0 0 0 0 1 
				-805593600000    0 0 0 1 0 0 0 0 1 
				805593600000    0 0 0 0 1 0 0 0 1 
				235685027200    1 0 0 0 0 0 0 0 0 
				398417510400    0 1 0 0 0 0 0 0 0 
				158626915200    0 0 1 0 0 0 0 0 0 
				-311668424000    0 0 0 1 0 0 0 0 0 
				-268090368000    0 0 0 0 1 0 0 0 0 
				72704002800    0 0 0 0 0 1 0 0 0 
				412221302400    0 0 0 0 0 0 1 0 0 
				354583756800    0 0 0 0 0 0 0 1 0 
				307085438400    0 0 0 0 0 0 0 0 1 
				282499646407    0 0 0 0 0 0 0 0 0 
				
				2
				3200    0 1 0 0 0 0 0 0 0 
				1271    0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>redcyc5</ID>
            <Name>Redcyc5</Name>
            <Description>\textbf{Title}: cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg. `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R. 'How we proved that there are exactly 924 cyclic 7-roots', Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R. 'Methods to ``divide out'' certain solutions from systems of algebraic equations, applied to find all cyclic 8-roots', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript, 1995.\end{itemize}</References>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, redcyc5, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>
            x+y+z+w+1,x*y+x+y*z+z*w+w,x*y*z+x*y+x*w+y*z*w+z*w,x*y*z*w+x*y*z+x*y*w+x*z*w+y*z*w,x*y*z*w*v^5-1</Equations>
            <GBasisLen>10</GBasisLen>
            <HilbertPolynomial>70s - 210</HilbertPolynomial>
            <Polynomials>
				5
				
				5
				1    1 0 0 0 0 0 
				1    0 1 0 0 0 0 
				1    0 0 1 0 0 0 
				1    0 0 0 1 0 0 
				1    0 0 0 0 0 0 
				
				5
				1    1 1 0 0 0 0 
				1    0 1 1 0 0 0 
				1    0 0 1 1 0 0 
				1    1 0 0 0 0 0 
				1    0 0 0 1 0 0 
				
				5
				1    1 1 1 0 0 0 
				1    0 1 1 1 0 0 
				1    1 1 0 0 0 0 
				1    1 0 0 1 0 0 
				1    0 0 1 1 0 0 
				
				5
				1    1 1 1 1 0 0 
				1    1 1 1 0 0 0 
				1    1 1 0 1 0 0 
				1    1 0 1 1 0 0 
				1    0 1 1 1 0 0 
				
				2
				1    1 1 1 1 0 5 
				-1    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>redcyc6</ID>
            <Name>Redcyc6</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg. `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R. 'How we proved that there are exactly 924 cyclic 7-roots', Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R. 'Methods to ``divide out'' certain solutions from systems of algebraic equations, applied to find all cyclic 8-roots', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript, 1995.\end{itemize}</References>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, redcyc6, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>
            x+y+z+w+u+1,x*y+x+y*z+z*w+w*u+u,x*y*z+x*y+x*u+y*z*w+z*w*u+w*u,x*y*z*w+x*y*z+x*y*u+x*w*u+y*z*w*u+z*w*u,x*y*z*w*u+x*y*z*w+x*y*z*u+x*y*w*u+x*z*w*u+y*z*w*u,x*y*z*w*u*r^6-1</Equations>
            <GBasisLen>21</GBasisLen>
            <HilbertPolynomial>156s - 588</HilbertPolynomial>
            <Polynomials>
				6
				
				6
				1    1 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 
				
				6
				1    1 1 0 0 0 0 0 
				1    0 1 1 0 0 0 0 
				1    0 0 1 1 0 0 0 
				1    0 0 0 1 1 0 0 
				1    1 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 
				
				6
				1    1 1 1 0 0 0 0 
				1    0 1 1 1 0 0 0 
				1    0 0 1 1 1 0 0 
				1    1 1 0 0 0 0 0 
				1    1 0 0 0 1 0 0 
				1    0 0 0 1 1 0 0 
				
				6
				1    1 1 1 1 0 0 0 
				1    0 1 1 1 1 0 0 
				1    1 1 1 0 0 0 0 
				1    1 1 0 0 1 0 0 
				1    1 0 0 1 1 0 0 
				1    0 0 1 1 1 0 0 
				
				6
				1    1 1 1 1 1 0 0 
				1    1 1 1 1 0 0 0 
				1    1 1 1 0 1 0 0 
				1    1 1 0 1 1 0 0 
				1    1 0 1 1 1 0 0 
				1    0 1 1 1 1 0 0 
				
				2
				1    1 1 1 1 1 0 6 
				-1    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>redcyc7</ID>
            <Name>Redcyc7</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg. `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R. 'How we proved that there are exactly 924 cyclic 7-roots', Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R. 'Methods to ``divide out'' certain solutions from systems of algebraic equations, applied to find all cyclic 8-roots', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript, 1995.\end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, redcyc7, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>
            x+y+z+w+u+v+1,x*y+x+y*z+z*w+w*u+u*v+v,x*y*z+x*y+x*v+y*z*w+z*w*u+w*u*v+u*v,x*y*z*w+x*y*z+x*y*v+x*u*v+y*z*w*u+z*w*u*v+w*u*v,x*y*z*w*u+x*y*z*w+x*y*z*v+x*y*u*v+x*w*u*v+y*z*w*u*v+z*w*u*v,x*y*z*w*u*v+x*y*z*w*u+x*y*z*w*v+x*y*z*u*v+x*y*w*u*v+x*z*w*u*v+y*z*w*u*v,x*y*z*w*u*v*s^7-1</Equations>
            <GBasisLen>78</GBasisLen>
            <HilbertPolynomial>924s - 5257</HilbertPolynomial>
            <Polynomials>
				7
				
				7
				1    1 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 
				
				7
				1    1 1 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 
				1    0 0 0 1 1 0 0 0 
				1    0 0 0 0 1 1 0 0 
				1    1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 
				
				7
				1    1 1 1 0 0 0 0 0 
				1    0 1 1 1 0 0 0 0 
				1    0 0 1 1 1 0 0 0 
				1    0 0 0 1 1 1 0 0 
				1    1 1 0 0 0 0 0 0 
				1    1 0 0 0 0 1 0 0 
				1    0 0 0 0 1 1 0 0 
				
				7
				1    1 1 1 1 0 0 0 0 
				1    0 1 1 1 1 0 0 0 
				1    0 0 1 1 1 1 0 0 
				1    1 1 1 0 0 0 0 0 
				1    1 1 0 0 0 1 0 0 
				1    1 0 0 0 1 1 0 0 
				1    0 0 0 1 1 1 0 0 
				
				7
				1    1 1 1 1 1 0 0 0 
				1    0 1 1 1 1 1 0 0 
				1    1 1 1 1 0 0 0 0 
				1    1 1 1 0 0 1 0 0 
				1    1 1 0 0 1 1 0 0 
				1    1 0 0 1 1 1 0 0 
				1    0 0 1 1 1 1 0 0 
				
				7
				1    1 1 1 1 1 1 0 0 
				1    1 1 1 1 1 0 0 0 
				1    1 1 1 1 0 1 0 0 
				1    1 1 1 0 1 1 0 0 
				1    1 1 0 1 1 1 0 0 
				1    1 0 1 1 1 1 0 0 
				1    0 1 1 1 1 1 0 0 
				
				2
				1    1 1 1 1 1 1 0 7 
				-1    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>redcyc8</ID>
            <Name>Redcyc8</Name>
            <Description>\textbf{Title}: Cyclic n-roots problem</Description>
            <References>\begin{itemize} \item G\'oran Bj\'orck and Ralf Fr\'oberg. `A faster way to count the solutions of inhomogeneous systems of algebraic equations, with applications to cyclic n-roots', in J. Symbolic Computation (1991) 12.\item Backelin, J. and Froeberg, R. 'How we proved that there are exactly 924 cyclic 7-roots', Proceedings of ISSAC-91, pp 103-111, ACM, New York, 1991.\item G. Bj\'orck and R. Fr\'oberg, R. 'Methods to ``divide out'' certain solutions from systems of algebraic equations, applied to find all cyclic 8-roots', In: Analysis, Algebra and Computers in Math. research, M. Gyllenberg and L.E.Persson eds., Lect. Notes in Applied Math. vol. 564, pp 57-70, Dekker, 1994.\item J. Canny and P. Pedersen. An algorithm for the Newton resultant. Technical Report 1394, Comp. Science Dept., Cornell University, 1993. \item I.Z. Emiris and J.F. Canny. Efficient incremental algorithms for the sparse resultant and the mixed volume. J. Symbolic Computation, 20(2):117-149, August 1995. \item L. Pottier. Bounds for degree of the n-cyclic system. INRIA Sophia-Antipolis, Manuscript, 1995.\end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, redcyc8, with_9_vars, hard_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>
            x+y+z+w+u+v+r+1,x*y+x+y*z+z*w+w*u+u*v+v*r+r,x*y*z+x*y+x*r+y*z*w+z*w*u+w*u*v+u*v*r+v*r,x*y*z*w+x*y*z+x*y*r+x*v*r+y*z*w*u+z*w*u*v+w*u*v*r+u*v*r,x*y*z*w*u+x*y*z*w+x*y*z*r+x*y*v*r+x*u*v*r+y*z*w*u*v+z*w*u*v*r+w*u*v*r,x*y*z*w*u*v+x*y*z*w*u+x*y*z*w*r+x*y*z*v*r+x*y*u*v*r+x*w*u*v*r+y*z*w*u*v*r+z*w*u*v*r,x*y*z*w*u*v*r+x*y*z*w*u*v+x*y*z*w*u*r+x*y*z*w*v*r+x*y*z*u*v*r+x*y*w*u*v*r+x*z*w*u*v*r+y*z*w*u*v*r,x*y*z*w*u*v*r*t^8-1</Equations>
            <GBasisLen>-</GBasisLen>
            <HilbertPolynomial>-</HilbertPolynomial>
            <Polynomials>
				8
				
				8
				1    1 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 0 
				
				8
				1    1 1 0 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 0 
				1    0 0 0 1 1 0 0 0 0 
				1    0 0 0 0 1 1 0 0 0 
				1    0 0 0 0 0 1 1 0 0 
				1    1 0 0 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 
				
				8
				1    1 1 1 0 0 0 0 0 0 
				1    0 1 1 1 0 0 0 0 0 
				1    0 0 1 1 1 0 0 0 0 
				1    0 0 0 1 1 1 0 0 0 
				1    0 0 0 0 1 1 1 0 0 
				1    1 1 0 0 0 0 0 0 0 
				1    1 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 1 0 0 
				
				8
				1    1 1 1 1 0 0 0 0 0 
				1    0 1 1 1 1 0 0 0 0 
				1    0 0 1 1 1 1 0 0 0 
				1    0 0 0 1 1 1 1 0 0 
				1    1 1 1 0 0 0 0 0 0 
				1    1 1 0 0 0 0 1 0 0 
				1    1 0 0 0 0 1 1 0 0 
				1    0 0 0 0 1 1 1 0 0 
				
				8
				1    1 1 1 1 1 0 0 0 0 
				1    0 1 1 1 1 1 0 0 0 
				1    0 0 1 1 1 1 1 0 0 
				1    1 1 1 1 0 0 0 0 0 
				1    1 1 1 0 0 0 1 0 0 
				1    1 1 0 0 0 1 1 0 0 
				1    1 0 0 0 1 1 1 0 0 
				1    0 0 0 1 1 1 1 0 0 
				
				8
				1    1 1 1 1 1 1 0 0 0 
				1    0 1 1 1 1 1 1 0 0 
				1    1 1 1 1 1 0 0 0 0 
				1    1 1 1 1 0 0 1 0 0 
				1    1 1 1 0 0 1 1 0 0 
				1    1 1 0 0 1 1 1 0 0 
				1    1 0 0 1 1 1 1 0 0 
				1    0 0 1 1 1 1 1 0 0 
				
				8
				1    1 1 1 1 1 1 1 0 0 
				1    1 1 1 1 1 1 0 0 0 
				1    1 1 1 1 1 0 1 0 0 
				1    1 1 1 1 0 1 1 0 0 
				1    1 1 1 0 1 1 1 0 0 
				1    1 1 0 1 1 1 1 0 0 
				1    1 0 1 1 1 1 1 0 0 
				1    0 1 1 1 1 1 1 0 0 
				
				2
				1    1 1 1 1 1 1 1 0 8 
				-1    0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>redeco11</ID>
            <Name>Redeco11</Name>
            <Description>\textbf{Title}: n-dimensional economics problem. This is the reduced economics problem $(u_n = 1/x_n)$.</Description>
            <References>
            \begin{itemize} \item Alexander Morgan: `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}
            </References>
            <Variables>x[1..11]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, redeco11, with_11_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_11_vars</TestEnvironment>
            <Equations>
            -x[11]+x[1]*x[2]+x[1]+x[10]*x[9]+x[2]*x[3]+x[3]*x[4]+x[4]*x[5]+x[5]*x[6]+x[6]*x[7]+x[7]*x[8]+x[8]*x[9],-2*x[11]+x[1]*x[3]+x[10]*x[8]+x[2]*x[4]+x[2]+x[3]*x[5]+x[4]*x[6]+x[5]*x[7]+x[6]*x[8]+x[7]*x[9],-3*x[11]+x[1]*x[4]+x[10]*x[7]+x[2]*x[5]+x[3]*x[6]+x[3]+x[4]*x[7]+x[5]*x[8]+x[6]*x[9],-4*x[11]+x[1]*x[5]+x[10]*x[6]+x[2]*x[6]+x[3]*x[7]+x[4]*x[8]+x[4]+x[5]*x[9],-5*x[11]+x[1]*x[6]+x[10]*x[5]+x[2]*x[7]+x[3]*x[8]+x[4]*x[9]+x[5],-6*x[11]+x[1]*x[7]+x[10]*x[4]+x[2]*x[8]+x[3]*x[9]+x[6],-7*x[11]+x[1]*x[8]+x[10]*x[3]+x[2]*x[9]+x[7],-8*x[11]+x[1]*x[9]+x[10]*x[2]+x[8],-9*x[11]+x[1]*x[10]+x[9],-10*x[11]+x[10],x[1]+x[10]+x[2]+x[3]+x[4]+x[5]+x[6]+x[7]+x[8]+x[9]+1</Equations>
            <GBasisLen>513</GBasisLen>
            <HilbertPolynomial>512</HilbertPolynomial>
            <Polynomials>
				11
				
				11
				1    1 1 0 0 0 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 0 0 0 
				1    0 0 0 1 1 0 0 0 0 0 0 
				1    0 0 0 0 1 1 0 0 0 0 0 
				1    0 0 0 0 0 1 1 0 0 0 0 
				1    0 0 0 0 0 0 1 1 0 0 0 
				1    0 0 0 0 0 0 0 1 1 0 0 
				1    0 0 0 0 0 0 0 0 1 1 0 
				1    1 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 1 
				
				10
				1    1 0 1 0 0 0 0 0 0 0 0 
				1    0 1 0 1 0 0 0 0 0 0 0 
				1    0 0 1 0 1 0 0 0 0 0 0 
				1    0 0 0 1 0 1 0 0 0 0 0 
				1    0 0 0 0 1 0 1 0 0 0 0 
				1    0 0 0 0 0 1 0 1 0 0 0 
				1    0 0 0 0 0 0 1 0 1 0 0 
				1    0 0 0 0 0 0 0 1 0 1 0 
				1    0 1 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 1 
				
				9
				1    1 0 0 1 0 0 0 0 0 0 0 
				1    0 1 0 0 1 0 0 0 0 0 0 
				1    0 0 1 0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 1 0 0 
				1    0 0 0 0 0 0 1 0 0 1 0 
				1    0 0 1 0 0 0 0 0 0 0 0 
				-3    0 0 0 0 0 0 0 0 0 0 1 
				
				8
				1    1 0 0 0 1 0 0 0 0 0 0 
				1    0 1 0 0 0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 0 0 1 0 
				1    0 0 0 1 0 0 0 0 0 0 0 
				-4    0 0 0 0 0 0 0 0 0 0 1 
				
				7
				1    1 0 0 0 0 1 0 0 0 0 0 
				1    0 1 0 0 0 0 1 0 0 0 0 
				1    0 0 1 0 0 0 0 1 0 0 0 
				1    0 0 0 1 0 0 0 0 1 0 0 
				1    0 0 0 0 1 0 0 0 0 1 0 
				1    0 0 0 0 1 0 0 0 0 0 0 
				-5    0 0 0 0 0 0 0 0 0 0 1 
				
				6
				1    1 0 0 0 0 0 1 0 0 0 0 
				1    0 1 0 0 0 0 0 1 0 0 0 
				1    0 0 1 0 0 0 0 0 1 0 0 
				1    0 0 0 1 0 0 0 0 0 1 0 
				1    0 0 0 0 0 1 0 0 0 0 0 
				-6    0 0 0 0 0 0 0 0 0 0 1 
				
				5
				1    1 0 0 0 0 0 0 1 0 0 0 
				1    0 1 0 0 0 0 0 0 1 0 0 
				1    0 0 1 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 1 0 0 0 0 
				-7    0 0 0 0 0 0 0 0 0 0 1 
				
				4
				1    1 0 0 0 0 0 0 0 1 0 0 
				1    0 1 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 1 0 0 0 
				-8    0 0 0 0 0 0 0 0 0 0 1 
				
				3
				1    1 0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 1 0 0 
				-9    0 0 0 0 0 0 0 0 0 0 1 
				
				2
				1    0 0 0 0 0 0 0 0 0 1 0 
				-10    0 0 0 0 0 0 0 0 0 0 1 
				
				11
				1    1 0 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>redeco12</ID>
            <Name>Redeco12</Name>
            <Description>\textbf{Title}: n-dimensional economics problem. This is the reduced economics problem $(u_n = 1/x_n)$.</Description>
            <References>
            \begin{itemize} \item Alexander Morgan: `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}
            </References>
            <Variables>x[1..12]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, redeco12, with_12_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_12_vars</TestEnvironment>
            <Equations>
            -x[12]+x[1]*x[2]+x[1]+x[10]*x[11]+x[10]*x[9]+x[2]*x[3]+x[3]*x[4]+x[4]*x[5]+x[5]*x[6]+x[6]*x[7]+x[7]*x[8]+x[8]*x[9],-2*x[12]+x[1]*x[3]+x[10]*x[8]+x[11]*x[9]+x[2]*x[4]+x[2]+x[3]*x[5]+x[4]*x[6]+x[5]*x[7]+x[6]*x[8]+x[7]*x[9],-3*x[12]+x[1]*x[4]+x[10]*x[7]+x[11]*x[8]+x[2]*x[5]+x[3]*x[6]+x[3]+x[4]*x[7]+x[5]*x[8]+x[6]*x[9],-4*x[12]+x[1]*x[5]+x[10]*x[6]+x[11]*x[7]+x[2]*x[6]+x[3]*x[7]+x[4]*x[8]+x[4]+x[5]*x[9],-5*x[12]+x[1]*x[6]+x[10]*x[5]+x[11]*x[6]+x[2]*x[7]+x[3]*x[8]+x[4]*x[9]+x[5],-6*x[12]+x[1]*x[7]+x[10]*x[4]+x[11]*x[5]+x[2]*x[8]+x[3]*x[9]+x[6],-7*x[12]+x[1]*x[8]+x[10]*x[3]+x[11]*x[4]+x[2]*x[9]+x[7],-8*x[12]+x[1]*x[9]+x[10]*x[2]+x[11]*x[3]+x[8],-9*x[12]+x[1]*x[10]+x[11]*x[2]+x[9],-10*x[12]+x[1]*x[11]+x[10],-11*x[12]+x[11],x[1]+x[10]+x[11]+x[2]+x[3]+x[4]+x[5]+x[6]+x[7]+x[8]+x[9]+1</Equations>
            <GBasisLen>1025</GBasisLen>
            <HilbertPolynomial>1024</HilbertPolynomial>
            <Polynomials>
				12
				
				12
				1    1 1 0 0 0 0 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 0 0 0 0 
				1    0 0 0 1 1 0 0 0 0 0 0 0 
				1    0 0 0 0 1 1 0 0 0 0 0 0 
				1    0 0 0 0 0 1 1 0 0 0 0 0 
				1    0 0 0 0 0 0 1 1 0 0 0 0 
				1    0 0 0 0 0 0 0 1 1 0 0 0 
				1    0 0 0 0 0 0 0 0 1 1 0 0 
				1    0 0 0 0 0 0 0 0 0 1 1 0 
				1    1 0 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 1 
				
				11
				1    1 0 1 0 0 0 0 0 0 0 0 0 
				1    0 1 0 1 0 0 0 0 0 0 0 0 
				1    0 0 1 0 1 0 0 0 0 0 0 0 
				1    0 0 0 1 0 1 0 0 0 0 0 0 
				1    0 0 0 0 1 0 1 0 0 0 0 0 
				1    0 0 0 0 0 1 0 1 0 0 0 0 
				1    0 0 0 0 0 0 1 0 1 0 0 0 
				1    0 0 0 0 0 0 0 1 0 1 0 0 
				1    0 0 0 0 0 0 0 0 1 0 1 0 
				1    0 1 0 0 0 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 0 0 0 1 
				
				10
				1    1 0 0 1 0 0 0 0 0 0 0 0 
				1    0 1 0 0 1 0 0 0 0 0 0 0 
				1    0 0 1 0 0 1 0 0 0 0 0 0 
				1    0 0 0 1 0 0 1 0 0 0 0 0 
				1    0 0 0 0 1 0 0 1 0 0 0 0 
				1    0 0 0 0 0 1 0 0 1 0 0 0 
				1    0 0 0 0 0 0 1 0 0 1 0 0 
				1    0 0 0 0 0 0 0 1 0 0 1 0 
				1    0 0 1 0 0 0 0 0 0 0 0 0 
				-3    0 0 0 0 0 0 0 0 0 0 0 1 
				
				9
				1    1 0 0 0 1 0 0 0 0 0 0 0 
				1    0 1 0 0 0 1 0 0 0 0 0 0 
				1    0 0 1 0 0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 0 1 0 0 
				1    0 0 0 0 0 0 1 0 0 0 1 0 
				1    0 0 0 1 0 0 0 0 0 0 0 0 
				-4    0 0 0 0 0 0 0 0 0 0 0 1 
				
				8
				1    1 0 0 0 0 1 0 0 0 0 0 0 
				1    0 1 0 0 0 0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 0 0 0 1 0 
				1    0 0 0 0 1 0 0 0 0 0 0 0 
				-5    0 0 0 0 0 0 0 0 0 0 0 1 
				
				7
				1    1 0 0 0 0 0 1 0 0 0 0 0 
				1    0 1 0 0 0 0 0 1 0 0 0 0 
				1    0 0 1 0 0 0 0 0 1 0 0 0 
				1    0 0 0 1 0 0 0 0 0 1 0 0 
				1    0 0 0 0 1 0 0 0 0 0 1 0 
				1    0 0 0 0 0 1 0 0 0 0 0 0 
				-6    0 0 0 0 0 0 0 0 0 0 0 1 
				
				6
				1    1 0 0 0 0 0 0 1 0 0 0 0 
				1    0 1 0 0 0 0 0 0 1 0 0 0 
				1    0 0 1 0 0 0 0 0 0 1 0 0 
				1    0 0 0 1 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 1 0 0 0 0 0 
				-7    0 0 0 0 0 0 0 0 0 0 0 1 
				
				5
				1    1 0 0 0 0 0 0 0 1 0 0 0 
				1    0 1 0 0 0 0 0 0 0 1 0 0 
				1    0 0 1 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 1 0 0 0 0 
				-8    0 0 0 0 0 0 0 0 0 0 0 1 
				
				4
				1    1 0 0 0 0 0 0 0 0 1 0 0 
				1    0 1 0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 1 0 0 0 
				-9    0 0 0 0 0 0 0 0 0 0 0 1 
				
				3
				1    1 0 0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 1 0 0 
				-10    0 0 0 0 0 0 0 0 0 0 0 1 
				
				2
				1    0 0 0 0 0 0 0 0 0 0 1 0 
				-11    0 0 0 0 0 0 0 0 0 0 0 1 
				
				12
				1    1 0 0 0 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 0 0 0 
				1    0 0 0 0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>redeco7</ID>
            <Name>Redeco7</Name>
            <Description>\textbf{Title}: n-dimensional economics problem. This is the reduced economics problem $(u_n = 1/x_n)$.</Description>
            <References>
            \begin{itemize} \item Alexander Morgan: `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}
            </References>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, redeco7, with_7_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>
            -r+x*y+x+y*z+z*w+w*u+u*v,-2*r+x*z+y*w+y+z*u+w*v,-3*r+x*w+y*u+z*v+z,-4*r+x*u+y*v+w,-5*r+x*v+u,-6*r+v,x+y+z+w+u+v+1</Equations>
            <GBasisLen>33</GBasisLen>
            <HilbertPolynomial>32</HilbertPolynomial>
            <Polynomials>
				7
				
				7
				1    1 1 0 0 0 0 0 
				1    0 1 1 0 0 0 0 
				1    0 0 1 1 0 0 0 
				1    0 0 0 1 1 0 0 
				1    0 0 0 0 1 1 0 
				1    1 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 1 
				
				6
				1    1 0 1 0 0 0 0 
				1    0 1 0 1 0 0 0 
				1    0 0 1 0 1 0 0 
				1    0 0 0 1 0 1 0 
				1    0 1 0 0 0 0 0 
				-2    0 0 0 0 0 0 1 
				
				5
				1    1 0 0 1 0 0 0 
				1    0 1 0 0 1 0 0 
				1    0 0 1 0 0 1 0 
				1    0 0 1 0 0 0 0 
				-3    0 0 0 0 0 0 1 
				
				4
				1    1 0 0 0 1 0 0 
				1    0 1 0 0 0 1 0 
				1    0 0 0 1 0 0 0 
				-4    0 0 0 0 0 0 1 
				
				3
				1    1 0 0 0 0 1 0 
				1    0 0 0 0 1 0 0 
				-5    0 0 0 0 0 0 1 
				
				2
				1    0 0 0 0 0 1 0 
				-6    0 0 0 0 0 0 1 
				
				7
				1    1 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 
				1    0 0 1 0 0 0 0 
				1    0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>redeco8</ID>
            <Name>Redeco8</Name>
            <Description>\textbf{Title}: n-dimensional economics problem. This is the reduced economics problem $(u_n = 1/x_n)$.</Description>
            <References>
            \begin{itemize} \item Alexander Morgan: `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}
            </References>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, redeco8, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>-s+x*y+x+y*z+z*w+w*u+u*v+v*r,-2*s+x*z+y*w+y+z*u+w*v+u*r,-3*s+x*w+y*u+z*v+z+w*r,-4*s+x*u+y*v+z*r+w,-5*s+x*v+y*r+u,-6*s+x*r+v,-7*s+r,x+y+z+w+u+v+r+1</Equations>
            <GBasisLen>65</GBasisLen>
            <HilbertPolynomial>64</HilbertPolynomial>
            <Polynomials>
				8
				
				8
				1    1 1 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 
				1    0 0 0 1 1 0 0 0 
				1    0 0 0 0 1 1 0 0 
				1    0 0 0 0 0 1 1 0 
				1    1 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 1 
				
				7
				1    1 0 1 0 0 0 0 0 
				1    0 1 0 1 0 0 0 0 
				1    0 0 1 0 1 0 0 0 
				1    0 0 0 1 0 1 0 0 
				1    0 0 0 0 1 0 1 0 
				1    0 1 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 1 
				
				6
				1    1 0 0 1 0 0 0 0 
				1    0 1 0 0 1 0 0 0 
				1    0 0 1 0 0 1 0 0 
				1    0 0 0 1 0 0 1 0 
				1    0 0 1 0 0 0 0 0 
				-3    0 0 0 0 0 0 0 1 
				
				5
				1    1 0 0 0 1 0 0 0 
				1    0 1 0 0 0 1 0 0 
				1    0 0 1 0 0 0 1 0 
				1    0 0 0 1 0 0 0 0 
				-4    0 0 0 0 0 0 0 1 
				
				4
				1    1 0 0 0 0 1 0 0 
				1    0 1 0 0 0 0 1 0 
				1    0 0 0 0 1 0 0 0 
				-5    0 0 0 0 0 0 0 1 
				
				3
				1    1 0 0 0 0 0 1 0 
				1    0 0 0 0 0 1 0 0 
				-6    0 0 0 0 0 0 0 1 
				
				2
				1    0 0 0 0 0 0 1 0 
				-7    0 0 0 0 0 0 0 1 
				
				8
				1    1 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 
				1    0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>redeco9</ID>
            <Name>Redeco9</Name>
            <Description>\textbf{Title}: n-dimensional economics problem. This is the reduced economics problem $(u_n = 1/x_n)$.</Description>
            <References>
            \begin{itemize} \item Alexander Morgan: `Solving polynomial systems using continuation for engineering and scientific problems', Prentice-Hall, Englewood Cliffs, New Jersey, 1987, p. 148.\end{itemize}
            </References>
            <Variables>x,y,z,w,u,v,r,s,t</Variables>
            <TagsList>DevRevLex, DegLex, Lex, redeco9, with_9_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_9_vars</TestEnvironment>
            <Equations>-t+x*y+x+y*z+z*w+w*u+u*v+v*r+r*s,-2*t+x*z+y*w+y+z*u+w*v+u*r+v*s,-3*t+x*w+y*u+z*v+z+w*r+u*s,-4*t+x*u+y*v+z*r+w*s+w,-5*t+x*v+y*r+z*s+u,-6*t+x*r+y*s+v,-7*t+x*s+r,-8*t+s,x+y+z+w+u+v+r+s+1</Equations>
            <GBasisLen>129</GBasisLen>
            <HilbertPolynomial>128</HilbertPolynomial>
            <Polynomials>
				9
				
				9
				1    1 1 0 0 0 0 0 0 0 
				1    0 1 1 0 0 0 0 0 0 
				1    0 0 1 1 0 0 0 0 0 
				1    0 0 0 1 1 0 0 0 0 
				1    0 0 0 0 1 1 0 0 0 
				1    0 0 0 0 0 1 1 0 0 
				1    0 0 0 0 0 0 1 1 0 
				1    1 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 1 
				
				8
				1    1 0 1 0 0 0 0 0 0 
				1    0 1 0 1 0 0 0 0 0 
				1    0 0 1 0 1 0 0 0 0 
				1    0 0 0 1 0 1 0 0 0 
				1    0 0 0 0 1 0 1 0 0 
				1    0 0 0 0 0 1 0 1 0 
				1    0 1 0 0 0 0 0 0 0 
				-2    0 0 0 0 0 0 0 0 1 
				
				7
				1    1 0 0 1 0 0 0 0 0 
				1    0 1 0 0 1 0 0 0 0 
				1    0 0 1 0 0 1 0 0 0 
				1    0 0 0 1 0 0 1 0 0 
				1    0 0 0 0 1 0 0 1 0 
				1    0 0 1 0 0 0 0 0 0 
				-3    0 0 0 0 0 0 0 0 1 
				
				6
				1    1 0 0 0 1 0 0 0 0 
				1    0 1 0 0 0 1 0 0 0 
				1    0 0 1 0 0 0 1 0 0 
				1    0 0 0 1 0 0 0 1 0 
				1    0 0 0 1 0 0 0 0 0 
				-4    0 0 0 0 0 0 0 0 1 
				
				5
				1    1 0 0 0 0 1 0 0 0 
				1    0 1 0 0 0 0 1 0 0 
				1    0 0 1 0 0 0 0 1 0 
				1    0 0 0 0 1 0 0 0 0 
				-5    0 0 0 0 0 0 0 0 1 
				
				4
				1    1 0 0 0 0 0 1 0 0 
				1    0 1 0 0 0 0 0 1 0 
				1    0 0 0 0 0 1 0 0 0 
				-6    0 0 0 0 0 0 0 0 1 
				
				3
				1    1 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 1 0 0 
				-7    0 0 0 0 0 0 0 0 1 
				
				2
				1    0 0 0 0 0 0 0 1 0 
				-8    0 0 0 0 0 0 0 0 1 
				
				9
				1    1 0 0 0 0 0 0 0 0 
				1    0 1 0 0 0 0 0 0 0 
				1    0 0 1 0 0 0 0 0 0 
				1    0 0 0 1 0 0 0 0 0 
				1    0 0 0 0 1 0 0 0 0 
				1    0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>reif</ID>
            <Name>Reif</Name>
            <Description>\textbf{Title}:</Description>
            <References>From the POSSO test suite</References>
            <Variables>x[1..16]</Variables>
            <TagsList>DevRevLex, DegLex, Lex, reif, with_16_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_16_vars</TestEnvironment>
            <Equations>x[13]*x[4]-x[13]*x[6]+x[14]*x[5]-x[14]*x[6]+x[6],x[15]*x[4]-x[15]*x[6]+x[16]*x[5]-x[16]*x[6],x[13]*x[7]-x[13]*x[9]+x[14]*x[8]-x[14]*x[9]+x[9],x[15]*x[7]-x[15]*x[9]+x[16]*x[8]-x[16]*x[9]-1,x[10]*x[13]+x[11]*x[14]-x[12]*x[13]-x[12]*x[14]+x[12],x[10]*x[15]+x[11]*x[16]-x[12]*x[15]-x[12]*x[16],x[1]*x[13]-x[13]*x[3]+x[14]*x[2]-x[14]*x[3]+x[3],x[1]*x[15]-x[15]*x[3]+x[16]*x[2]-x[16]*x[3],x[1]*x[13]*x[4]-x[13]*x[3]*x[6]+x[14]*x[2]*x[5]-x[14]*x[3]*x[6]+x[3]*x[6]-1,x[1]*x[15]*x[4]-x[15]*x[3]*x[6]+x[16]*x[2]*x[5]-x[16]*x[3]*x[6],x[1]*x[13]*x[7]-x[13]*x[3]*x[9]+x[14]*x[2]*x[8]-x[14]*x[3]*x[9]+x[3]*x[9],x[1]*x[15]*x[7]-x[15]*x[3]*x[9]+x[16]*x[2]*x[8]-x[16]*x[3]*x[9],x[1]*x[10]*x[13]+x[11]*x[14]*x[2]-x[12]*x[13]*x[3]-x[12]*x[14]*x[3]+x[12]*x[3],x[1]*x[10]*x[15]+x[11]*x[16]*x[2]-x[12]*x[15]*x[3]-x[12]*x[16]*x[3]-1</Equations>
            <GBasisLen>1</GBasisLen>
            <HilbertPolynomial>0</HilbertPolynomial>
            <Polynomials>
				14
				
				5
				1    0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 
				-1    0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
				1    0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 
				-1    0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 
				1    0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
				
				4
				1    0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 
				-1    0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 
				1    0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 
				
				5
				1    0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
				-1    0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 
				1    0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 
				-1    0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 
				1    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
				
				5
				1    0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 
				1    0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				5
				1    0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 
				1    0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 
				1    0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
				
				4
				1    0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 
				1    0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 
				
				5
				1    1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
				-1    0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
				1    0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
				-1    0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 
				1    0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				1    1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
				-1    0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 
				1    0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
				-1    0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 
				
				6
				1    1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 
				-1    0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 
				1    0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 
				-1    0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 
				1    0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				
				4
				1    1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 
				-1    0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 
				1    0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 
				-1    0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 
				
				5
				1    1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
				-1    0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 
				1    0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 
				-1    0 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 
				1    0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 
				
				4
				1    1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
				-1    0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 
				1    0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
				-1    0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 
				
				5
				1    1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 
				-1    0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 
				1    0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 
				-1    0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 
				1    0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 
				
				5
				1    1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 
				-1    0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 
				1    0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 
				-1    0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 
				-1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>reimer4</ID>
            <Name>Reimer4</Name>
            <Variables>x,y,z,w</Variables>
            <TagsList>DevRevLex, DegLex, Lex, reimer4, with_4_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_4_vars</TestEnvironment>
            <Equations>2*x^2-2*y^2+2*z^2-2*w^2-1,2*x^3-2*y^3+2*z^3-2*w^3-1,2*x^4-2*y^4+2*z^4-2*w^4-1,2*x^5-2*y^5+2*z^5-2*w^5-1</Equations>
            <GBasisLen>17</GBasisLen>
            <HilbertPolynomial>36</HilbertPolynomial>
            <Polynomials>
				4
				
				5
				2    2 0 0 0 
				-2    0 2 0 0 
				2    0 0 2 0 
				-2    0 0 0 2 
				-1    0 0 0 0 
				
				5
				2    3 0 0 0 
				-2    0 3 0 0 
				2    0 0 3 0 
				-2    0 0 0 3 
				-1    0 0 0 0 
				
				5
				2    4 0 0 0 
				-2    0 4 0 0 
				2    0 0 4 0 
				-2    0 0 0 4 
				-1    0 0 0 0 
				
				5
				2    5 0 0 0 
				-2    0 5 0 0 
				2    0 0 5 0 
				-2    0 0 0 5 
				-1    0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>reimer5</ID>
            <Name>Reimer5</Name>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, reimer5, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>2*x^2-2*y^2+2*z^2-2*w^2+2*u^2-1,2*x^3-2*y^3+2*z^3-2*w^3+2*u^3-1,2*x^4-2*y^4+2*z^4-2*w^4+2*u^4-1,2*x^5-2*y^5+2*z^5-2*w^5+2*u^5-1,2*x^6-2*y^6+2*z^6-2*w^6+2*u^6-1</Equations>
            <GBasisLen>38</GBasisLen>
            <HilbertPolynomial>144</HilbertPolynomial>
            <Polynomials>
				5
				
				6
				2    2 0 0 0 0 
				-2    0 2 0 0 0 
				2    0 0 2 0 0 
				-2    0 0 0 2 0 
				2    0 0 0 0 2 
				-1    0 0 0 0 0 
				
				6
				2    3 0 0 0 0 
				-2    0 3 0 0 0 
				2    0 0 3 0 0 
				-2    0 0 0 3 0 
				2    0 0 0 0 3 
				-1    0 0 0 0 0 
				
				6
				2    4 0 0 0 0 
				-2    0 4 0 0 0 
				2    0 0 4 0 0 
				-2    0 0 0 4 0 
				2    0 0 0 0 4 
				-1    0 0 0 0 0 
				
				6
				2    5 0 0 0 0 
				-2    0 5 0 0 0 
				2    0 0 5 0 0 
				-2    0 0 0 5 0 
				2    0 0 0 0 5 
				-1    0 0 0 0 0 
				
				6
				2    6 0 0 0 0 
				-2    0 6 0 0 0 
				2    0 0 6 0 0 
				-2    0 0 0 6 0 
				2    0 0 0 0 6 
				-1    0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>reimer6</ID>
            <Name>Reimer6</Name>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, reimer6, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>2*x^2-2*y^2+2*z^2-2*w^2+2*u^2-2*v^2-1,2*x^3-2*y^3+2*z^3-2*w^3+2*u^3-2*v^3-1,2*x^4-2*y^4+2*z^4-2*w^4+2*u^4-2*v^4-1,2*x^5-2*y^5+2*z^5-2*w^5+2*u^5-2*v^5-1,2*x^6-2*y^6+2*z^6-2*w^6+2*u^6-2*v^6-1,2*x^7-2*y^7+2*z^7-2*w^7+2*u^7-2*v^7-1</Equations>
            <GBasisLen>95</GBasisLen>
            <HilbertPolynomial>576</HilbertPolynomial>
            <Polynomials>
				6
				
				7
				2    2 0 0 0 0 0 
				-2    0 2 0 0 0 0 
				2    0 0 2 0 0 0 
				-2    0 0 0 2 0 0 
				2    0 0 0 0 2 0 
				-2    0 0 0 0 0 2 
				-1    0 0 0 0 0 0 
				
				7
				2    3 0 0 0 0 0 
				-2    0 3 0 0 0 0 
				2    0 0 3 0 0 0 
				-2    0 0 0 3 0 0 
				2    0 0 0 0 3 0 
				-2    0 0 0 0 0 3 
				-1    0 0 0 0 0 0 
				
				7
				2    4 0 0 0 0 0 
				-2    0 4 0 0 0 0 
				2    0 0 4 0 0 0 
				-2    0 0 0 4 0 0 
				2    0 0 0 0 4 0 
				-2    0 0 0 0 0 4 
				-1    0 0 0 0 0 0 
				
				7
				2    5 0 0 0 0 0 
				-2    0 5 0 0 0 0 
				2    0 0 5 0 0 0 
				-2    0 0 0 5 0 0 
				2    0 0 0 0 5 0 
				-2    0 0 0 0 0 5 
				-1    0 0 0 0 0 0 
				
				7
				2    6 0 0 0 0 0 
				-2    0 6 0 0 0 0 
				2    0 0 6 0 0 0 
				-2    0 0 0 6 0 0 
				2    0 0 0 0 6 0 
				-2    0 0 0 0 0 6 
				-1    0 0 0 0 0 0 
				
				7
				2    7 0 0 0 0 0 
				-2    0 7 0 0 0 0 
				2    0 0 7 0 0 0 
				-2    0 0 0 7 0 0 
				2    0 0 0 0 7 0 
				-2    0 0 0 0 0 7 
				-1    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>reimer7</ID>
            <Name>Reimer7</Name>
            <Variables>x,y,z,w,u,v,r</Variables>
            <TagsList>DevRevLex, DegLex, Lex, reimer7, with_7_vars</TagsList>
            <TestEnvironment>rings_with_7_vars</TestEnvironment>
            <Equations>2*x^2-2*y^2+2*z^2-2*w^2+2*u^2-2*v^2+2*r^2-1,2*x^3-2*y^3+2*z^3-2*w^3+2*u^3-2*v^3+2*r^3-1,2*x^4-2*y^4+2*z^4-2*w^4+2*u^4-2*v^4+2*r^4-1,2*x^5-2*y^5+2*z^5-2*w^5+2*u^5-2*v^5+2*r^5-1,2*x^6-2*y^6+2*z^6-2*w^6+2*u^6-2*v^6+2*r^6-1,2*x^7-2*y^7+2*z^7-2*w^7+2*u^7-2*v^7+2*r^7-1,2*x^8-2*y^8+2*z^8-2*w^8+2*u^8-2*v^8+2*r^8-1</Equations>
            <GBasisLen>227</GBasisLen>
            <HilbertPolynomial>2880</HilbertPolynomial>
            <Polynomials>
				7
				
				8
				2    2 0 0 0 0 0 0 
				-2    0 2 0 0 0 0 0 
				2    0 0 2 0 0 0 0 
				-2    0 0 0 2 0 0 0 
				2    0 0 0 0 2 0 0 
				-2    0 0 0 0 0 2 0 
				2    0 0 0 0 0 0 2 
				-1    0 0 0 0 0 0 0 
				
				8
				2    3 0 0 0 0 0 0 
				-2    0 3 0 0 0 0 0 
				2    0 0 3 0 0 0 0 
				-2    0 0 0 3 0 0 0 
				2    0 0 0 0 3 0 0 
				-2    0 0 0 0 0 3 0 
				2    0 0 0 0 0 0 3 
				-1    0 0 0 0 0 0 0 
				
				8
				2    4 0 0 0 0 0 0 
				-2    0 4 0 0 0 0 0 
				2    0 0 4 0 0 0 0 
				-2    0 0 0 4 0 0 0 
				2    0 0 0 0 4 0 0 
				-2    0 0 0 0 0 4 0 
				2    0 0 0 0 0 0 4 
				-1    0 0 0 0 0 0 0 
				
				8
				2    5 0 0 0 0 0 0 
				-2    0 5 0 0 0 0 0 
				2    0 0 5 0 0 0 0 
				-2    0 0 0 5 0 0 0 
				2    0 0 0 0 5 0 0 
				-2    0 0 0 0 0 5 0 
				2    0 0 0 0 0 0 5 
				-1    0 0 0 0 0 0 0 
				
				8
				2    6 0 0 0 0 0 0 
				-2    0 6 0 0 0 0 0 
				2    0 0 6 0 0 0 0 
				-2    0 0 0 6 0 0 0 
				2    0 0 0 0 6 0 0 
				-2    0 0 0 0 0 6 0 
				2    0 0 0 0 0 0 6 
				-1    0 0 0 0 0 0 0 
				
				8
				2    7 0 0 0 0 0 0 
				-2    0 7 0 0 0 0 0 
				2    0 0 7 0 0 0 0 
				-2    0 0 0 7 0 0 0 
				2    0 0 0 0 7 0 0 
				-2    0 0 0 0 0 7 0 
				2    0 0 0 0 0 0 7 
				-1    0 0 0 0 0 0 0 
				
				8
				2    8 0 0 0 0 0 0 
				-2    0 8 0 0 0 0 0 
				2    0 0 8 0 0 0 0 
				-2    0 0 0 8 0 0 0 
				2    0 0 0 0 8 0 0 
				-2    0 0 0 0 0 8 0 
				2    0 0 0 0 0 0 8 
				-1    0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>reimer8</ID>
            <Name>Reimer8</Name>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, reimer8, with_8_vars, hard_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>
            2*x^2-2*y^2+2*z^2-2*w^2+2*u^2-2*v^2+2*r^2-2*s^2-1,2*x^3-2*y^3+2*z^3-2*w^3+2*u^3-2*v^3+2*r^3-2*s^3-1,2*x^4-2*y^4+2*z^4-2*w^4+2*u^4-2*v^4+2*r^4-2*s^4-1,2*x^5-2*y^5+2*z^5-2*w^5+2*u^5-2*v^5+2*r^5-2*s^5-1,2*x^6-2*y^6+2*z^6-2*w^6+2*u^6-2*v^6+2*r^6-2*s^6-1,2*x^7-2*y^7+2*z^7-2*w^7+2*u^7-2*v^7+2*r^7-2*s^7-1,2*x^8-2*y^8+2*z^8-2*w^8+2*u^8-2*v^8+2*r^8-2*s^8-1,2*x^9-2*y^9+2*z^9-2*w^9+2*u^9-2*v^9+2*r^9-2*s^9-1</Equations>
            <GBasisLen>-</GBasisLen>
            <HilbertPolynomial>-</HilbertPolynomial>
            <Polynomials>
				8
				
				9
				2    2 0 0 0 0 0 0 0 
				-2    0 2 0 0 0 0 0 0 
				2    0 0 2 0 0 0 0 0 
				-2    0 0 0 2 0 0 0 0 
				2    0 0 0 0 2 0 0 0 
				-2    0 0 0 0 0 2 0 0 
				2    0 0 0 0 0 0 2 0 
				-2    0 0 0 0 0 0 0 2 
				-1    0 0 0 0 0 0 0 0 
				
				9
				2    3 0 0 0 0 0 0 0 
				-2    0 3 0 0 0 0 0 0 
				2    0 0 3 0 0 0 0 0 
				-2    0 0 0 3 0 0 0 0 
				2    0 0 0 0 3 0 0 0 
				-2    0 0 0 0 0 3 0 0 
				2    0 0 0 0 0 0 3 0 
				-2    0 0 0 0 0 0 0 3 
				-1    0 0 0 0 0 0 0 0 
				
				9
				2    4 0 0 0 0 0 0 0 
				-2    0 4 0 0 0 0 0 0 
				2    0 0 4 0 0 0 0 0 
				-2    0 0 0 4 0 0 0 0 
				2    0 0 0 0 4 0 0 0 
				-2    0 0 0 0 0 4 0 0 
				2    0 0 0 0 0 0 4 0 
				-2    0 0 0 0 0 0 0 4 
				-1    0 0 0 0 0 0 0 0 
				
				9
				2    5 0 0 0 0 0 0 0 
				-2    0 5 0 0 0 0 0 0 
				2    0 0 5 0 0 0 0 0 
				-2    0 0 0 5 0 0 0 0 
				2    0 0 0 0 5 0 0 0 
				-2    0 0 0 0 0 5 0 0 
				2    0 0 0 0 0 0 5 0 
				-2    0 0 0 0 0 0 0 5 
				-1    0 0 0 0 0 0 0 0 
				
				9
				2    6 0 0 0 0 0 0 0 
				-2    0 6 0 0 0 0 0 0 
				2    0 0 6 0 0 0 0 0 
				-2    0 0 0 6 0 0 0 0 
				2    0 0 0 0 6 0 0 0 
				-2    0 0 0 0 0 6 0 0 
				2    0 0 0 0 0 0 6 0 
				-2    0 0 0 0 0 0 0 6 
				-1    0 0 0 0 0 0 0 0 
				
				9
				2    7 0 0 0 0 0 0 0 
				-2    0 7 0 0 0 0 0 0 
				2    0 0 7 0 0 0 0 0 
				-2    0 0 0 7 0 0 0 0 
				2    0 0 0 0 7 0 0 0 
				-2    0 0 0 0 0 7 0 0 
				2    0 0 0 0 0 0 7 0 
				-2    0 0 0 0 0 0 0 7 
				-1    0 0 0 0 0 0 0 0 
				
				9
				2    8 0 0 0 0 0 0 0 
				-2    0 8 0 0 0 0 0 0 
				2    0 0 8 0 0 0 0 0 
				-2    0 0 0 8 0 0 0 0 
				2    0 0 0 0 8 0 0 0 
				-2    0 0 0 0 0 8 0 0 
				2    0 0 0 0 0 0 8 0 
				-2    0 0 0 0 0 0 0 8 
				-1    0 0 0 0 0 0 0 0 
				
				9
				2    9 0 0 0 0 0 0 0 
				-2    0 9 0 0 0 0 0 0 
				2    0 0 9 0 0 0 0 0 
				-2    0 0 0 9 0 0 0 0 
				2    0 0 0 0 9 0 0 0 
				-2    0 0 0 0 0 9 0 0 
				2    0 0 0 0 0 0 9 0 
				-2    0 0 0 0 0 0 0 9 
				-1    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>s9_1</ID>
            <Name>S9_1</Name>
            <Description>\textbf{Title}: Small system from constructive Galois theory, called s9_1</Description>
            <References>\begin{itemize} \item Raphael Nauheim. 'Systems of Algebraic Equations with Bad Reduction', Universitaet Heidelberg, Interdisziplinaeres Zentrum fuer wissenschaftliches Rechnen, Preprint 95-46, Dezember 1995.\end{itemize}</References>
            <Variables>x,y,z,w,u,v,r,s</Variables>
            <TagsList>DevRevLex, DegLex, Lex, s9_1, with_8_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_8_vars</TestEnvironment>
            <Equations>
            -2*w*s-u*r,4*y+9*u,-4*z*s-3*w*r-2*u*v,9*x-7*z-8*v,-5*z*r-4*w*v-3*u-6*s,9*y-6*z*v-5*w-7*r,6*x-5*y+9*w,-7*x+9*z+8</Equations>
            <GBasisLen>15</GBasisLen>
            <HilbertPolynomial>10</HilbertPolynomial>
            <Polynomials>
				8
				
				2
				-1    0 0 0 0 1 0 1 0 
				-2    0 0 0 1 0 0 0 1 
				
				2
				4    0 1 0 0 0 0 0 0 
				9    0 0 0 0 1 0 0 0 
				
				3
				-2    0 0 0 0 1 1 0 0 
				-3    0 0 0 1 0 0 1 0 
				-4    0 0 1 0 0 0 0 1 
				
				3
				9    1 0 0 0 0 0 0 0 
				-7    0 0 1 0 0 0 0 0 
				-8    0 0 0 0 0 1 0 0 
				
				4
				-4    0 0 0 1 0 1 0 0 
				-5    0 0 1 0 0 0 1 0 
				-3    0 0 0 0 1 0 0 0 
				-6    0 0 0 0 0 0 0 1 
				
				4
				-6    0 0 1 0 0 1 0 0 
				9    0 1 0 0 0 0 0 0 
				-5    0 0 0 1 0 0 0 0 
				-7    0 0 0 0 0 0 1 0 
				
				3
				6    1 0 0 0 0 0 0 0 
				-5    0 1 0 0 0 0 0 0 
				9    0 0 0 1 0 0 0 0 
				
				3
				-7    1 0 0 0 0 0 0 0 
				9    0 0 1 0 0 0 0 0 
				8    0 0 0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>solotarev</ID>
            <Name>Solotarev</Name>
            <Description>\textbf{Title}: The system of Solotarev from the PoSSo test suite</Description>
            <References>See the PoSSo test suite</References>
            <Variables>x,y,z,w</Variables>
            <TagsList>DevRevLex, DegLex, Lex, solotarev, with_4_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_4_vars</TestEnvironment>
            <Equations>
            -x+3*z^2-2*z,-x*z+x-2*y+z^3-z^2-2,-x+3*w^2-2*w,-x*w-x+w^3-w^2+2</Equations>
            <GBasisLen>9</GBasisLen>
            <HilbertPolynomial>6</HilbertPolynomial>
            <Polynomials>
				4
				
				3
				3    0 0 2 0 
				-1    1 0 0 0 
				-2    0 0 1 0 
				
				6
				1    0 0 3 0 
				-1    1 0 1 0 
				-1    0 0 2 0 
				1    1 0 0 0 
				-2    0 1 0 0 
				-2    0 0 0 0 
				
				3
				3    0 0 0 2 
				-1    1 0 0 0 
				-2    0 0 0 1 
				
				5
				1    0 0 0 3 
				-1    1 0 0 1 
				-1    0 0 0 2 
				-1    1 0 0 0 
				2    0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>sparse5</ID>
            <Name>Sparse5</Name>
            <Description>\textbf{Title}: A 5-dimensional sparse symmetric polynomial system,\\ \textbf{Symmetry group}: Invariant under all permutations + sign symmetry, generated by: -x1 -x2 x3 x4 x5, -x1 x2 -x3 x4 x5, -x1 x2 x3 -x4 x5, -x1 x2 x3 x4-x5</Description>
            <References>\begin{itemize} \item Jan Verschelde and Karin Gatermann. `Symmetric Newton Polytopes for Solving Sparse Polynomial Systems', Adv. Appl. Math., 16(1): 95-127, 1995.\end{itemize}</References>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, sparse5, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>
            x^2*y^2*z^2*w^2*u^2+3*x^2+x*y*z*w*u+y^2+z^2+w^2+u^2+5,x^2*y^2*z^2*w^2*u^2+x^2+x*y*z*w*u+3*y^2+z^2+w^2+u^2+5,x^2*y^2*z^2*w^2*u^2+x^2+x*y*z*w*u+y^2+3*z^2+w^2+u^2+5,x^2*y^2*z^2*w^2*u^2+x^2+x*y*z*w*u+y^2+z^2+3*w^2+u^2+5,x^2*y^2*z^2*w^2*u^2+x^2+x*y*z*w*u+y^2+z^2+w^2+3*u^2+5</Equations>
            <GBasisLen>5</GBasisLen>
            <HilbertPolynomial>160</HilbertPolynomial>
            <Polynomials>
				5
				
				8
				1    2 2 2 2 2 
				1    1 1 1 1 1 
				3    2 0 0 0 0 
				1    0 2 0 0 0 
				1    0 0 2 0 0 
				1    0 0 0 2 0 
				1    0 0 0 0 2 
				5    0 0 0 0 0 
				
				8
				1    2 2 2 2 2 
				1    1 1 1 1 1 
				1    2 0 0 0 0 
				3    0 2 0 0 0 
				1    0 0 2 0 0 
				1    0 0 0 2 0 
				1    0 0 0 0 2 
				5    0 0 0 0 0 
				
				8
				1    2 2 2 2 2 
				1    1 1 1 1 1 
				1    2 0 0 0 0 
				1    0 2 0 0 0 
				3    0 0 2 0 0 
				1    0 0 0 2 0 
				1    0 0 0 0 2 
				5    0 0 0 0 0 
				
				8
				1    2 2 2 2 2 
				1    1 1 1 1 1 
				1    2 0 0 0 0 
				1    0 2 0 0 0 
				1    0 0 2 0 0 
				3    0 0 0 2 0 
				1    0 0 0 0 2 
				5    0 0 0 0 0 
				
				8
				1    2 2 2 2 2 
				1    1 1 1 1 1 
				1    2 0 0 0 0 
				1    0 2 0 0 0 
				1    0 0 2 0 0 
				1    0 0 0 2 0 
				3    0 0 0 0 2 
				5    0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>speer</ID>
            <Name>Speer</Name>
            <Description>\textbf{Title}: The system of E.R. Speer\\ \textbf{Symmetry group}: x3 x4 x1 x2,  x4 x3 x2 x1</Description>
            <References>\begin{itemize} \item Karin Gatermann. `Symbolic solution of polynomial equation systems with symmetry', Proceedings of ISSAC-90, pp 112-119, ACM New York. \end{itemize}</References>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, speer, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>
            4*u*v*x*y*z*w-4*u*v*x*y-4*u*v*x*w-4*u*v*y*z-4*u*v*z*w-24*u*x^2*y*z*w+24*u*x^2*y+24*u*x^2*w+8*u*x*y^2*z*w-8*u*x*y^2+8*u*x*y*z^2*w+8*u*x*y*z*w^2+16*u*x*y*z-16*u*x*y*w+16*u*x*z*w-8*u*x*w^2-8*u*y^2*z-8*u*y*z^2-16*u*y*z*w-8*u*z^2*w-8*u*z*w^2-y*z*w+y+w,4*u*v*x*y*z*w-4*u*v*x*y-4*u*v*x*w-4*u*v*y*z-4*u*v*z*w+8*u*x^2*y*z*w-8*u*x^2*y-8*u*x^2*w+8*u*x*y^2*z*w-8*u*x*y^2-24*u*x*y*z^2*w+8*u*x*y*z*w^2+16*u*x*y*z-16*u*x*y*w+16*u*x*z*w-8*u*x*w^2-8*u*y^2*z+24*u*y*z^2-16*u*y*z*w+24*u*z^2*w-8*u*z*w^2-x*y*w+y+w,4*u*v*x*y*z*w-4*u*v*x*y-4*u*v*x*w-4*u*v*y*z-4*u*v*z*w+8*u*x^2*y*z*w-8*u*x^2*y-8*u*x^2*w-24*u*x*y^2*z*w+24*u*x*y^2+8*u*x*y*z^2*w+8*u*x*y*z*w^2-16*u*x*y*z+16*u*x*y*w-16*u*x*z*w-8*u*x*w^2+24*u*y^2*z-8*u*y*z^2+16*u*y*z*w-8*u*z^2*w-8*u*z*w^2-x*z*w+x+z,4*u*v*x*y*z*w-4*u*v*x*y-4*u*v*x*w-4*u*v*y*z-4*u*v*z*w+8*u*x^2*y*z*w-8*u*x^2*y-8*u*x^2*w+8*u*x*y^2*z*w-8*u*x*y^2+8*u*x*y*z^2*w-24*u*x*y*z*w^2-16*u*x*y*z+16*u*x*y*w-16*u*x*z*w+24*u*x*w^2-8*u*y^2*z-8*u*y*z^2+16*u*y*z*w-8*u*z^2*w+24*u*z*w^2-x*y*z+x+z</Equations>
            <GBasisLen>44</GBasisLen>
            <HilbertPolynomial>1/3s^3 + 35s^2 - 451/3s + 218</HilbertPolynomial>
            <Polynomials>
				4
				
				24
				-24    2 1 1 1 1 0 
				8    1 2 1 1 1 0 
				8    1 1 2 1 1 0 
				8    1 1 1 2 1 0 
				4    1 1 1 1 1 1 
				24    2 1 0 0 1 0 
				-8    1 2 0 0 1 0 
				16    1 1 1 0 1 0 
				-8    0 2 1 0 1 0 
				-8    0 1 2 0 1 0 
				24    2 0 0 1 1 0 
				-16    1 1 0 1 1 0 
				16    1 0 1 1 1 0 
				-16    0 1 1 1 1 0 
				-8    0 0 2 1 1 0 
				-8    1 0 0 2 1 0 
				-8    0 0 1 2 1 0 
				-4    1 1 0 0 1 1 
				-4    0 1 1 0 1 1 
				-4    1 0 0 1 1 1 
				-4    0 0 1 1 1 1 
				-1    0 1 1 1 0 0 
				1    0 1 0 0 0 0 
				1    0 0 0 1 0 0 
				
				24
				8    2 1 1 1 1 0 
				8    1 2 1 1 1 0 
				-24    1 1 2 1 1 0 
				8    1 1 1 2 1 0 
				4    1 1 1 1 1 1 
				-8    2 1 0 0 1 0 
				-8    1 2 0 0 1 0 
				16    1 1 1 0 1 0 
				-8    0 2 1 0 1 0 
				24    0 1 2 0 1 0 
				-8    2 0 0 1 1 0 
				-16    1 1 0 1 1 0 
				16    1 0 1 1 1 0 
				-16    0 1 1 1 1 0 
				24    0 0 2 1 1 0 
				-8    1 0 0 2 1 0 
				-8    0 0 1 2 1 0 
				-4    1 1 0 0 1 1 
				-4    0 1 1 0 1 1 
				-4    1 0 0 1 1 1 
				-4    0 0 1 1 1 1 
				-1    1 1 0 1 0 0 
				1    0 1 0 0 0 0 
				1    0 0 0 1 0 0 
				
				24
				8    2 1 1 1 1 0 
				-24    1 2 1 1 1 0 
				8    1 1 2 1 1 0 
				8    1 1 1 2 1 0 
				4    1 1 1 1 1 1 
				-8    2 1 0 0 1 0 
				24    1 2 0 0 1 0 
				-16    1 1 1 0 1 0 
				24    0 2 1 0 1 0 
				-8    0 1 2 0 1 0 
				-8    2 0 0 1 1 0 
				16    1 1 0 1 1 0 
				-16    1 0 1 1 1 0 
				16    0 1 1 1 1 0 
				-8    0 0 2 1 1 0 
				-8    1 0 0 2 1 0 
				-8    0 0 1 2 1 0 
				-4    1 1 0 0 1 1 
				-4    0 1 1 0 1 1 
				-4    1 0 0 1 1 1 
				-4    0 0 1 1 1 1 
				-1    1 0 1 1 0 0 
				1    1 0 0 0 0 0 
				1    0 0 1 0 0 0 
				
				24
				8    2 1 1 1 1 0 
				8    1 2 1 1 1 0 
				8    1 1 2 1 1 0 
				-24    1 1 1 2 1 0 
				4    1 1 1 1 1 1 
				-8    2 1 0 0 1 0 
				-8    1 2 0 0 1 0 
				-16    1 1 1 0 1 0 
				-8    0 2 1 0 1 0 
				-8    0 1 2 0 1 0 
				-8    2 0 0 1 1 0 
				16    1 1 0 1 1 0 
				-16    1 0 1 1 1 0 
				16    0 1 1 1 1 0 
				-8    0 0 2 1 1 0 
				24    1 0 0 2 1 0 
				24    0 0 1 2 1 0 
				-4    1 1 0 0 1 1 
				-4    0 1 1 0 1 1 
				-4    1 0 0 1 1 1 
				-4    0 0 1 1 1 1 
				-1    1 1 1 0 0 0 
				1    1 0 0 0 0 0 
				1    0 0 1 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>tangents</ID>
            <Name>Tangents</Name>
            <Description>\textbf{Title}: All tangent lines to four given spheres</Description>
            <References>From e-mail correspondence with Cassiano Durand (crbd@cs.purdue.edu).</References>
            <Variables>x,y,z,w,u,v</Variables>
            <TagsList>DevRevLex, DegLex, Lex, tangents, with_6_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_6_vars</TestEnvironment>
            <Equations>
            x^2+y^2+z^2-1,x*w+y*u+z*v,50*x^2-2*x*u+14*x*v+y^2-14*y*z+2*y*w+49*z^2-14*z*w+w^2+u^2+v^2-1,29*x^2-10*x*y-4*x*z-4*x*u+10*x*v+5*y^2-20*y*z+4*y*w-2*y*v+26*z^2-10*z*w+2*z*u+w^2+u^2+v^2-1,9*x^2-6*x*v+9*z^2+6*z*w+w^2+u^2+v^2-1,9*x^2+6*x*v+9*z^2-6*z*w+w^2+u^2+v^2-1</Equations>
            <GBasisLen>25</GBasisLen>
            <HilbertPolynomial>24</HilbertPolynomial>
            <Polynomials>
				6
				
				4
				1    2 0 0 0 0 0 
				1    0 2 0 0 0 0 
				1    0 0 2 0 0 0 
				-1    0 0 0 0 0 0 
				
				3
				1    1 0 0 1 0 0 
				1    0 1 0 0 1 0 
				1    0 0 1 0 0 1 
				
				12
				50    2 0 0 0 0 0 
				1    0 2 0 0 0 0 
				-14    0 1 1 0 0 0 
				49    0 0 2 0 0 0 
				2    0 1 0 1 0 0 
				-14    0 0 1 1 0 0 
				1    0 0 0 2 0 0 
				-2    1 0 0 0 1 0 
				1    0 0 0 0 2 0 
				14    1 0 0 0 0 1 
				1    0 0 0 0 0 2 
				-1    0 0 0 0 0 0 
				
				16
				29    2 0 0 0 0 0 
				-10    1 1 0 0 0 0 
				5    0 2 0 0 0 0 
				-4    1 0 1 0 0 0 
				-20    0 1 1 0 0 0 
				26    0 0 2 0 0 0 
				4    0 1 0 1 0 0 
				-10    0 0 1 1 0 0 
				1    0 0 0 2 0 0 
				-4    1 0 0 0 1 0 
				2    0 0 1 0 1 0 
				1    0 0 0 0 2 0 
				10    1 0 0 0 0 1 
				-2    0 1 0 0 0 1 
				1    0 0 0 0 0 2 
				-1    0 0 0 0 0 0 
				
				8
				9    2 0 0 0 0 0 
				9    0 0 2 0 0 0 
				6    0 0 1 1 0 0 
				1    0 0 0 2 0 0 
				1    0 0 0 0 2 0 
				-6    1 0 0 0 0 1 
				1    0 0 0 0 0 2 
				-1    0 0 0 0 0 0 
				
				8
				9    2 0 0 0 0 0 
				9    0 0 2 0 0 0 
				-6    0 0 1 1 0 0 
				1    0 0 0 2 0 0 
				1    0 0 0 0 2 0 
				6    1 0 0 0 0 1 
				1    0 0 0 0 0 2 
				-1    0 0 0 0 0 0 
				</Polynomials>
        </Example>
        <Example>
            <ID>wright</ID>
            <Name>Wright</Name>
            <Description>\textbf{Title}: System of A.H. Wright</Description>
            <References>\begin{itemize} \item M. Kojima and S. Mizuno. `Computation of all solutions to a system of polynomial equations', Math. Programming, vol 25, pp 131-157, 1983.\item A.H. Wright. `Finding all solutions to a system of polynomial equations', Math. Comp., vol 44, pp 125-133, 1985.\item W. Zulehner. `A simple homotopy method for determining all isolated solutions to polynomial systems', Math. Comp., vol 50, no 161, pp 167-177.\end{itemize}</References>
            <Variables>x,y,z,w,u</Variables>
            <TagsList>DevRevLex, DegLex, Lex, wright, with_5_vars, easy_problem</TagsList>
            <TestEnvironment>rings_with_5_vars</TestEnvironment>
            <Equations>
            x^2-x+y+z+w+u-10,x+y^2-y+z+w+u-10,x+y+z^2-z+w+u-10,x+y+z+w^2-w+u-10,x+y+z+w+u^2-u-10</Equations>
            <GBasisLen>5</GBasisLen>
            <HilbertPolynomial>32</HilbertPolynomial>
            <Polynomials>
				5
				
				7
				1    2 0 0 0 0 
				-1    1 0 0 0 0 
				1    0 1 0 0 0 
				1    0 0 1 0 0 
				1    0 0 0 1 0 
				1    0 0 0 0 1 
				-10    0 0 0 0 0 
				
				7
				1    0 2 0 0 0 
				1    1 0 0 0 0 
				-1    0 1 0 0 0 
				1    0 0 1 0 0 
				1    0 0 0 1 0 
				1    0 0 0 0 1 
				-10    0 0 0 0 0 
				
				7
				1    0 0 2 0 0 
				1    1 0 0 0 0 
				1    0 1 0 0 0 
				-1    0 0 1 0 0 
				1    0 0 0 1 0 
				1    0 0 0 0 1 
				-10    0 0 0 0 0 
				
				7
				1    0 0 0 2 0 
				1    1 0 0 0 0 
				1    0 1 0 0 0 
				1    0 0 1 0 0 
				-1    0 0 0 1 0 
				1    0 0 0 0 1 
				-10    0 0 0 0 0 
				
				7
				1    0 0 0 0 2 
				1    1 0 0 0 0 
				1    0 1 0 0 0 
				1    0 0 1 0 0 
				1    0 0 0 1 0 
				-1    0 0 0 0 1 
				-10    0 0 0 0 0 
				</Polynomials>
        </Example>
    </Examples>
</Benchmarks>
